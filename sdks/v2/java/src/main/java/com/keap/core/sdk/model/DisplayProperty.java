/*
 * Keap REST API
 * Keap REST Core Service
 *
 * The version of the OpenAPI document: 2.70.0.812056
 * Contact: api@keap.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.keap.core.sdk.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.keap.core.sdk.model.DisplayPropertySource;
import com.keap.core.sdk.model.PipelineCustomField;
import com.keap.core.sdk.model.PipelineCustomFieldDisplayOptions;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.Arrays;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import jakarta.validation.constraints.*;
import jakarta.validation.Valid;


/**
 * A property for a group inside a display form
 */
@Schema(description = "A property for a group inside a display form")
@JsonPropertyOrder({
  DisplayProperty.JSON_PROPERTY_ID,
  DisplayProperty.JSON_PROPERTY_PROPERTY,
  DisplayProperty.JSON_PROPERTY_SOURCE,
  DisplayProperty.JSON_PROPERTY_SYSTEM_FIELD_RECORD,
  DisplayProperty.JSON_PROPERTY_SYSTEM_FIELD_ID,
  DisplayProperty.JSON_PROPERTY_LABEL,
  DisplayProperty.JSON_PROPERTY_DESCRIPTION,
  DisplayProperty.JSON_PROPERTY_HELPER_TEXT,
  DisplayProperty.JSON_PROPERTY_DEFAULT_VALUE,
  DisplayProperty.JSON_PROPERTY_DISPLAY_OPTIONS
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.13.0")
public class DisplayProperty implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_ID = "id";
  @jakarta.annotation.Nullable  private String id;

  public static final String JSON_PROPERTY_PROPERTY = "property";
  @jakarta.annotation.Nullable  private PipelineCustomField property;

  public static final String JSON_PROPERTY_SOURCE = "source";
  @jakarta.annotation.Nullable  private DisplayPropertySource source;

  public static final String JSON_PROPERTY_SYSTEM_FIELD_RECORD = "system_field_record";
  @jakarta.annotation.Nullable  private String systemFieldRecord;

  public static final String JSON_PROPERTY_SYSTEM_FIELD_ID = "system_field_id";
  @jakarta.annotation.Nullable  private String systemFieldId;

  public static final String JSON_PROPERTY_LABEL = "label";
  @jakarta.annotation.Nullable  private String label;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  @jakarta.annotation.Nullable  private String description;

  public static final String JSON_PROPERTY_HELPER_TEXT = "helper_text";
  @jakarta.annotation.Nullable  private String helperText;

  public static final String JSON_PROPERTY_DEFAULT_VALUE = "default_value";
  @jakarta.annotation.Nullable  private Object defaultValue = null;

  public static final String JSON_PROPERTY_DISPLAY_OPTIONS = "display_options";
  @jakarta.annotation.Nullable  private PipelineCustomFieldDisplayOptions displayOptions;

  public DisplayProperty() { 
  }

  public DisplayProperty id(@jakarta.annotation.Nullable String id) {
    this.id = id;
    return this;
  }

  /**
   * Unique identifier for the display property.
   * @return id
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "Unique identifier for the display property.")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(@jakarta.annotation.Nullable String id) {
    this.id = id;
  }


  public DisplayProperty property(@jakarta.annotation.Nullable PipelineCustomField property) {
    this.property = property;
    return this;
  }

  /**
   * The custom field that defines this display property.
   * @return property
   */
  @jakarta.annotation.Nullable  @Valid
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "The custom field that defines this display property.")
  @JsonProperty(JSON_PROPERTY_PROPERTY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public PipelineCustomField getProperty() {
    return property;
  }


  @JsonProperty(JSON_PROPERTY_PROPERTY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProperty(@jakarta.annotation.Nullable PipelineCustomField property) {
    this.property = property;
  }


  public DisplayProperty source(@jakarta.annotation.Nullable DisplayPropertySource source) {
    this.source = source;
    return this;
  }

  /**
   * The source of the display property.
   * @return source
   */
  @jakarta.annotation.Nullable  @Valid
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "The source of the display property.")
  @JsonProperty(JSON_PROPERTY_SOURCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public DisplayPropertySource getSource() {
    return source;
  }


  @JsonProperty(JSON_PROPERTY_SOURCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSource(@jakarta.annotation.Nullable DisplayPropertySource source) {
    this.source = source;
  }


  public DisplayProperty systemFieldRecord(@jakarta.annotation.Nullable String systemFieldRecord) {
    this.systemFieldRecord = systemFieldRecord;
    return this;
  }

  /**
   * Represents the domain (e.g., pipeline, contact) that this display property belongs to.
   * @return systemFieldRecord
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "Represents the domain (e.g., pipeline, contact) that this display property belongs to.")
  @JsonProperty(JSON_PROPERTY_SYSTEM_FIELD_RECORD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getSystemFieldRecord() {
    return systemFieldRecord;
  }


  @JsonProperty(JSON_PROPERTY_SYSTEM_FIELD_RECORD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSystemFieldRecord(@jakarta.annotation.Nullable String systemFieldRecord) {
    this.systemFieldRecord = systemFieldRecord;
  }


  public DisplayProperty systemFieldId(@jakarta.annotation.Nullable String systemFieldId) {
    this.systemFieldId = systemFieldId;
    return this;
  }

  /**
   * Represents the identifier of the system field that is in that displayProperty. The source of this field will depend on the domain (e. g., \&quot;dealName\&quot; in pipelines)
   * @return systemFieldId
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "Represents the identifier of the system field that is in that displayProperty. The source of this field will depend on the domain (e. g., \"dealName\" in pipelines)")
  @JsonProperty(JSON_PROPERTY_SYSTEM_FIELD_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getSystemFieldId() {
    return systemFieldId;
  }


  @JsonProperty(JSON_PROPERTY_SYSTEM_FIELD_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSystemFieldId(@jakarta.annotation.Nullable String systemFieldId) {
    this.systemFieldId = systemFieldId;
  }


  public DisplayProperty label(@jakarta.annotation.Nullable String label) {
    this.label = label;
    return this;
  }

  /**
   * The label to display on this property to help users identify it
   * @return label
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "The label to display on this property to help users identify it")
  @JsonProperty(JSON_PROPERTY_LABEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getLabel() {
    return label;
  }


  @JsonProperty(JSON_PROPERTY_LABEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLabel(@jakarta.annotation.Nullable String label) {
    this.label = label;
  }


  public DisplayProperty description(@jakarta.annotation.Nullable String description) {
    this.description = description;
    return this;
  }

  /**
   * Documentation that explains the purpose of this property
   * @return description
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "Documentation that explains the purpose of this property")
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(@jakarta.annotation.Nullable String description) {
    this.description = description;
  }


  public DisplayProperty helperText(@jakarta.annotation.Nullable String helperText) {
    this.helperText = helperText;
    return this;
  }

  /**
   * More detailed explanation of the property to be shown if a user requests more information about it
   * @return helperText
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "More detailed explanation of the property to be shown if a user requests more information about it")
  @JsonProperty(JSON_PROPERTY_HELPER_TEXT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getHelperText() {
    return helperText;
  }


  @JsonProperty(JSON_PROPERTY_HELPER_TEXT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHelperText(@jakarta.annotation.Nullable String helperText) {
    this.helperText = helperText;
  }


  public DisplayProperty defaultValue(@jakarta.annotation.Nullable Object defaultValue) {
    this.defaultValue = defaultValue;
    return this;
  }

  /**
   * The value of this property if a value is not explicitly provided
   * @return defaultValue
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "The value of this property if a value is not explicitly provided")
  @JsonProperty(JSON_PROPERTY_DEFAULT_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Object getDefaultValue() {
    return defaultValue;
  }


  @JsonProperty(JSON_PROPERTY_DEFAULT_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDefaultValue(@jakarta.annotation.Nullable Object defaultValue) {
    this.defaultValue = defaultValue;
  }


  public DisplayProperty displayOptions(@jakarta.annotation.Nullable PipelineCustomFieldDisplayOptions displayOptions) {
    this.displayOptions = displayOptions;
    return this;
  }

  /**
   * Allowed values for this property
   * @return displayOptions
   */
  @jakarta.annotation.Nullable  @Valid
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "Allowed values for this property")
  @JsonProperty(JSON_PROPERTY_DISPLAY_OPTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public PipelineCustomFieldDisplayOptions getDisplayOptions() {
    return displayOptions;
  }


  @JsonProperty(JSON_PROPERTY_DISPLAY_OPTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDisplayOptions(@jakarta.annotation.Nullable PipelineCustomFieldDisplayOptions displayOptions) {
    this.displayOptions = displayOptions;
  }

  /**
   * Return true if this DisplayProperty object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DisplayProperty displayProperty = (DisplayProperty) o;
    return Objects.equals(this.id, displayProperty.id) &&
        Objects.equals(this.property, displayProperty.property) &&
        Objects.equals(this.source, displayProperty.source) &&
        Objects.equals(this.systemFieldRecord, displayProperty.systemFieldRecord) &&
        Objects.equals(this.systemFieldId, displayProperty.systemFieldId) &&
        Objects.equals(this.label, displayProperty.label) &&
        Objects.equals(this.description, displayProperty.description) &&
        Objects.equals(this.helperText, displayProperty.helperText) &&
        Objects.equals(this.defaultValue, displayProperty.defaultValue) &&
        Objects.equals(this.displayOptions, displayProperty.displayOptions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, property, source, systemFieldRecord, systemFieldId, label, description, helperText, defaultValue, displayOptions);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DisplayProperty {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    property: ").append(toIndentedString(property)).append("\n");
    sb.append("    source: ").append(toIndentedString(source)).append("\n");
    sb.append("    systemFieldRecord: ").append(toIndentedString(systemFieldRecord)).append("\n");
    sb.append("    systemFieldId: ").append(toIndentedString(systemFieldId)).append("\n");
    sb.append("    label: ").append(toIndentedString(label)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    helperText: ").append(toIndentedString(helperText)).append("\n");
    sb.append("    defaultValue: ").append(toIndentedString(defaultValue)).append("\n");
    sb.append("    displayOptions: ").append(toIndentedString(displayOptions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

    public static class Builder {
    
        private DisplayProperty instance;
    
        public Builder() {
          this(new DisplayProperty());
        }
    
        protected Builder(DisplayProperty instance) {
          this.instance = instance;
        }
    
        public DisplayProperty.Builder id(String id) {
              this.instance.id = id;
          return this;
        }
            public DisplayProperty.Builder property(PipelineCustomField property) {
              this.instance.property = property;
          return this;
        }
            public DisplayProperty.Builder source(DisplayPropertySource source) {
              this.instance.source = source;
          return this;
        }
            public DisplayProperty.Builder systemFieldRecord(String systemFieldRecord) {
              this.instance.systemFieldRecord = systemFieldRecord;
          return this;
        }
            public DisplayProperty.Builder systemFieldId(String systemFieldId) {
              this.instance.systemFieldId = systemFieldId;
          return this;
        }
            public DisplayProperty.Builder label(String label) {
              this.instance.label = label;
          return this;
        }
            public DisplayProperty.Builder description(String description) {
              this.instance.description = description;
          return this;
        }
            public DisplayProperty.Builder helperText(String helperText) {
              this.instance.helperText = helperText;
          return this;
        }
            public DisplayProperty.Builder defaultValue(Object defaultValue) {
              this.instance.defaultValue = defaultValue;
          return this;
        }
            public DisplayProperty.Builder displayOptions(PipelineCustomFieldDisplayOptions displayOptions) {
              this.instance.displayOptions = displayOptions;
          return this;
        }
        
    
        /**
        * returns a built DisplayProperty instance.
        *
        * The builder is not reusable.
        */
        public DisplayProperty build() {
          try {
            return this.instance;
          } finally {
            // ensure that this.instance is not reused
            this.instance = null;
          }
        }
    
        @Override
        public String toString() {
          return getClass() + "=(" + instance + ")";
        }
      }
    
      /**
      * Create a builder with no initialized field.
      */
      public static DisplayProperty.Builder builder() {
        return new DisplayProperty.Builder();
      }
    
      /**
      * Create a builder with a shallow copy of this instance.
      */
      public DisplayProperty.Builder toBuilder() {
        return new DisplayProperty.Builder()
          .id(getId())
          .property(getProperty())
          .source(getSource())
          .systemFieldRecord(getSystemFieldRecord())
          .systemFieldId(getSystemFieldId())
          .label(getLabel())
          .description(getDescription())
          .helperText(getHelperText())
          .defaultValue(getDefaultValue())
          .displayOptions(getDisplayOptions());
      }
}

