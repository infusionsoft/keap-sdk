/*
 * Keap REST API
 * Keap REST Core Service
 *
 * The version of the OpenAPI document: 2.70.0.809589
 * Contact: api@keap.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.keap.core.sdk.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.keap.core.sdk.model.PipelineCustomFieldSizeValidator;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.Arrays;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import jakarta.validation.constraints.*;
import jakarta.validation.Valid;


/**
 * Class representing a validator for custom field properties.
 */
@Schema(description = "Class representing a validator for custom field properties.")
@JsonPropertyOrder({
  PipelineCustomFieldPropertyValidator.JSON_PROPERTY_SIZE,
  PipelineCustomFieldPropertyValidator.JSON_PROPERTY_REQUIRED
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.13.0")
public class PipelineCustomFieldPropertyValidator implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_SIZE = "size";
  @jakarta.annotation.Nonnull  private PipelineCustomFieldSizeValidator size;

  public static final String JSON_PROPERTY_REQUIRED = "required";
  @jakarta.annotation.Nonnull  private Boolean required;

  public PipelineCustomFieldPropertyValidator() { 
  }

  public PipelineCustomFieldPropertyValidator size(@jakarta.annotation.Nonnull PipelineCustomFieldSizeValidator size) {
    this.size = size;
    return this;
  }

  /**
   * The size validator for the custom field. This field is required.
   * @return size
   */
  @jakarta.annotation.Nonnull  @NotNull
  @Valid
  @Schema(requiredMode = Schema.RequiredMode.REQUIRED, description = "The size validator for the custom field. This field is required.")
  @JsonProperty(JSON_PROPERTY_SIZE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public PipelineCustomFieldSizeValidator getSize() {
    return size;
  }


  @JsonProperty(JSON_PROPERTY_SIZE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSize(@jakarta.annotation.Nonnull PipelineCustomFieldSizeValidator size) {
    this.size = size;
  }


  public PipelineCustomFieldPropertyValidator required(@jakarta.annotation.Nonnull Boolean required) {
    this.required = required;
    return this;
  }

  /**
   * Indicates whether the custom field is required.
   * @return required
   */
  @jakarta.annotation.Nonnull  @NotNull
  @Schema(requiredMode = Schema.RequiredMode.REQUIRED, description = "Indicates whether the custom field is required.")
  @JsonProperty(JSON_PROPERTY_REQUIRED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public Boolean getRequired() {
    return required;
  }


  @JsonProperty(JSON_PROPERTY_REQUIRED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRequired(@jakarta.annotation.Nonnull Boolean required) {
    this.required = required;
  }

  /**
   * Return true if this PipelineCustomFieldPropertyValidator object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PipelineCustomFieldPropertyValidator pipelineCustomFieldPropertyValidator = (PipelineCustomFieldPropertyValidator) o;
    return Objects.equals(this.size, pipelineCustomFieldPropertyValidator.size) &&
        Objects.equals(this.required, pipelineCustomFieldPropertyValidator.required);
  }

  @Override
  public int hashCode() {
    return Objects.hash(size, required);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PipelineCustomFieldPropertyValidator {\n");
    sb.append("    size: ").append(toIndentedString(size)).append("\n");
    sb.append("    required: ").append(toIndentedString(required)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

    public static class Builder {
    
        private PipelineCustomFieldPropertyValidator instance;
    
        public Builder() {
          this(new PipelineCustomFieldPropertyValidator());
        }
    
        protected Builder(PipelineCustomFieldPropertyValidator instance) {
          this.instance = instance;
        }
    
        public PipelineCustomFieldPropertyValidator.Builder size(PipelineCustomFieldSizeValidator size) {
              this.instance.size = size;
          return this;
        }
            public PipelineCustomFieldPropertyValidator.Builder required(Boolean required) {
              this.instance.required = required;
          return this;
        }
        
    
        /**
        * returns a built PipelineCustomFieldPropertyValidator instance.
        *
        * The builder is not reusable.
        */
        public PipelineCustomFieldPropertyValidator build() {
          try {
            return this.instance;
          } finally {
            // ensure that this.instance is not reused
            this.instance = null;
          }
        }
    
        @Override
        public String toString() {
          return getClass() + "=(" + instance + ")";
        }
      }
    
      /**
      * Create a builder with no initialized field.
      */
      public static PipelineCustomFieldPropertyValidator.Builder builder() {
        return new PipelineCustomFieldPropertyValidator.Builder();
      }
    
      /**
      * Create a builder with a shallow copy of this instance.
      */
      public PipelineCustomFieldPropertyValidator.Builder toBuilder() {
        return new PipelineCustomFieldPropertyValidator.Builder()
          .size(getSize())
          .required(getRequired());
      }
}

