/*
 * Keap REST API
 * Keap REST Core Service
 *
 * The version of the OpenAPI document: 2.70.0.863963
 * Contact: api@keap.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.keap.core.sdk.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.Arrays;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import jakarta.validation.constraints.*;
import jakarta.validation.Valid;


/**
 * OrderItemProduct
 */
@JsonPropertyOrder({
  OrderItemProduct.JSON_PROPERTY_DESCRIPTION,
  OrderItemProduct.JSON_PROPERTY_ID,
  OrderItemProduct.JSON_PROPERTY_NAME,
  OrderItemProduct.JSON_PROPERTY_SHIPPABLE,
  OrderItemProduct.JSON_PROPERTY_SKU,
  OrderItemProduct.JSON_PROPERTY_TAXABLE
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.13.0")
public class OrderItemProduct implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  @jakarta.annotation.Nullable  private String description;

  public static final String JSON_PROPERTY_ID = "id";
  @jakarta.annotation.Nullable  private String id;

  public static final String JSON_PROPERTY_NAME = "name";
  @jakarta.annotation.Nullable  private String name;

  public static final String JSON_PROPERTY_SHIPPABLE = "shippable";
  @jakarta.annotation.Nullable  private Boolean shippable;

  public static final String JSON_PROPERTY_SKU = "sku";
  @jakarta.annotation.Nullable  private String sku;

  public static final String JSON_PROPERTY_TAXABLE = "taxable";
  @jakarta.annotation.Nullable  private Boolean taxable;

  public OrderItemProduct() { 
  }

  public OrderItemProduct description(@jakarta.annotation.Nullable String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(@jakarta.annotation.Nullable String description) {
    this.description = description;
  }


  public OrderItemProduct id(@jakarta.annotation.Nullable String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(@jakarta.annotation.Nullable String id) {
    this.id = id;
  }


  public OrderItemProduct name(@jakarta.annotation.Nullable String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(@jakarta.annotation.Nullable String name) {
    this.name = name;
  }


  public OrderItemProduct shippable(@jakarta.annotation.Nullable Boolean shippable) {
    this.shippable = shippable;
    return this;
  }

  /**
   * Get shippable
   * @return shippable
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_SHIPPABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getShippable() {
    return shippable;
  }


  @JsonProperty(JSON_PROPERTY_SHIPPABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setShippable(@jakarta.annotation.Nullable Boolean shippable) {
    this.shippable = shippable;
  }


  public OrderItemProduct sku(@jakarta.annotation.Nullable String sku) {
    this.sku = sku;
    return this;
  }

  /**
   * Get sku
   * @return sku
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_SKU)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getSku() {
    return sku;
  }


  @JsonProperty(JSON_PROPERTY_SKU)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSku(@jakarta.annotation.Nullable String sku) {
    this.sku = sku;
  }


  public OrderItemProduct taxable(@jakarta.annotation.Nullable Boolean taxable) {
    this.taxable = taxable;
    return this;
  }

  /**
   * Get taxable
   * @return taxable
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_TAXABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getTaxable() {
    return taxable;
  }


  @JsonProperty(JSON_PROPERTY_TAXABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTaxable(@jakarta.annotation.Nullable Boolean taxable) {
    this.taxable = taxable;
  }

  /**
   * Return true if this OrderItemProduct object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrderItemProduct orderItemProduct = (OrderItemProduct) o;
    return Objects.equals(this.description, orderItemProduct.description) &&
        Objects.equals(this.id, orderItemProduct.id) &&
        Objects.equals(this.name, orderItemProduct.name) &&
        Objects.equals(this.shippable, orderItemProduct.shippable) &&
        Objects.equals(this.sku, orderItemProduct.sku) &&
        Objects.equals(this.taxable, orderItemProduct.taxable);
  }

  @Override
  public int hashCode() {
    return Objects.hash(description, id, name, shippable, sku, taxable);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrderItemProduct {\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    shippable: ").append(toIndentedString(shippable)).append("\n");
    sb.append("    sku: ").append(toIndentedString(sku)).append("\n");
    sb.append("    taxable: ").append(toIndentedString(taxable)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

    public static class Builder {
    
        private OrderItemProduct instance;
    
        public Builder() {
          this(new OrderItemProduct());
        }
    
        protected Builder(OrderItemProduct instance) {
          this.instance = instance;
        }
    
        public OrderItemProduct.Builder description(String description) {
              this.instance.description = description;
          return this;
        }
            public OrderItemProduct.Builder id(String id) {
              this.instance.id = id;
          return this;
        }
            public OrderItemProduct.Builder name(String name) {
              this.instance.name = name;
          return this;
        }
            public OrderItemProduct.Builder shippable(Boolean shippable) {
              this.instance.shippable = shippable;
          return this;
        }
            public OrderItemProduct.Builder sku(String sku) {
              this.instance.sku = sku;
          return this;
        }
            public OrderItemProduct.Builder taxable(Boolean taxable) {
              this.instance.taxable = taxable;
          return this;
        }
        
    
        /**
        * returns a built OrderItemProduct instance.
        *
        * The builder is not reusable.
        */
        public OrderItemProduct build() {
          try {
            return this.instance;
          } finally {
            // ensure that this.instance is not reused
            this.instance = null;
          }
        }
    
        @Override
        public String toString() {
          return getClass() + "=(" + instance + ")";
        }
      }
    
      /**
      * Create a builder with no initialized field.
      */
      public static OrderItemProduct.Builder builder() {
        return new OrderItemProduct.Builder();
      }
    
      /**
      * Create a builder with a shallow copy of this instance.
      */
      public OrderItemProduct.Builder toBuilder() {
        return new OrderItemProduct.Builder()
          .description(getDescription())
          .id(getId())
          .name(getName())
          .shippable(getShippable())
          .sku(getSku())
          .taxable(getTaxable());
      }
}

