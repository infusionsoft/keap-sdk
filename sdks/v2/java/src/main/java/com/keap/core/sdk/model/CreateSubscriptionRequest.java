/*
 * Keap REST API
 * Keap REST Core Service
 *
 * The version of the OpenAPI document: 2.70.0.834462-hf-202507221415
 * Contact: api@keap.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.keap.core.sdk.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.Arrays;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import jakarta.validation.constraints.*;
import jakarta.validation.Valid;


/**
 * CreateSubscriptionRequest
 */
@JsonPropertyOrder({
  CreateSubscriptionRequest.JSON_PROPERTY_ALLOW_DUPLICATE,
  CreateSubscriptionRequest.JSON_PROPERTY_ALLOW_TAX,
  CreateSubscriptionRequest.JSON_PROPERTY_AUTO_CHARGE,
  CreateSubscriptionRequest.JSON_PROPERTY_BILLING_AMOUNT,
  CreateSubscriptionRequest.JSON_PROPERTY_CONTACT_ID,
  CreateSubscriptionRequest.JSON_PROPERTY_PAYMENT_METHOD_ID,
  CreateSubscriptionRequest.JSON_PROPERTY_QUANTITY,
  CreateSubscriptionRequest.JSON_PROPERTY_SALE_AFFILIATE_ID,
  CreateSubscriptionRequest.JSON_PROPERTY_START_DATE,
  CreateSubscriptionRequest.JSON_PROPERTY_SUBSCRIPTION_PLAN_ID
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.13.0")
public class CreateSubscriptionRequest implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_ALLOW_DUPLICATE = "allow_duplicate";
  @jakarta.annotation.Nullable  private Boolean allowDuplicate;

  public static final String JSON_PROPERTY_ALLOW_TAX = "allow_tax";
  @jakarta.annotation.Nullable  private Boolean allowTax;

  public static final String JSON_PROPERTY_AUTO_CHARGE = "auto_charge";
  @jakarta.annotation.Nullable  private Boolean autoCharge;

  public static final String JSON_PROPERTY_BILLING_AMOUNT = "billing_amount";
  @jakarta.annotation.Nullable  private Double billingAmount;

  public static final String JSON_PROPERTY_CONTACT_ID = "contact_id";
  @jakarta.annotation.Nonnull  private String contactId;

  public static final String JSON_PROPERTY_PAYMENT_METHOD_ID = "payment_method_id";
  @jakarta.annotation.Nullable  private String paymentMethodId;

  public static final String JSON_PROPERTY_QUANTITY = "quantity";
  @jakarta.annotation.Nullable  private Integer quantity;

  public static final String JSON_PROPERTY_SALE_AFFILIATE_ID = "sale_affiliate_id";
  @jakarta.annotation.Nullable  private String saleAffiliateId;

  public static final String JSON_PROPERTY_START_DATE = "start_date";
  @jakarta.annotation.Nullable  private String startDate;

  public static final String JSON_PROPERTY_SUBSCRIPTION_PLAN_ID = "subscription_plan_id";
  @jakarta.annotation.Nonnull  private String subscriptionPlanId;

  public CreateSubscriptionRequest() { 
  }

  public CreateSubscriptionRequest allowDuplicate(@jakarta.annotation.Nullable Boolean allowDuplicate) {
    this.allowDuplicate = allowDuplicate;
    return this;
  }

  /**
   * If true, it will disable the check to see if there is already an identical subscription for the contact. Default is false.
   * @return allowDuplicate
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "If true, it will disable the check to see if there is already an identical subscription for the contact. Default is false.")
  @JsonProperty(JSON_PROPERTY_ALLOW_DUPLICATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getAllowDuplicate() {
    return allowDuplicate;
  }


  @JsonProperty(JSON_PROPERTY_ALLOW_DUPLICATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAllowDuplicate(@jakarta.annotation.Nullable Boolean allowDuplicate) {
    this.allowDuplicate = allowDuplicate;
  }


  public CreateSubscriptionRequest allowTax(@jakarta.annotation.Nullable Boolean allowTax) {
    this.allowTax = allowTax;
    return this;
  }

  /**
   * Only works if the product associated with the product subscription is taxable. Default is false.
   * @return allowTax
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "Only works if the product associated with the product subscription is taxable. Default is false.")
  @JsonProperty(JSON_PROPERTY_ALLOW_TAX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getAllowTax() {
    return allowTax;
  }


  @JsonProperty(JSON_PROPERTY_ALLOW_TAX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAllowTax(@jakarta.annotation.Nullable Boolean allowTax) {
    this.allowTax = allowTax;
  }


  public CreateSubscriptionRequest autoCharge(@jakarta.annotation.Nullable Boolean autoCharge) {
    this.autoCharge = autoCharge;
    return this;
  }

  /**
   * If the subscription should auto charge on the next billing date. Default is true.
   * @return autoCharge
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "If the subscription should auto charge on the next billing date. Default is true.")
  @JsonProperty(JSON_PROPERTY_AUTO_CHARGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getAutoCharge() {
    return autoCharge;
  }


  @JsonProperty(JSON_PROPERTY_AUTO_CHARGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAutoCharge(@jakarta.annotation.Nullable Boolean autoCharge) {
    this.autoCharge = autoCharge;
  }


  public CreateSubscriptionRequest billingAmount(@jakarta.annotation.Nullable Double billingAmount) {
    this.billingAmount = billingAmount;
    return this;
  }

  /**
   * The billing amount. Must be 0 or greater. Default is the price in the product subscription plan.
   * @return billingAmount
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "The billing amount. Must be 0 or greater. Default is the price in the product subscription plan.")
  @JsonProperty(JSON_PROPERTY_BILLING_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Double getBillingAmount() {
    return billingAmount;
  }


  @JsonProperty(JSON_PROPERTY_BILLING_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBillingAmount(@jakarta.annotation.Nullable Double billingAmount) {
    this.billingAmount = billingAmount;
  }


  public CreateSubscriptionRequest contactId(@jakarta.annotation.Nonnull String contactId) {
    this.contactId = contactId;
    return this;
  }

  /**
   * Id of the contact to create the subscription for.
   * @return contactId
   */
  @jakarta.annotation.Nonnull  @NotNull
  @Schema(requiredMode = Schema.RequiredMode.REQUIRED, description = "Id of the contact to create the subscription for.")
  @JsonProperty(JSON_PROPERTY_CONTACT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getContactId() {
    return contactId;
  }


  @JsonProperty(JSON_PROPERTY_CONTACT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setContactId(@jakarta.annotation.Nonnull String contactId) {
    this.contactId = contactId;
  }


  public CreateSubscriptionRequest paymentMethodId(@jakarta.annotation.Nullable String paymentMethodId) {
    this.paymentMethodId = paymentMethodId;
    return this;
  }

  /**
   * Id associated with the payment method. Default is the contact&#39;s most recently used card, if auto charge is true. Default is 0 otherwise.
   * @return paymentMethodId
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "Id associated with the payment method. Default is the contact's most recently used card, if auto charge is true. Default is 0 otherwise.")
  @JsonProperty(JSON_PROPERTY_PAYMENT_METHOD_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getPaymentMethodId() {
    return paymentMethodId;
  }


  @JsonProperty(JSON_PROPERTY_PAYMENT_METHOD_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPaymentMethodId(@jakarta.annotation.Nullable String paymentMethodId) {
    this.paymentMethodId = paymentMethodId;
  }


  public CreateSubscriptionRequest quantity(@jakarta.annotation.Nullable Integer quantity) {
    this.quantity = quantity;
    return this;
  }

  /**
   * The subscription quantity. Must be 1 or greater. Default is 1.
   * @return quantity
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "The subscription quantity. Must be 1 or greater. Default is 1.")
  @JsonProperty(JSON_PROPERTY_QUANTITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Integer getQuantity() {
    return quantity;
  }


  @JsonProperty(JSON_PROPERTY_QUANTITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setQuantity(@jakarta.annotation.Nullable Integer quantity) {
    this.quantity = quantity;
  }


  public CreateSubscriptionRequest saleAffiliateId(@jakarta.annotation.Nullable String saleAffiliateId) {
    this.saleAffiliateId = saleAffiliateId;
    return this;
  }

  /**
   * The affiliate id for the sale of the subscription. Default is 0.
   * @return saleAffiliateId
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "The affiliate id for the sale of the subscription. Default is 0.")
  @JsonProperty(JSON_PROPERTY_SALE_AFFILIATE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getSaleAffiliateId() {
    return saleAffiliateId;
  }


  @JsonProperty(JSON_PROPERTY_SALE_AFFILIATE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSaleAffiliateId(@jakarta.annotation.Nullable String saleAffiliateId) {
    this.saleAffiliateId = saleAffiliateId;
  }


  public CreateSubscriptionRequest startDate(@jakarta.annotation.Nullable String startDate) {
    this.startDate = startDate;
    return this;
  }

  /**
   * The first day the subscription will bill. Must not be in the past. Default is today.
   * @return startDate
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "The first day the subscription will bill. Must not be in the past. Default is today.")
  @JsonProperty(JSON_PROPERTY_START_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getStartDate() {
    return startDate;
  }


  @JsonProperty(JSON_PROPERTY_START_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStartDate(@jakarta.annotation.Nullable String startDate) {
    this.startDate = startDate;
  }


  public CreateSubscriptionRequest subscriptionPlanId(@jakarta.annotation.Nonnull String subscriptionPlanId) {
    this.subscriptionPlanId = subscriptionPlanId;
    return this;
  }

  /**
   * Id of the product subscription plan.
   * @return subscriptionPlanId
   */
  @jakarta.annotation.Nonnull  @NotNull
  @Schema(requiredMode = Schema.RequiredMode.REQUIRED, description = "Id of the product subscription plan.")
  @JsonProperty(JSON_PROPERTY_SUBSCRIPTION_PLAN_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getSubscriptionPlanId() {
    return subscriptionPlanId;
  }


  @JsonProperty(JSON_PROPERTY_SUBSCRIPTION_PLAN_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSubscriptionPlanId(@jakarta.annotation.Nonnull String subscriptionPlanId) {
    this.subscriptionPlanId = subscriptionPlanId;
  }

  /**
   * Return true if this CreateSubscriptionRequest object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateSubscriptionRequest createSubscriptionRequest = (CreateSubscriptionRequest) o;
    return Objects.equals(this.allowDuplicate, createSubscriptionRequest.allowDuplicate) &&
        Objects.equals(this.allowTax, createSubscriptionRequest.allowTax) &&
        Objects.equals(this.autoCharge, createSubscriptionRequest.autoCharge) &&
        Objects.equals(this.billingAmount, createSubscriptionRequest.billingAmount) &&
        Objects.equals(this.contactId, createSubscriptionRequest.contactId) &&
        Objects.equals(this.paymentMethodId, createSubscriptionRequest.paymentMethodId) &&
        Objects.equals(this.quantity, createSubscriptionRequest.quantity) &&
        Objects.equals(this.saleAffiliateId, createSubscriptionRequest.saleAffiliateId) &&
        Objects.equals(this.startDate, createSubscriptionRequest.startDate) &&
        Objects.equals(this.subscriptionPlanId, createSubscriptionRequest.subscriptionPlanId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(allowDuplicate, allowTax, autoCharge, billingAmount, contactId, paymentMethodId, quantity, saleAffiliateId, startDate, subscriptionPlanId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateSubscriptionRequest {\n");
    sb.append("    allowDuplicate: ").append(toIndentedString(allowDuplicate)).append("\n");
    sb.append("    allowTax: ").append(toIndentedString(allowTax)).append("\n");
    sb.append("    autoCharge: ").append(toIndentedString(autoCharge)).append("\n");
    sb.append("    billingAmount: ").append(toIndentedString(billingAmount)).append("\n");
    sb.append("    contactId: ").append(toIndentedString(contactId)).append("\n");
    sb.append("    paymentMethodId: ").append(toIndentedString(paymentMethodId)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("    saleAffiliateId: ").append(toIndentedString(saleAffiliateId)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    subscriptionPlanId: ").append(toIndentedString(subscriptionPlanId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

    public static class Builder {
    
        private CreateSubscriptionRequest instance;
    
        public Builder() {
          this(new CreateSubscriptionRequest());
        }
    
        protected Builder(CreateSubscriptionRequest instance) {
          this.instance = instance;
        }
    
        public CreateSubscriptionRequest.Builder allowDuplicate(Boolean allowDuplicate) {
              this.instance.allowDuplicate = allowDuplicate;
          return this;
        }
            public CreateSubscriptionRequest.Builder allowTax(Boolean allowTax) {
              this.instance.allowTax = allowTax;
          return this;
        }
            public CreateSubscriptionRequest.Builder autoCharge(Boolean autoCharge) {
              this.instance.autoCharge = autoCharge;
          return this;
        }
            public CreateSubscriptionRequest.Builder billingAmount(Double billingAmount) {
              this.instance.billingAmount = billingAmount;
          return this;
        }
            public CreateSubscriptionRequest.Builder contactId(String contactId) {
              this.instance.contactId = contactId;
          return this;
        }
            public CreateSubscriptionRequest.Builder paymentMethodId(String paymentMethodId) {
              this.instance.paymentMethodId = paymentMethodId;
          return this;
        }
            public CreateSubscriptionRequest.Builder quantity(Integer quantity) {
              this.instance.quantity = quantity;
          return this;
        }
            public CreateSubscriptionRequest.Builder saleAffiliateId(String saleAffiliateId) {
              this.instance.saleAffiliateId = saleAffiliateId;
          return this;
        }
            public CreateSubscriptionRequest.Builder startDate(String startDate) {
              this.instance.startDate = startDate;
          return this;
        }
            public CreateSubscriptionRequest.Builder subscriptionPlanId(String subscriptionPlanId) {
              this.instance.subscriptionPlanId = subscriptionPlanId;
          return this;
        }
        
    
        /**
        * returns a built CreateSubscriptionRequest instance.
        *
        * The builder is not reusable.
        */
        public CreateSubscriptionRequest build() {
          try {
            return this.instance;
          } finally {
            // ensure that this.instance is not reused
            this.instance = null;
          }
        }
    
        @Override
        public String toString() {
          return getClass() + "=(" + instance + ")";
        }
      }
    
      /**
      * Create a builder with no initialized field.
      */
      public static CreateSubscriptionRequest.Builder builder() {
        return new CreateSubscriptionRequest.Builder();
      }
    
      /**
      * Create a builder with a shallow copy of this instance.
      */
      public CreateSubscriptionRequest.Builder toBuilder() {
        return new CreateSubscriptionRequest.Builder()
          .allowDuplicate(getAllowDuplicate())
          .allowTax(getAllowTax())
          .autoCharge(getAutoCharge())
          .billingAmount(getBillingAmount())
          .contactId(getContactId())
          .paymentMethodId(getPaymentMethodId())
          .quantity(getQuantity())
          .saleAffiliateId(getSaleAffiliateId())
          .startDate(getStartDate())
          .subscriptionPlanId(getSubscriptionPlanId());
      }
}

