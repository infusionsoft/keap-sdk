/*
 * Keap REST API
 * Keap REST Core Service
 *
 * The version of the OpenAPI document: 2.70.0.866784-hf-202510132126
 * Contact: api@keap.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.keap.core.sdk.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.Arrays;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import jakarta.validation.constraints.*;
import jakarta.validation.Valid;


/**
 * Webform
 */
@JsonPropertyOrder({
  Webform.JSON_PROPERTY_CREATE_TIME,
  Webform.JSON_PROPERTY_CUSTOM_SLUG,
  Webform.JSON_PROPERTY_DUPLICATE_CHECK_OPTION,
  Webform.JSON_PROPERTY_EXIT_OPTION,
  Webform.JSON_PROPERTY_FUNNEL_ID,
  Webform.JSON_PROPERTY_ID,
  Webform.JSON_PROPERTY_NAME,
  Webform.JSON_PROPERTY_PRETTY_WEBFORM_URL,
  Webform.JSON_PROPERTY_THANK_YOU_PAGE_URL,
  Webform.JSON_PROPERTY_UPDATE_TIME,
  Webform.JSON_PROPERTY_WEBFORM_TYPE,
  Webform.JSON_PROPERTY_WEBFORM_URL,
  Webform.JSON_PROPERTY_XID
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.13.0")
public class Webform implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_CREATE_TIME = "create_time";
  @jakarta.annotation.Nullable  private String createTime;

  public static final String JSON_PROPERTY_CUSTOM_SLUG = "custom_slug";
  @jakarta.annotation.Nullable  private String customSlug;

  /**
   * The option that determines if the lead submitted through the form is a duplicate or not. If it&#39;s a duplicate, then the lead will be merged with the existing contact record
   */
  public enum DuplicateCheckOptionEnum {
    EMAIL(String.valueOf("EMAIL")),
    
    EMAIL_AND_NAME(String.valueOf("EMAIL_AND_NAME")),
    
    EMAIL_AND_NAME_AND_COMPANY(String.valueOf("EMAIL_AND_NAME_AND_COMPANY")),
    
    NO_CHECK(String.valueOf("NO_CHECK")),
    
    UNKNOWN_COULD_NOT_DESERIALIZE(String.valueOf("unknown_default_open_api"));

    private String value;

    DuplicateCheckOptionEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static DuplicateCheckOptionEnum fromValue(String value) {
      for (DuplicateCheckOptionEnum b : DuplicateCheckOptionEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return UNKNOWN_COULD_NOT_DESERIALIZE;
    }
  }
  public static final String JSON_PROPERTY_DUPLICATE_CHECK_OPTION = "duplicate_check_option";
  @jakarta.annotation.Nullable  private DuplicateCheckOptionEnum duplicateCheckOption;

  /**
   * The option that determines what happens after the form is submitted
   */
  public enum ExitOptionEnum {
    REDIRECT(String.valueOf("REDIRECT")),
    
    FUNNEL_LINK(String.valueOf("FUNNEL_LINK")),
    
    HOSTED(String.valueOf("HOSTED")),
    
    LANDING_PAGE(String.valueOf("LANDING_PAGE")),
    
    WEB_FORM(String.valueOf("WEB_FORM")),
    
    SURVEY(String.valueOf("SURVEY")),
    
    UPDATE(String.valueOf("UPDATE")),
    
    UPDATE_OPT_OUT(String.valueOf("UPDATE_OPT_OUT")),
    
    OPT_OUT(String.valueOf("OPT_OUT")),
    
    CONFIRM(String.valueOf("CONFIRM")),
    
    MESSAGE(String.valueOf("MESSAGE")),
    
    AUTHORING_MESSAGE(String.valueOf("AUTHORING_MESSAGE")),
    
    MANUAL(String.valueOf("MANUAL")),
    
    CLOSE(String.valueOf("CLOSE")),
    
    DISPLAY_TEXT_AND_BUTTON(String.valueOf("DISPLAY_TEXT_AND_BUTTON")),
    
    ERROR(String.valueOf("ERROR")),
    
    HOSTED_PAGE(String.valueOf("HOSTED_PAGE")),
    
    UNKNOWN_COULD_NOT_DESERIALIZE(String.valueOf("unknown_default_open_api"));

    private String value;

    ExitOptionEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ExitOptionEnum fromValue(String value) {
      for (ExitOptionEnum b : ExitOptionEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return UNKNOWN_COULD_NOT_DESERIALIZE;
    }
  }
  public static final String JSON_PROPERTY_EXIT_OPTION = "exit_option";
  @jakarta.annotation.Nullable  private ExitOptionEnum exitOption;

  public static final String JSON_PROPERTY_FUNNEL_ID = "funnel_id";
  @jakarta.annotation.Nullable  private String funnelId;

  public static final String JSON_PROPERTY_ID = "id";
  @jakarta.annotation.Nullable  private String id;

  public static final String JSON_PROPERTY_NAME = "name";
  @jakarta.annotation.Nullable  private String name;

  public static final String JSON_PROPERTY_PRETTY_WEBFORM_URL = "pretty_webform_url";
  @jakarta.annotation.Nullable  private String prettyWebformUrl;

  public static final String JSON_PROPERTY_THANK_YOU_PAGE_URL = "thank_you_page_url";
  @jakarta.annotation.Nullable  private String thankYouPageUrl;

  public static final String JSON_PROPERTY_UPDATE_TIME = "update_time";
  @jakarta.annotation.Nullable  private String updateTime;

  /**
   * The type of webform this is
   */
  public enum WebformTypeEnum {
    LEGACY(String.valueOf("LEGACY")),
    
    STANDALONE(String.valueOf("STANDALONE")),
    
    FUNNEL(String.valueOf("FUNNEL")),
    
    LANDING_PAGE(String.valueOf("LANDING_PAGE")),
    
    SURVEY(String.valueOf("SURVEY")),
    
    INTERNAL(String.valueOf("INTERNAL")),
    
    TWITTER(String.valueOf("TWITTER")),
    
    UNKNOWN(String.valueOf("UNKNOWN")),
    
    UNKNOWN_COULD_NOT_DESERIALIZE(String.valueOf("unknown_default_open_api"));

    private String value;

    WebformTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static WebformTypeEnum fromValue(String value) {
      for (WebformTypeEnum b : WebformTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return UNKNOWN_COULD_NOT_DESERIALIZE;
    }
  }
  public static final String JSON_PROPERTY_WEBFORM_TYPE = "webform_type";
  @jakarta.annotation.Nullable  private WebformTypeEnum webformType;

  public static final String JSON_PROPERTY_WEBFORM_URL = "webform_url";
  @jakarta.annotation.Nullable  private String webformUrl;

  public static final String JSON_PROPERTY_XID = "xid";
  @jakarta.annotation.Nullable  private String xid;

  public Webform() { 
  }

  public Webform createTime(@jakarta.annotation.Nullable String createTime) {
    this.createTime = createTime;
    return this;
  }

  /**
   * When the webform was created
   * @return createTime
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "When the webform was created")
  @JsonProperty(JSON_PROPERTY_CREATE_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getCreateTime() {
    return createTime;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateTime(@jakarta.annotation.Nullable String createTime) {
    this.createTime = createTime;
  }


  public Webform customSlug(@jakarta.annotation.Nullable String customSlug) {
    this.customSlug = customSlug;
    return this;
  }

  /**
   * The custom slug of the webform. Used in pretty webform URLs
   * @return customSlug
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "The custom slug of the webform. Used in pretty webform URLs")
  @JsonProperty(JSON_PROPERTY_CUSTOM_SLUG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getCustomSlug() {
    return customSlug;
  }


  @JsonProperty(JSON_PROPERTY_CUSTOM_SLUG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCustomSlug(@jakarta.annotation.Nullable String customSlug) {
    this.customSlug = customSlug;
  }


  public Webform duplicateCheckOption(@jakarta.annotation.Nullable DuplicateCheckOptionEnum duplicateCheckOption) {
    this.duplicateCheckOption = duplicateCheckOption;
    return this;
  }

  /**
   * The option that determines if the lead submitted through the form is a duplicate or not. If it&#39;s a duplicate, then the lead will be merged with the existing contact record
   * @return duplicateCheckOption
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "The option that determines if the lead submitted through the form is a duplicate or not. If it's a duplicate, then the lead will be merged with the existing contact record")
  @JsonProperty(JSON_PROPERTY_DUPLICATE_CHECK_OPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public DuplicateCheckOptionEnum getDuplicateCheckOption() {
    return duplicateCheckOption;
  }


  @JsonProperty(JSON_PROPERTY_DUPLICATE_CHECK_OPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDuplicateCheckOption(@jakarta.annotation.Nullable DuplicateCheckOptionEnum duplicateCheckOption) {
    this.duplicateCheckOption = duplicateCheckOption;
  }


  public Webform exitOption(@jakarta.annotation.Nullable ExitOptionEnum exitOption) {
    this.exitOption = exitOption;
    return this;
  }

  /**
   * The option that determines what happens after the form is submitted
   * @return exitOption
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "The option that determines what happens after the form is submitted")
  @JsonProperty(JSON_PROPERTY_EXIT_OPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public ExitOptionEnum getExitOption() {
    return exitOption;
  }


  @JsonProperty(JSON_PROPERTY_EXIT_OPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExitOption(@jakarta.annotation.Nullable ExitOptionEnum exitOption) {
    this.exitOption = exitOption;
  }


  public Webform funnelId(@jakarta.annotation.Nullable String funnelId) {
    this.funnelId = funnelId;
    return this;
  }

  /**
   * The id of the funnel this webform belongs to, if any
   * @return funnelId
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "The id of the funnel this webform belongs to, if any")
  @JsonProperty(JSON_PROPERTY_FUNNEL_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getFunnelId() {
    return funnelId;
  }


  @JsonProperty(JSON_PROPERTY_FUNNEL_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFunnelId(@jakarta.annotation.Nullable String funnelId) {
    this.funnelId = funnelId;
  }


  public Webform id(@jakarta.annotation.Nullable String id) {
    this.id = id;
    return this;
  }

  /**
   * The unique identifier for this webform
   * @return id
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "The unique identifier for this webform")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(@jakarta.annotation.Nullable String id) {
    this.id = id;
  }


  public Webform name(@jakarta.annotation.Nullable String name) {
    this.name = name;
    return this;
  }

  /**
   * The name of this webform
   * @return name
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "The name of this webform")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(@jakarta.annotation.Nullable String name) {
    this.name = name;
  }


  public Webform prettyWebformUrl(@jakarta.annotation.Nullable String prettyWebformUrl) {
    this.prettyWebformUrl = prettyWebformUrl;
    return this;
  }

  /**
   * The URL for this webform that uses the custom slug to identify it
   * @return prettyWebformUrl
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "The URL for this webform that uses the custom slug to identify it")
  @JsonProperty(JSON_PROPERTY_PRETTY_WEBFORM_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getPrettyWebformUrl() {
    return prettyWebformUrl;
  }


  @JsonProperty(JSON_PROPERTY_PRETTY_WEBFORM_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPrettyWebformUrl(@jakarta.annotation.Nullable String prettyWebformUrl) {
    this.prettyWebformUrl = prettyWebformUrl;
  }


  public Webform thankYouPageUrl(@jakarta.annotation.Nullable String thankYouPageUrl) {
    this.thankYouPageUrl = thankYouPageUrl;
    return this;
  }

  /**
   * The URL of the thank you page for this webform
   * @return thankYouPageUrl
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "The URL of the thank you page for this webform")
  @JsonProperty(JSON_PROPERTY_THANK_YOU_PAGE_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getThankYouPageUrl() {
    return thankYouPageUrl;
  }


  @JsonProperty(JSON_PROPERTY_THANK_YOU_PAGE_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setThankYouPageUrl(@jakarta.annotation.Nullable String thankYouPageUrl) {
    this.thankYouPageUrl = thankYouPageUrl;
  }


  public Webform updateTime(@jakarta.annotation.Nullable String updateTime) {
    this.updateTime = updateTime;
    return this;
  }

  /**
   * When the webform was last updated
   * @return updateTime
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "When the webform was last updated")
  @JsonProperty(JSON_PROPERTY_UPDATE_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getUpdateTime() {
    return updateTime;
  }


  @JsonProperty(JSON_PROPERTY_UPDATE_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdateTime(@jakarta.annotation.Nullable String updateTime) {
    this.updateTime = updateTime;
  }


  public Webform webformType(@jakarta.annotation.Nullable WebformTypeEnum webformType) {
    this.webformType = webformType;
    return this;
  }

  /**
   * The type of webform this is
   * @return webformType
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "The type of webform this is")
  @JsonProperty(JSON_PROPERTY_WEBFORM_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public WebformTypeEnum getWebformType() {
    return webformType;
  }


  @JsonProperty(JSON_PROPERTY_WEBFORM_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWebformType(@jakarta.annotation.Nullable WebformTypeEnum webformType) {
    this.webformType = webformType;
  }


  public Webform webformUrl(@jakarta.annotation.Nullable String webformUrl) {
    this.webformUrl = webformUrl;
    return this;
  }

  /**
   * The URL for this webform that uses the xid to identify it
   * @return webformUrl
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "The URL for this webform that uses the xid to identify it")
  @JsonProperty(JSON_PROPERTY_WEBFORM_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getWebformUrl() {
    return webformUrl;
  }


  @JsonProperty(JSON_PROPERTY_WEBFORM_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWebformUrl(@jakarta.annotation.Nullable String webformUrl) {
    this.webformUrl = webformUrl;
  }


  public Webform xid(@jakarta.annotation.Nullable String xid) {
    this.xid = xid;
    return this;
  }

  /**
   * The public unique identifier for this tag, used in webform URLs
   * @return xid
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "The public unique identifier for this tag, used in webform URLs")
  @JsonProperty(JSON_PROPERTY_XID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getXid() {
    return xid;
  }


  @JsonProperty(JSON_PROPERTY_XID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setXid(@jakarta.annotation.Nullable String xid) {
    this.xid = xid;
  }

  /**
   * Return true if this Webform object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Webform webform = (Webform) o;
    return Objects.equals(this.createTime, webform.createTime) &&
        Objects.equals(this.customSlug, webform.customSlug) &&
        Objects.equals(this.duplicateCheckOption, webform.duplicateCheckOption) &&
        Objects.equals(this.exitOption, webform.exitOption) &&
        Objects.equals(this.funnelId, webform.funnelId) &&
        Objects.equals(this.id, webform.id) &&
        Objects.equals(this.name, webform.name) &&
        Objects.equals(this.prettyWebformUrl, webform.prettyWebformUrl) &&
        Objects.equals(this.thankYouPageUrl, webform.thankYouPageUrl) &&
        Objects.equals(this.updateTime, webform.updateTime) &&
        Objects.equals(this.webformType, webform.webformType) &&
        Objects.equals(this.webformUrl, webform.webformUrl) &&
        Objects.equals(this.xid, webform.xid);
  }

  @Override
  public int hashCode() {
    return Objects.hash(createTime, customSlug, duplicateCheckOption, exitOption, funnelId, id, name, prettyWebformUrl, thankYouPageUrl, updateTime, webformType, webformUrl, xid);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Webform {\n");
    sb.append("    createTime: ").append(toIndentedString(createTime)).append("\n");
    sb.append("    customSlug: ").append(toIndentedString(customSlug)).append("\n");
    sb.append("    duplicateCheckOption: ").append(toIndentedString(duplicateCheckOption)).append("\n");
    sb.append("    exitOption: ").append(toIndentedString(exitOption)).append("\n");
    sb.append("    funnelId: ").append(toIndentedString(funnelId)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    prettyWebformUrl: ").append(toIndentedString(prettyWebformUrl)).append("\n");
    sb.append("    thankYouPageUrl: ").append(toIndentedString(thankYouPageUrl)).append("\n");
    sb.append("    updateTime: ").append(toIndentedString(updateTime)).append("\n");
    sb.append("    webformType: ").append(toIndentedString(webformType)).append("\n");
    sb.append("    webformUrl: ").append(toIndentedString(webformUrl)).append("\n");
    sb.append("    xid: ").append(toIndentedString(xid)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

    public static class Builder {
    
        private Webform instance;
    
        public Builder() {
          this(new Webform());
        }
    
        protected Builder(Webform instance) {
          this.instance = instance;
        }
    
        public Webform.Builder createTime(String createTime) {
              this.instance.createTime = createTime;
          return this;
        }
            public Webform.Builder customSlug(String customSlug) {
              this.instance.customSlug = customSlug;
          return this;
        }
            public Webform.Builder duplicateCheckOption(DuplicateCheckOptionEnum duplicateCheckOption) {
              this.instance.duplicateCheckOption = duplicateCheckOption;
          return this;
        }
            public Webform.Builder exitOption(ExitOptionEnum exitOption) {
              this.instance.exitOption = exitOption;
          return this;
        }
            public Webform.Builder funnelId(String funnelId) {
              this.instance.funnelId = funnelId;
          return this;
        }
            public Webform.Builder id(String id) {
              this.instance.id = id;
          return this;
        }
            public Webform.Builder name(String name) {
              this.instance.name = name;
          return this;
        }
            public Webform.Builder prettyWebformUrl(String prettyWebformUrl) {
              this.instance.prettyWebformUrl = prettyWebformUrl;
          return this;
        }
            public Webform.Builder thankYouPageUrl(String thankYouPageUrl) {
              this.instance.thankYouPageUrl = thankYouPageUrl;
          return this;
        }
            public Webform.Builder updateTime(String updateTime) {
              this.instance.updateTime = updateTime;
          return this;
        }
            public Webform.Builder webformType(WebformTypeEnum webformType) {
              this.instance.webformType = webformType;
          return this;
        }
            public Webform.Builder webformUrl(String webformUrl) {
              this.instance.webformUrl = webformUrl;
          return this;
        }
            public Webform.Builder xid(String xid) {
              this.instance.xid = xid;
          return this;
        }
        
    
        /**
        * returns a built Webform instance.
        *
        * The builder is not reusable.
        */
        public Webform build() {
          try {
            return this.instance;
          } finally {
            // ensure that this.instance is not reused
            this.instance = null;
          }
        }
    
        @Override
        public String toString() {
          return getClass() + "=(" + instance + ")";
        }
      }
    
      /**
      * Create a builder with no initialized field.
      */
      public static Webform.Builder builder() {
        return new Webform.Builder();
      }
    
      /**
      * Create a builder with a shallow copy of this instance.
      */
      public Webform.Builder toBuilder() {
        return new Webform.Builder()
          .createTime(getCreateTime())
          .customSlug(getCustomSlug())
          .duplicateCheckOption(getDuplicateCheckOption())
          .exitOption(getExitOption())
          .funnelId(getFunnelId())
          .id(getId())
          .name(getName())
          .prettyWebformUrl(getPrettyWebformUrl())
          .thankYouPageUrl(getThankYouPageUrl())
          .updateTime(getUpdateTime())
          .webformType(getWebformType())
          .webformUrl(getWebformUrl())
          .xid(getXid());
      }
}

