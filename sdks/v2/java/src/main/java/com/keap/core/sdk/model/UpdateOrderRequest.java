/*
 * Keap REST API
 * Keap REST Core Service
 *
 * The version of the OpenAPI document: 2.70.0.843039-hf-202508121547
 * Contact: api@keap.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.keap.core.sdk.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.keap.core.sdk.model.AddressInformation;
import com.keap.core.sdk.model.UpdatedPaymentPlan;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import jakarta.validation.constraints.*;
import jakarta.validation.Valid;


/**
 * UpdateOrderRequest
 */
@JsonPropertyOrder({
  UpdateOrderRequest.JSON_PROPERTY_CONTACT_ID,
  UpdateOrderRequest.JSON_PROPERTY_LEAD_AFFILIATE_ID,
  UpdateOrderRequest.JSON_PROPERTY_NOTES,
  UpdateOrderRequest.JSON_PROPERTY_ORDER_TIME,
  UpdateOrderRequest.JSON_PROPERTY_ORDER_TITLE,
  UpdateOrderRequest.JSON_PROPERTY_ORDER_TYPE,
  UpdateOrderRequest.JSON_PROPERTY_PAYMENT_PLAN,
  UpdateOrderRequest.JSON_PROPERTY_PROMO_CODES,
  UpdateOrderRequest.JSON_PROPERTY_SALES_AFFILIATE_ID,
  UpdateOrderRequest.JSON_PROPERTY_SHIPPING_ADDRESS,
  UpdateOrderRequest.JSON_PROPERTY_TERMS
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.13.0")
public class UpdateOrderRequest implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_CONTACT_ID = "contact_id";
  @jakarta.annotation.Nullable  private String contactId;

  public static final String JSON_PROPERTY_LEAD_AFFILIATE_ID = "lead_affiliate_id";
  @jakarta.annotation.Nullable  private String leadAffiliateId;

  public static final String JSON_PROPERTY_NOTES = "notes";
  @jakarta.annotation.Nullable  private String notes;

  public static final String JSON_PROPERTY_ORDER_TIME = "order_time";
  @jakarta.annotation.Nullable  private String orderTime;

  public static final String JSON_PROPERTY_ORDER_TITLE = "order_title";
  @jakarta.annotation.Nullable  private String orderTitle;

  /**
   * Gets or Sets orderType
   */
  public enum OrderTypeEnum {
    OFFLINE(String.valueOf("OFFLINE")),
    
    ONLINE(String.valueOf("ONLINE")),
    
    UNKNOWN_COULD_NOT_DESERIALIZE(String.valueOf("unknown_default_open_api"));

    private String value;

    OrderTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static OrderTypeEnum fromValue(String value) {
      for (OrderTypeEnum b : OrderTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return UNKNOWN_COULD_NOT_DESERIALIZE;
    }
  }
  public static final String JSON_PROPERTY_ORDER_TYPE = "order_type";
  @jakarta.annotation.Nullable  private OrderTypeEnum orderType;

  public static final String JSON_PROPERTY_PAYMENT_PLAN = "payment_plan";
  @jakarta.annotation.Nullable  private UpdatedPaymentPlan paymentPlan;

  public static final String JSON_PROPERTY_PROMO_CODES = "promo_codes";
  @jakarta.annotation.Nullable  private List<String> promoCodes = new ArrayList<>();

  public static final String JSON_PROPERTY_SALES_AFFILIATE_ID = "sales_affiliate_id";
  @jakarta.annotation.Nullable  private String salesAffiliateId;

  public static final String JSON_PROPERTY_SHIPPING_ADDRESS = "shipping_address";
  @jakarta.annotation.Nullable  private AddressInformation shippingAddress;

  public static final String JSON_PROPERTY_TERMS = "terms";
  @jakarta.annotation.Nullable  private String terms;

  public UpdateOrderRequest() { 
  }

  public UpdateOrderRequest contactId(@jakarta.annotation.Nullable String contactId) {
    this.contactId = contactId;
    return this;
  }

  /**
   * Get contactId
   * @return contactId
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_CONTACT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getContactId() {
    return contactId;
  }


  @JsonProperty(JSON_PROPERTY_CONTACT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setContactId(@jakarta.annotation.Nullable String contactId) {
    this.contactId = contactId;
  }


  public UpdateOrderRequest leadAffiliateId(@jakarta.annotation.Nullable String leadAffiliateId) {
    this.leadAffiliateId = leadAffiliateId;
    return this;
  }

  /**
   * Get leadAffiliateId
   * @return leadAffiliateId
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_LEAD_AFFILIATE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getLeadAffiliateId() {
    return leadAffiliateId;
  }


  @JsonProperty(JSON_PROPERTY_LEAD_AFFILIATE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLeadAffiliateId(@jakarta.annotation.Nullable String leadAffiliateId) {
    this.leadAffiliateId = leadAffiliateId;
  }


  public UpdateOrderRequest notes(@jakarta.annotation.Nullable String notes) {
    this.notes = notes;
    return this;
  }

  /**
   * Get notes
   * @return notes
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_NOTES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getNotes() {
    return notes;
  }


  @JsonProperty(JSON_PROPERTY_NOTES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNotes(@jakarta.annotation.Nullable String notes) {
    this.notes = notes;
  }


  public UpdateOrderRequest orderTime(@jakarta.annotation.Nullable String orderTime) {
    this.orderTime = orderTime;
    return this;
  }

  /**
   * ISO date-time of the transaction. e.g 2024-04-28 11:25:44
   * @return orderTime
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "ISO date-time of the transaction. e.g 2024-04-28 11:25:44")
  @JsonProperty(JSON_PROPERTY_ORDER_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getOrderTime() {
    return orderTime;
  }


  @JsonProperty(JSON_PROPERTY_ORDER_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOrderTime(@jakarta.annotation.Nullable String orderTime) {
    this.orderTime = orderTime;
  }


  public UpdateOrderRequest orderTitle(@jakarta.annotation.Nullable String orderTitle) {
    this.orderTitle = orderTitle;
    return this;
  }

  /**
   * Get orderTitle
   * @return orderTitle
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_ORDER_TITLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getOrderTitle() {
    return orderTitle;
  }


  @JsonProperty(JSON_PROPERTY_ORDER_TITLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOrderTitle(@jakarta.annotation.Nullable String orderTitle) {
    this.orderTitle = orderTitle;
  }


  public UpdateOrderRequest orderType(@jakarta.annotation.Nullable OrderTypeEnum orderType) {
    this.orderType = orderType;
    return this;
  }

  /**
   * Get orderType
   * @return orderType
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_ORDER_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public OrderTypeEnum getOrderType() {
    return orderType;
  }


  @JsonProperty(JSON_PROPERTY_ORDER_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOrderType(@jakarta.annotation.Nullable OrderTypeEnum orderType) {
    this.orderType = orderType;
  }


  public UpdateOrderRequest paymentPlan(@jakarta.annotation.Nullable UpdatedPaymentPlan paymentPlan) {
    this.paymentPlan = paymentPlan;
    return this;
  }

  /**
   * Get paymentPlan
   * @return paymentPlan
   */
  @jakarta.annotation.Nullable  @Valid
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_PAYMENT_PLAN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public UpdatedPaymentPlan getPaymentPlan() {
    return paymentPlan;
  }


  @JsonProperty(JSON_PROPERTY_PAYMENT_PLAN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPaymentPlan(@jakarta.annotation.Nullable UpdatedPaymentPlan paymentPlan) {
    this.paymentPlan = paymentPlan;
  }


  public UpdateOrderRequest promoCodes(@jakarta.annotation.Nullable List<String> promoCodes) {
    this.promoCodes = promoCodes;
    return this;
  }

  public UpdateOrderRequest addPromoCodesItem(String promoCodesItem) {
    if (this.promoCodes == null) {
      this.promoCodes = new ArrayList<>();
    }
    this.promoCodes.add(promoCodesItem);
    return this;
  }

  /**
   * Uses multiple strings as promo codes. The corresponding discount will be applied to the order.
   * @return promoCodes
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "Uses multiple strings as promo codes. The corresponding discount will be applied to the order.")
  @JsonProperty(JSON_PROPERTY_PROMO_CODES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<String> getPromoCodes() {
    return promoCodes;
  }


  @JsonProperty(JSON_PROPERTY_PROMO_CODES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPromoCodes(@jakarta.annotation.Nullable List<String> promoCodes) {
    this.promoCodes = promoCodes;
  }


  public UpdateOrderRequest salesAffiliateId(@jakarta.annotation.Nullable String salesAffiliateId) {
    this.salesAffiliateId = salesAffiliateId;
    return this;
  }

  /**
   * Get salesAffiliateId
   * @return salesAffiliateId
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_SALES_AFFILIATE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getSalesAffiliateId() {
    return salesAffiliateId;
  }


  @JsonProperty(JSON_PROPERTY_SALES_AFFILIATE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSalesAffiliateId(@jakarta.annotation.Nullable String salesAffiliateId) {
    this.salesAffiliateId = salesAffiliateId;
  }


  public UpdateOrderRequest shippingAddress(@jakarta.annotation.Nullable AddressInformation shippingAddress) {
    this.shippingAddress = shippingAddress;
    return this;
  }

  /**
   * Get shippingAddress
   * @return shippingAddress
   */
  @jakarta.annotation.Nullable  @Valid
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_SHIPPING_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public AddressInformation getShippingAddress() {
    return shippingAddress;
  }


  @JsonProperty(JSON_PROPERTY_SHIPPING_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setShippingAddress(@jakarta.annotation.Nullable AddressInformation shippingAddress) {
    this.shippingAddress = shippingAddress;
  }


  public UpdateOrderRequest terms(@jakarta.annotation.Nullable String terms) {
    this.terms = terms;
    return this;
  }

  /**
   * Get terms
   * @return terms
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_TERMS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getTerms() {
    return terms;
  }


  @JsonProperty(JSON_PROPERTY_TERMS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTerms(@jakarta.annotation.Nullable String terms) {
    this.terms = terms;
  }

  /**
   * Return true if this UpdateOrderRequest object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateOrderRequest updateOrderRequest = (UpdateOrderRequest) o;
    return Objects.equals(this.contactId, updateOrderRequest.contactId) &&
        Objects.equals(this.leadAffiliateId, updateOrderRequest.leadAffiliateId) &&
        Objects.equals(this.notes, updateOrderRequest.notes) &&
        Objects.equals(this.orderTime, updateOrderRequest.orderTime) &&
        Objects.equals(this.orderTitle, updateOrderRequest.orderTitle) &&
        Objects.equals(this.orderType, updateOrderRequest.orderType) &&
        Objects.equals(this.paymentPlan, updateOrderRequest.paymentPlan) &&
        Objects.equals(this.promoCodes, updateOrderRequest.promoCodes) &&
        Objects.equals(this.salesAffiliateId, updateOrderRequest.salesAffiliateId) &&
        Objects.equals(this.shippingAddress, updateOrderRequest.shippingAddress) &&
        Objects.equals(this.terms, updateOrderRequest.terms);
  }

  @Override
  public int hashCode() {
    return Objects.hash(contactId, leadAffiliateId, notes, orderTime, orderTitle, orderType, paymentPlan, promoCodes, salesAffiliateId, shippingAddress, terms);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateOrderRequest {\n");
    sb.append("    contactId: ").append(toIndentedString(contactId)).append("\n");
    sb.append("    leadAffiliateId: ").append(toIndentedString(leadAffiliateId)).append("\n");
    sb.append("    notes: ").append(toIndentedString(notes)).append("\n");
    sb.append("    orderTime: ").append(toIndentedString(orderTime)).append("\n");
    sb.append("    orderTitle: ").append(toIndentedString(orderTitle)).append("\n");
    sb.append("    orderType: ").append(toIndentedString(orderType)).append("\n");
    sb.append("    paymentPlan: ").append(toIndentedString(paymentPlan)).append("\n");
    sb.append("    promoCodes: ").append(toIndentedString(promoCodes)).append("\n");
    sb.append("    salesAffiliateId: ").append(toIndentedString(salesAffiliateId)).append("\n");
    sb.append("    shippingAddress: ").append(toIndentedString(shippingAddress)).append("\n");
    sb.append("    terms: ").append(toIndentedString(terms)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

    public static class Builder {
    
        private UpdateOrderRequest instance;
    
        public Builder() {
          this(new UpdateOrderRequest());
        }
    
        protected Builder(UpdateOrderRequest instance) {
          this.instance = instance;
        }
    
        public UpdateOrderRequest.Builder contactId(String contactId) {
              this.instance.contactId = contactId;
          return this;
        }
            public UpdateOrderRequest.Builder leadAffiliateId(String leadAffiliateId) {
              this.instance.leadAffiliateId = leadAffiliateId;
          return this;
        }
            public UpdateOrderRequest.Builder notes(String notes) {
              this.instance.notes = notes;
          return this;
        }
            public UpdateOrderRequest.Builder orderTime(String orderTime) {
              this.instance.orderTime = orderTime;
          return this;
        }
            public UpdateOrderRequest.Builder orderTitle(String orderTitle) {
              this.instance.orderTitle = orderTitle;
          return this;
        }
            public UpdateOrderRequest.Builder orderType(OrderTypeEnum orderType) {
              this.instance.orderType = orderType;
          return this;
        }
            public UpdateOrderRequest.Builder paymentPlan(UpdatedPaymentPlan paymentPlan) {
              this.instance.paymentPlan = paymentPlan;
          return this;
        }
            public UpdateOrderRequest.Builder promoCodes(List<String> promoCodes) {
              this.instance.promoCodes = promoCodes;
          return this;
        }
            public UpdateOrderRequest.Builder salesAffiliateId(String salesAffiliateId) {
              this.instance.salesAffiliateId = salesAffiliateId;
          return this;
        }
            public UpdateOrderRequest.Builder shippingAddress(AddressInformation shippingAddress) {
              this.instance.shippingAddress = shippingAddress;
          return this;
        }
            public UpdateOrderRequest.Builder terms(String terms) {
              this.instance.terms = terms;
          return this;
        }
        
    
        /**
        * returns a built UpdateOrderRequest instance.
        *
        * The builder is not reusable.
        */
        public UpdateOrderRequest build() {
          try {
            return this.instance;
          } finally {
            // ensure that this.instance is not reused
            this.instance = null;
          }
        }
    
        @Override
        public String toString() {
          return getClass() + "=(" + instance + ")";
        }
      }
    
      /**
      * Create a builder with no initialized field.
      */
      public static UpdateOrderRequest.Builder builder() {
        return new UpdateOrderRequest.Builder();
      }
    
      /**
      * Create a builder with a shallow copy of this instance.
      */
      public UpdateOrderRequest.Builder toBuilder() {
        return new UpdateOrderRequest.Builder()
          .contactId(getContactId())
          .leadAffiliateId(getLeadAffiliateId())
          .notes(getNotes())
          .orderTime(getOrderTime())
          .orderTitle(getOrderTitle())
          .orderType(getOrderType())
          .paymentPlan(getPaymentPlan())
          .promoCodes(getPromoCodes())
          .salesAffiliateId(getSalesAffiliateId())
          .shippingAddress(getShippingAddress())
          .terms(getTerms());
      }
}

