/*
 * Keap REST API
 * Keap REST Core Service
 *
 * The version of the OpenAPI document: 2.70.0.809589
 * Contact: api@keap.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.keap.core.sdk.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.keap.core.sdk.model.DealContact;
import com.keap.core.sdk.model.Money;
import com.keap.core.sdk.model.Owner;
import com.keap.core.sdk.model.Stage;
import io.swagger.v3.oas.annotations.media.Schema;
import java.time.ZonedDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import jakarta.validation.constraints.*;
import jakarta.validation.Valid;


/**
 * Request model for creating a deal.
 */
@Schema(description = "Request model for creating a deal.")
@JsonPropertyOrder({
  CreateDealRequest.JSON_PROPERTY_NAME,
  CreateDealRequest.JSON_PROPERTY_VALUE,
  CreateDealRequest.JSON_PROPERTY_CONTACTS,
  CreateDealRequest.JSON_PROPERTY_STAGE,
  CreateDealRequest.JSON_PROPERTY_OWNERS,
  CreateDealRequest.JSON_PROPERTY_OWNER_ID,
  CreateDealRequest.JSON_PROPERTY_TASK_IDS,
  CreateDealRequest.JSON_PROPERTY_STATUS,
  CreateDealRequest.JSON_PROPERTY_ESTIMATED_CLOSE_TIME,
  CreateDealRequest.JSON_PROPERTY_CUSTOM_FIELDS
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.13.0")
public class CreateDealRequest implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_NAME = "name";
  @jakarta.annotation.Nonnull  private String name;

  public static final String JSON_PROPERTY_VALUE = "value";
  @jakarta.annotation.Nonnull  private Money value;

  public static final String JSON_PROPERTY_CONTACTS = "contacts";
  @jakarta.annotation.Nonnull  private List<@Valid DealContact> contacts = new ArrayList<>();

  public static final String JSON_PROPERTY_STAGE = "stage";
  @jakarta.annotation.Nonnull  private Stage stage;

  public static final String JSON_PROPERTY_OWNERS = "owners";
  @jakarta.annotation.Nonnull  private List<@Valid Owner> owners = new ArrayList<>();

  public static final String JSON_PROPERTY_OWNER_ID = "owner_id";
  @jakarta.annotation.Nullable  private String ownerId;

  public static final String JSON_PROPERTY_TASK_IDS = "task_ids";
  @jakarta.annotation.Nonnull  private List<String> taskIds = new ArrayList<>();

  public static final String JSON_PROPERTY_STATUS = "status";
  @jakarta.annotation.Nonnull  private String status;

  public static final String JSON_PROPERTY_ESTIMATED_CLOSE_TIME = "estimated_close_time";
  @jakarta.annotation.Nullable  private ZonedDateTime estimatedCloseTime;

  public static final String JSON_PROPERTY_CUSTOM_FIELDS = "custom_fields";
  @jakarta.annotation.Nullable  private Map<String, Object> customFields;

  public CreateDealRequest() { 
  }

  public CreateDealRequest name(@jakarta.annotation.Nonnull String name) {
    this.name = name;
    return this;
  }

  /**
   * The name of the deal. This field is required and must have at least one character.
   * @return name
   */
  @jakarta.annotation.Nonnull  @NotNull
 @Size(min=1)  @Schema(requiredMode = Schema.RequiredMode.REQUIRED, description = "The name of the deal. This field is required and must have at least one character.")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(@jakarta.annotation.Nonnull String name) {
    this.name = name;
  }


  public CreateDealRequest value(@jakarta.annotation.Nonnull Money value) {
    this.value = value;
    return this;
  }

  /**
   * The monetary value of the deal. This field is required and must be valid.
   * @return value
   */
  @jakarta.annotation.Nonnull  @NotNull
  @Valid
  @Schema(requiredMode = Schema.RequiredMode.REQUIRED, description = "The monetary value of the deal. This field is required and must be valid.")
  @JsonProperty(JSON_PROPERTY_VALUE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public Money getValue() {
    return value;
  }


  @JsonProperty(JSON_PROPERTY_VALUE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setValue(@jakarta.annotation.Nonnull Money value) {
    this.value = value;
  }


  public CreateDealRequest contacts(@jakarta.annotation.Nonnull List<@Valid DealContact> contacts) {
    this.contacts = contacts;
    return this;
  }

  public CreateDealRequest addContactsItem(DealContact contactsItem) {
    if (this.contacts == null) {
      this.contacts = new ArrayList<>();
    }
    this.contacts.add(contactsItem);
    return this;
  }

  /**
   * The list of contacts associated with the deal. This field is required.
   * @return contacts
   */
  @jakarta.annotation.Nonnull  @NotNull
  @Valid
  @Schema(requiredMode = Schema.RequiredMode.REQUIRED, description = "The list of contacts associated with the deal. This field is required.")
  @JsonProperty(JSON_PROPERTY_CONTACTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public List<@Valid DealContact> getContacts() {
    return contacts;
  }


  @JsonProperty(JSON_PROPERTY_CONTACTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setContacts(@jakarta.annotation.Nonnull List<@Valid DealContact> contacts) {
    this.contacts = contacts;
  }


  public CreateDealRequest stage(@jakarta.annotation.Nonnull Stage stage) {
    this.stage = stage;
    return this;
  }

  /**
   * The stage of the deal. This field is required and must be valid.
   * @return stage
   */
  @jakarta.annotation.Nonnull  @NotNull
  @Valid
  @Schema(requiredMode = Schema.RequiredMode.REQUIRED, description = "The stage of the deal. This field is required and must be valid.")
  @JsonProperty(JSON_PROPERTY_STAGE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public Stage getStage() {
    return stage;
  }


  @JsonProperty(JSON_PROPERTY_STAGE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStage(@jakarta.annotation.Nonnull Stage stage) {
    this.stage = stage;
  }


  public CreateDealRequest owners(@jakarta.annotation.Nonnull List<@Valid Owner> owners) {
    this.owners = owners;
    return this;
  }

  public CreateDealRequest addOwnersItem(Owner ownersItem) {
    if (this.owners == null) {
      this.owners = new ArrayList<>();
    }
    this.owners.add(ownersItem);
    return this;
  }

  /**
   * The list of owners of the deal. This field is required.
   * @return owners
   */
  @jakarta.annotation.Nonnull  @NotNull
  @Valid
  @Schema(requiredMode = Schema.RequiredMode.REQUIRED, description = "The list of owners of the deal. This field is required.")
  @JsonProperty(JSON_PROPERTY_OWNERS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public List<@Valid Owner> getOwners() {
    return owners;
  }


  @JsonProperty(JSON_PROPERTY_OWNERS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setOwners(@jakarta.annotation.Nonnull List<@Valid Owner> owners) {
    this.owners = owners;
  }


  public CreateDealRequest ownerId(@jakarta.annotation.Nullable String ownerId) {
    this.ownerId = ownerId;
    return this;
  }

  /**
   * The ID of the owner of the deal. This field is optional.
   * @return ownerId
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "The ID of the owner of the deal. This field is optional.")
  @JsonProperty(JSON_PROPERTY_OWNER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getOwnerId() {
    return ownerId;
  }


  @JsonProperty(JSON_PROPERTY_OWNER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOwnerId(@jakarta.annotation.Nullable String ownerId) {
    this.ownerId = ownerId;
  }


  public CreateDealRequest taskIds(@jakarta.annotation.Nonnull List<String> taskIds) {
    this.taskIds = taskIds;
    return this;
  }

  public CreateDealRequest addTaskIdsItem(String taskIdsItem) {
    if (this.taskIds == null) {
      this.taskIds = new ArrayList<>();
    }
    this.taskIds.add(taskIdsItem);
    return this;
  }

  /**
   * The list of task IDs associated with the deal. This field is required.
   * @return taskIds
   */
  @jakarta.annotation.Nonnull  @NotNull
  @Schema(requiredMode = Schema.RequiredMode.REQUIRED, description = "The list of task IDs associated with the deal. This field is required.")
  @JsonProperty(JSON_PROPERTY_TASK_IDS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public List<String> getTaskIds() {
    return taskIds;
  }


  @JsonProperty(JSON_PROPERTY_TASK_IDS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTaskIds(@jakarta.annotation.Nonnull List<String> taskIds) {
    this.taskIds = taskIds;
  }


  public CreateDealRequest status(@jakarta.annotation.Nonnull String status) {
    this.status = status;
    return this;
  }

  /**
   * The status of the deal. This field is required.
   * @return status
   */
  @jakarta.annotation.Nonnull  @NotNull
  @Schema(requiredMode = Schema.RequiredMode.REQUIRED, description = "The status of the deal. This field is required.")
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStatus(@jakarta.annotation.Nonnull String status) {
    this.status = status;
  }


  public CreateDealRequest estimatedCloseTime(@jakarta.annotation.Nullable ZonedDateTime estimatedCloseTime) {
    this.estimatedCloseTime = estimatedCloseTime;
    return this;
  }

  /**
   * The estimated close time of the deal. This field is optional.
   * @return estimatedCloseTime
   */
  @jakarta.annotation.Nullable  @Valid
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "The estimated close time of the deal. This field is optional.")
  @JsonProperty(JSON_PROPERTY_ESTIMATED_CLOSE_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public ZonedDateTime getEstimatedCloseTime() {
    return estimatedCloseTime;
  }


  @JsonProperty(JSON_PROPERTY_ESTIMATED_CLOSE_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEstimatedCloseTime(@jakarta.annotation.Nullable ZonedDateTime estimatedCloseTime) {
    this.estimatedCloseTime = estimatedCloseTime;
  }


  public CreateDealRequest customFields(@jakarta.annotation.Nullable Map<String, Object> customFields) {
    this.customFields = customFields;
    return this;
  }

  public CreateDealRequest putCustomFieldsItem(String key, Object customFieldsItem) {
    if (this.customFields == null) {
      this.customFields = new HashMap<>();
    }
    this.customFields.put(key, customFieldsItem);
    return this;
  }

  /**
   * The custom fields associated with the deal. This field is optional.
   * @return customFields
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "The custom fields associated with the deal. This field is optional.")
  @JsonProperty(JSON_PROPERTY_CUSTOM_FIELDS)
  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)
  public Map<String, Object> getCustomFields() {
    return customFields;
  }


  @JsonProperty(JSON_PROPERTY_CUSTOM_FIELDS)
  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)
  public void setCustomFields(@jakarta.annotation.Nullable Map<String, Object> customFields) {
    this.customFields = customFields;
  }

  /**
   * Return true if this CreateDealRequest object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateDealRequest createDealRequest = (CreateDealRequest) o;
    return Objects.equals(this.name, createDealRequest.name) &&
        Objects.equals(this.value, createDealRequest.value) &&
        Objects.equals(this.contacts, createDealRequest.contacts) &&
        Objects.equals(this.stage, createDealRequest.stage) &&
        Objects.equals(this.owners, createDealRequest.owners) &&
        Objects.equals(this.ownerId, createDealRequest.ownerId) &&
        Objects.equals(this.taskIds, createDealRequest.taskIds) &&
        Objects.equals(this.status, createDealRequest.status) &&
        Objects.equals(this.estimatedCloseTime, createDealRequest.estimatedCloseTime) &&
        Objects.equals(this.customFields, createDealRequest.customFields);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, value, contacts, stage, owners, ownerId, taskIds, status, estimatedCloseTime, customFields);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateDealRequest {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("    contacts: ").append(toIndentedString(contacts)).append("\n");
    sb.append("    stage: ").append(toIndentedString(stage)).append("\n");
    sb.append("    owners: ").append(toIndentedString(owners)).append("\n");
    sb.append("    ownerId: ").append(toIndentedString(ownerId)).append("\n");
    sb.append("    taskIds: ").append(toIndentedString(taskIds)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    estimatedCloseTime: ").append(toIndentedString(estimatedCloseTime)).append("\n");
    sb.append("    customFields: ").append(toIndentedString(customFields)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

    public static class Builder {
    
        private CreateDealRequest instance;
    
        public Builder() {
          this(new CreateDealRequest());
        }
    
        protected Builder(CreateDealRequest instance) {
          this.instance = instance;
        }
    
        public CreateDealRequest.Builder name(String name) {
              this.instance.name = name;
          return this;
        }
            public CreateDealRequest.Builder value(Money value) {
              this.instance.value = value;
          return this;
        }
            public CreateDealRequest.Builder contacts(List<DealContact> contacts) {
              this.instance.contacts = contacts;
          return this;
        }
            public CreateDealRequest.Builder stage(Stage stage) {
              this.instance.stage = stage;
          return this;
        }
            public CreateDealRequest.Builder owners(List<Owner> owners) {
              this.instance.owners = owners;
          return this;
        }
            public CreateDealRequest.Builder ownerId(String ownerId) {
              this.instance.ownerId = ownerId;
          return this;
        }
            public CreateDealRequest.Builder taskIds(List<String> taskIds) {
              this.instance.taskIds = taskIds;
          return this;
        }
            public CreateDealRequest.Builder status(String status) {
              this.instance.status = status;
          return this;
        }
            public CreateDealRequest.Builder estimatedCloseTime(ZonedDateTime estimatedCloseTime) {
              this.instance.estimatedCloseTime = estimatedCloseTime;
          return this;
        }
            public CreateDealRequest.Builder customFields(Map<String, Object> customFields) {
              this.instance.customFields = customFields;
          return this;
        }
        
    
        /**
        * returns a built CreateDealRequest instance.
        *
        * The builder is not reusable.
        */
        public CreateDealRequest build() {
          try {
            return this.instance;
          } finally {
            // ensure that this.instance is not reused
            this.instance = null;
          }
        }
    
        @Override
        public String toString() {
          return getClass() + "=(" + instance + ")";
        }
      }
    
      /**
      * Create a builder with no initialized field.
      */
      public static CreateDealRequest.Builder builder() {
        return new CreateDealRequest.Builder();
      }
    
      /**
      * Create a builder with a shallow copy of this instance.
      */
      public CreateDealRequest.Builder toBuilder() {
        return new CreateDealRequest.Builder()
          .name(getName())
          .value(getValue())
          .contacts(getContacts())
          .stage(getStage())
          .owners(getOwners())
          .ownerId(getOwnerId())
          .taskIds(getTaskIds())
          .status(getStatus())
          .estimatedCloseTime(getEstimatedCloseTime())
          .customFields(getCustomFields());
      }
}

