/*
 * Keap REST API
 * Keap REST Core Service
 *
 * The version of the OpenAPI document: 2.70.0.861953
 * Contact: api@keap.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.keap.core.sdk.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.Arrays;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import jakarta.validation.constraints.*;
import jakarta.validation.Valid;


/**
 * ListMerchantAccountResponse
 */
@JsonPropertyOrder({
  ListMerchantAccountResponse.JSON_PROPERTY_ID,
  ListMerchantAccountResponse.JSON_PROPERTY_IS_TEST,
  ListMerchantAccountResponse.JSON_PROPERTY_NAME,
  ListMerchantAccountResponse.JSON_PROPERTY_TYPE
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.13.0")
public class ListMerchantAccountResponse implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_ID = "id";
  @jakarta.annotation.Nullable  private String id;

  public static final String JSON_PROPERTY_IS_TEST = "is_test";
  @jakarta.annotation.Nullable  private Boolean isTest;

  public static final String JSON_PROPERTY_NAME = "name";
  @jakarta.annotation.Nullable  private String name;

  /**
   * Gets or Sets type
   */
  public enum TypeEnum {
    PAYPAL(String.valueOf("PAYPAL")),
    
    UNSUPPORTED(String.valueOf("UNSUPPORTED")),
    
    AUTHORIZE(String.valueOf("AUTHORIZE")),
    
    EWAY(String.valueOf("EWAY")),
    
    WEPAY(String.valueOf("WEPAY")),
    
    STRIPE(String.valueOf("STRIPE")),
    
    KEAP_PAY(String.valueOf("KEAP_PAY")),
    
    UNKNOWN_COULD_NOT_DESERIALIZE(String.valueOf("unknown_default_open_api"));

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return UNKNOWN_COULD_NOT_DESERIALIZE;
    }
  }
  public static final String JSON_PROPERTY_TYPE = "type";
  @jakarta.annotation.Nullable  private TypeEnum type;

  public ListMerchantAccountResponse() { 
  }

  public ListMerchantAccountResponse id(@jakarta.annotation.Nullable String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(@jakarta.annotation.Nullable String id) {
    this.id = id;
  }


  public ListMerchantAccountResponse isTest(@jakarta.annotation.Nullable Boolean isTest) {
    this.isTest = isTest;
    return this;
  }

  /**
   * Get isTest
   * @return isTest
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_IS_TEST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getIsTest() {
    return isTest;
  }


  @JsonProperty(JSON_PROPERTY_IS_TEST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsTest(@jakarta.annotation.Nullable Boolean isTest) {
    this.isTest = isTest;
  }


  public ListMerchantAccountResponse name(@jakarta.annotation.Nullable String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(@jakarta.annotation.Nullable String name) {
    this.name = name;
  }


  public ListMerchantAccountResponse type(@jakarta.annotation.Nullable TypeEnum type) {
    this.type = type;
    return this;
  }

  /**
   * Get type
   * @return type
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public TypeEnum getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(@jakarta.annotation.Nullable TypeEnum type) {
    this.type = type;
  }

  /**
   * Return true if this ListMerchantAccountResponse object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ListMerchantAccountResponse listMerchantAccountResponse = (ListMerchantAccountResponse) o;
    return Objects.equals(this.id, listMerchantAccountResponse.id) &&
        Objects.equals(this.isTest, listMerchantAccountResponse.isTest) &&
        Objects.equals(this.name, listMerchantAccountResponse.name) &&
        Objects.equals(this.type, listMerchantAccountResponse.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, isTest, name, type);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ListMerchantAccountResponse {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    isTest: ").append(toIndentedString(isTest)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

    public static class Builder {
    
        private ListMerchantAccountResponse instance;
    
        public Builder() {
          this(new ListMerchantAccountResponse());
        }
    
        protected Builder(ListMerchantAccountResponse instance) {
          this.instance = instance;
        }
    
        public ListMerchantAccountResponse.Builder id(String id) {
              this.instance.id = id;
          return this;
        }
            public ListMerchantAccountResponse.Builder isTest(Boolean isTest) {
              this.instance.isTest = isTest;
          return this;
        }
            public ListMerchantAccountResponse.Builder name(String name) {
              this.instance.name = name;
          return this;
        }
            public ListMerchantAccountResponse.Builder type(TypeEnum type) {
              this.instance.type = type;
          return this;
        }
        
    
        /**
        * returns a built ListMerchantAccountResponse instance.
        *
        * The builder is not reusable.
        */
        public ListMerchantAccountResponse build() {
          try {
            return this.instance;
          } finally {
            // ensure that this.instance is not reused
            this.instance = null;
          }
        }
    
        @Override
        public String toString() {
          return getClass() + "=(" + instance + ")";
        }
      }
    
      /**
      * Create a builder with no initialized field.
      */
      public static ListMerchantAccountResponse.Builder builder() {
        return new ListMerchantAccountResponse.Builder();
      }
    
      /**
      * Create a builder with a shallow copy of this instance.
      */
      public ListMerchantAccountResponse.Builder toBuilder() {
        return new ListMerchantAccountResponse.Builder()
          .id(getId())
          .isTest(getIsTest())
          .name(getName())
          .type(getType());
      }
}

