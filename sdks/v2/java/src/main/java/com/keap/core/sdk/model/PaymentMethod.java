/*
 * Keap REST API
 * Keap REST Core Service
 *
 * The version of the OpenAPI document: 2.70.0.848026-hf-202508251610
 * Contact: api@keap.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.keap.core.sdk.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.keap.core.sdk.model.CardInfo;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.Arrays;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import jakarta.validation.constraints.*;
import jakarta.validation.Valid;


/**
 * PaymentMethod
 */
@JsonPropertyOrder({
  PaymentMethod.JSON_PROPERTY_CARD_INFO,
  PaymentMethod.JSON_PROPERTY_CONTACT_ID,
  PaymentMethod.JSON_PROPERTY_CREATED_TIME,
  PaymentMethod.JSON_PROPERTY_MERCHANT_ACCOUNT_ID,
  PaymentMethod.JSON_PROPERTY_MERCHANT_ACCOUNT_TYPE,
  PaymentMethod.JSON_PROPERTY_PAYMENT_METHOD_ID,
  PaymentMethod.JSON_PROPERTY_PAYMENT_METHOD_TYPE
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.13.0")
public class PaymentMethod implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_CARD_INFO = "card_info";
  @jakarta.annotation.Nullable  private CardInfo cardInfo;

  public static final String JSON_PROPERTY_CONTACT_ID = "contact_id";
  @jakarta.annotation.Nullable  private String contactId;

  public static final String JSON_PROPERTY_CREATED_TIME = "created_time";
  @jakarta.annotation.Nullable  private String createdTime;

  public static final String JSON_PROPERTY_MERCHANT_ACCOUNT_ID = "merchant_account_id";
  @jakarta.annotation.Nullable  private String merchantAccountId;

  /**
   * Gets or Sets merchantAccountType
   */
  public enum MerchantAccountTypeEnum {
    PAYPAL(String.valueOf("PAYPAL")),
    
    UNSUPPORTED(String.valueOf("UNSUPPORTED")),
    
    AUTHORIZE(String.valueOf("AUTHORIZE")),
    
    EWAY(String.valueOf("EWAY")),
    
    WEPAY(String.valueOf("WEPAY")),
    
    STRIPE(String.valueOf("STRIPE")),
    
    KEAP_PAY(String.valueOf("KEAP_PAY")),
    
    UNKNOWN_COULD_NOT_DESERIALIZE(String.valueOf("unknown_default_open_api"));

    private String value;

    MerchantAccountTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static MerchantAccountTypeEnum fromValue(String value) {
      for (MerchantAccountTypeEnum b : MerchantAccountTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return UNKNOWN_COULD_NOT_DESERIALIZE;
    }
  }
  public static final String JSON_PROPERTY_MERCHANT_ACCOUNT_TYPE = "merchant_account_type";
  @jakarta.annotation.Nullable  private MerchantAccountTypeEnum merchantAccountType;

  public static final String JSON_PROPERTY_PAYMENT_METHOD_ID = "payment_method_id";
  @jakarta.annotation.Nullable  private String paymentMethodId;

  /**
   * Gets or Sets paymentMethodType
   */
  public enum PaymentMethodTypeEnum {
    CARD(String.valueOf("CARD")),
    
    UNKNOWN_COULD_NOT_DESERIALIZE(String.valueOf("unknown_default_open_api"));

    private String value;

    PaymentMethodTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static PaymentMethodTypeEnum fromValue(String value) {
      for (PaymentMethodTypeEnum b : PaymentMethodTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return UNKNOWN_COULD_NOT_DESERIALIZE;
    }
  }
  public static final String JSON_PROPERTY_PAYMENT_METHOD_TYPE = "payment_method_type";
  @jakarta.annotation.Nullable  private PaymentMethodTypeEnum paymentMethodType;

  public PaymentMethod() { 
  }

  public PaymentMethod cardInfo(@jakarta.annotation.Nullable CardInfo cardInfo) {
    this.cardInfo = cardInfo;
    return this;
  }

  /**
   * Get cardInfo
   * @return cardInfo
   */
  @jakarta.annotation.Nullable  @Valid
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_CARD_INFO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public CardInfo getCardInfo() {
    return cardInfo;
  }


  @JsonProperty(JSON_PROPERTY_CARD_INFO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCardInfo(@jakarta.annotation.Nullable CardInfo cardInfo) {
    this.cardInfo = cardInfo;
  }


  public PaymentMethod contactId(@jakarta.annotation.Nullable String contactId) {
    this.contactId = contactId;
    return this;
  }

  /**
   * Get contactId
   * @return contactId
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_CONTACT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getContactId() {
    return contactId;
  }


  @JsonProperty(JSON_PROPERTY_CONTACT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setContactId(@jakarta.annotation.Nullable String contactId) {
    this.contactId = contactId;
  }


  public PaymentMethod createdTime(@jakarta.annotation.Nullable String createdTime) {
    this.createdTime = createdTime;
    return this;
  }

  /**
   * Get createdTime
   * @return createdTime
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_CREATED_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getCreatedTime() {
    return createdTime;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreatedTime(@jakarta.annotation.Nullable String createdTime) {
    this.createdTime = createdTime;
  }


  public PaymentMethod merchantAccountId(@jakarta.annotation.Nullable String merchantAccountId) {
    this.merchantAccountId = merchantAccountId;
    return this;
  }

  /**
   * Get merchantAccountId
   * @return merchantAccountId
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_MERCHANT_ACCOUNT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getMerchantAccountId() {
    return merchantAccountId;
  }


  @JsonProperty(JSON_PROPERTY_MERCHANT_ACCOUNT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMerchantAccountId(@jakarta.annotation.Nullable String merchantAccountId) {
    this.merchantAccountId = merchantAccountId;
  }


  public PaymentMethod merchantAccountType(@jakarta.annotation.Nullable MerchantAccountTypeEnum merchantAccountType) {
    this.merchantAccountType = merchantAccountType;
    return this;
  }

  /**
   * Get merchantAccountType
   * @return merchantAccountType
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_MERCHANT_ACCOUNT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public MerchantAccountTypeEnum getMerchantAccountType() {
    return merchantAccountType;
  }


  @JsonProperty(JSON_PROPERTY_MERCHANT_ACCOUNT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMerchantAccountType(@jakarta.annotation.Nullable MerchantAccountTypeEnum merchantAccountType) {
    this.merchantAccountType = merchantAccountType;
  }


  public PaymentMethod paymentMethodId(@jakarta.annotation.Nullable String paymentMethodId) {
    this.paymentMethodId = paymentMethodId;
    return this;
  }

  /**
   * Get paymentMethodId
   * @return paymentMethodId
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_PAYMENT_METHOD_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getPaymentMethodId() {
    return paymentMethodId;
  }


  @JsonProperty(JSON_PROPERTY_PAYMENT_METHOD_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPaymentMethodId(@jakarta.annotation.Nullable String paymentMethodId) {
    this.paymentMethodId = paymentMethodId;
  }


  public PaymentMethod paymentMethodType(@jakarta.annotation.Nullable PaymentMethodTypeEnum paymentMethodType) {
    this.paymentMethodType = paymentMethodType;
    return this;
  }

  /**
   * Get paymentMethodType
   * @return paymentMethodType
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_PAYMENT_METHOD_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public PaymentMethodTypeEnum getPaymentMethodType() {
    return paymentMethodType;
  }


  @JsonProperty(JSON_PROPERTY_PAYMENT_METHOD_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPaymentMethodType(@jakarta.annotation.Nullable PaymentMethodTypeEnum paymentMethodType) {
    this.paymentMethodType = paymentMethodType;
  }

  /**
   * Return true if this PaymentMethod object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PaymentMethod paymentMethod = (PaymentMethod) o;
    return Objects.equals(this.cardInfo, paymentMethod.cardInfo) &&
        Objects.equals(this.contactId, paymentMethod.contactId) &&
        Objects.equals(this.createdTime, paymentMethod.createdTime) &&
        Objects.equals(this.merchantAccountId, paymentMethod.merchantAccountId) &&
        Objects.equals(this.merchantAccountType, paymentMethod.merchantAccountType) &&
        Objects.equals(this.paymentMethodId, paymentMethod.paymentMethodId) &&
        Objects.equals(this.paymentMethodType, paymentMethod.paymentMethodType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cardInfo, contactId, createdTime, merchantAccountId, merchantAccountType, paymentMethodId, paymentMethodType);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PaymentMethod {\n");
    sb.append("    cardInfo: ").append(toIndentedString(cardInfo)).append("\n");
    sb.append("    contactId: ").append(toIndentedString(contactId)).append("\n");
    sb.append("    createdTime: ").append(toIndentedString(createdTime)).append("\n");
    sb.append("    merchantAccountId: ").append(toIndentedString(merchantAccountId)).append("\n");
    sb.append("    merchantAccountType: ").append(toIndentedString(merchantAccountType)).append("\n");
    sb.append("    paymentMethodId: ").append(toIndentedString(paymentMethodId)).append("\n");
    sb.append("    paymentMethodType: ").append(toIndentedString(paymentMethodType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

    public static class Builder {
    
        private PaymentMethod instance;
    
        public Builder() {
          this(new PaymentMethod());
        }
    
        protected Builder(PaymentMethod instance) {
          this.instance = instance;
        }
    
        public PaymentMethod.Builder cardInfo(CardInfo cardInfo) {
              this.instance.cardInfo = cardInfo;
          return this;
        }
            public PaymentMethod.Builder contactId(String contactId) {
              this.instance.contactId = contactId;
          return this;
        }
            public PaymentMethod.Builder createdTime(String createdTime) {
              this.instance.createdTime = createdTime;
          return this;
        }
            public PaymentMethod.Builder merchantAccountId(String merchantAccountId) {
              this.instance.merchantAccountId = merchantAccountId;
          return this;
        }
            public PaymentMethod.Builder merchantAccountType(MerchantAccountTypeEnum merchantAccountType) {
              this.instance.merchantAccountType = merchantAccountType;
          return this;
        }
            public PaymentMethod.Builder paymentMethodId(String paymentMethodId) {
              this.instance.paymentMethodId = paymentMethodId;
          return this;
        }
            public PaymentMethod.Builder paymentMethodType(PaymentMethodTypeEnum paymentMethodType) {
              this.instance.paymentMethodType = paymentMethodType;
          return this;
        }
        
    
        /**
        * returns a built PaymentMethod instance.
        *
        * The builder is not reusable.
        */
        public PaymentMethod build() {
          try {
            return this.instance;
          } finally {
            // ensure that this.instance is not reused
            this.instance = null;
          }
        }
    
        @Override
        public String toString() {
          return getClass() + "=(" + instance + ")";
        }
      }
    
      /**
      * Create a builder with no initialized field.
      */
      public static PaymentMethod.Builder builder() {
        return new PaymentMethod.Builder();
      }
    
      /**
      * Create a builder with a shallow copy of this instance.
      */
      public PaymentMethod.Builder toBuilder() {
        return new PaymentMethod.Builder()
          .cardInfo(getCardInfo())
          .contactId(getContactId())
          .createdTime(getCreatedTime())
          .merchantAccountId(getMerchantAccountId())
          .merchantAccountType(getMerchantAccountType())
          .paymentMethodId(getPaymentMethodId())
          .paymentMethodType(getPaymentMethodType());
      }
}

