/*
 * Keap REST API
 * Keap REST Core Service
 *
 * The version of the OpenAPI document: 2.70.0.812056
 * Contact: api@keap.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.keap.core.sdk.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.keap.core.sdk.model.PipelineCustomFieldArrayPropertyType;
import com.keap.core.sdk.model.PipelineCustomFieldModelPropertyTypeDiscriminator;
import com.keap.core.sdk.model.PipelineCustomFieldPrimitiveType;
import com.keap.core.sdk.model.PipelineCustomFieldRefPropertyType;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.Arrays;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import jakarta.validation.constraints.*;
import jakarta.validation.Valid;


/**
 * Class representing a custom field type.
 */
@Schema(description = "Class representing a custom field type.")
@JsonPropertyOrder({
  PipelineCustomFieldType.JSON_PROPERTY_PRIMITIVE_TYPE,
  PipelineCustomFieldType.JSON_PROPERTY_DISCRIMINATOR,
  PipelineCustomFieldType.JSON_PROPERTY_ARRAY,
  PipelineCustomFieldType.JSON_PROPERTY_REF
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.13.0")
public class PipelineCustomFieldType implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_PRIMITIVE_TYPE = "primitive_type";
  @jakarta.annotation.Nonnull  private PipelineCustomFieldPrimitiveType primitiveType;

  public static final String JSON_PROPERTY_DISCRIMINATOR = "discriminator";
  @jakarta.annotation.Nonnull  private PipelineCustomFieldModelPropertyTypeDiscriminator discriminator;

  public static final String JSON_PROPERTY_ARRAY = "array";
  @jakarta.annotation.Nullable  private PipelineCustomFieldArrayPropertyType array;

  public static final String JSON_PROPERTY_REF = "ref";
  @jakarta.annotation.Nullable  private PipelineCustomFieldRefPropertyType ref;

  public PipelineCustomFieldType() { 
  }

  public PipelineCustomFieldType primitiveType(@jakarta.annotation.Nonnull PipelineCustomFieldPrimitiveType primitiveType) {
    this.primitiveType = primitiveType;
    return this;
  }

  /**
   * The base primitive type of the custom field. This field is required.
   * @return primitiveType
   */
  @jakarta.annotation.Nonnull  @NotNull
  @Valid
  @Schema(requiredMode = Schema.RequiredMode.REQUIRED, description = "The base primitive type of the custom field. This field is required.")
  @JsonProperty(JSON_PROPERTY_PRIMITIVE_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public PipelineCustomFieldPrimitiveType getPrimitiveType() {
    return primitiveType;
  }


  @JsonProperty(JSON_PROPERTY_PRIMITIVE_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPrimitiveType(@jakarta.annotation.Nonnull PipelineCustomFieldPrimitiveType primitiveType) {
    this.primitiveType = primitiveType;
  }


  public PipelineCustomFieldType discriminator(@jakarta.annotation.Nonnull PipelineCustomFieldModelPropertyTypeDiscriminator discriminator) {
    this.discriminator = discriminator;
    return this;
  }

  /**
   * The discriminator for the model property type. This field is required.
   * @return discriminator
   */
  @jakarta.annotation.Nonnull  @NotNull
  @Valid
  @Schema(requiredMode = Schema.RequiredMode.REQUIRED, description = "The discriminator for the model property type. This field is required.")
  @JsonProperty(JSON_PROPERTY_DISCRIMINATOR)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public PipelineCustomFieldModelPropertyTypeDiscriminator getDiscriminator() {
    return discriminator;
  }


  @JsonProperty(JSON_PROPERTY_DISCRIMINATOR)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDiscriminator(@jakarta.annotation.Nonnull PipelineCustomFieldModelPropertyTypeDiscriminator discriminator) {
    this.discriminator = discriminator;
  }


  public PipelineCustomFieldType array(@jakarta.annotation.Nullable PipelineCustomFieldArrayPropertyType array) {
    this.array = array;
    return this;
  }

  /**
   * The array property type of the custom field. This field is optional.
   * @return array
   */
  @jakarta.annotation.Nullable  @Valid
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "The array property type of the custom field. This field is optional.")
  @JsonProperty(JSON_PROPERTY_ARRAY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public PipelineCustomFieldArrayPropertyType getArray() {
    return array;
  }


  @JsonProperty(JSON_PROPERTY_ARRAY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setArray(@jakarta.annotation.Nullable PipelineCustomFieldArrayPropertyType array) {
    this.array = array;
  }


  public PipelineCustomFieldType ref(@jakarta.annotation.Nullable PipelineCustomFieldRefPropertyType ref) {
    this.ref = ref;
    return this;
  }

  /**
   * The reference property type of the custom field. This field is optional.
   * @return ref
   */
  @jakarta.annotation.Nullable  @Valid
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "The reference property type of the custom field. This field is optional.")
  @JsonProperty(JSON_PROPERTY_REF)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public PipelineCustomFieldRefPropertyType getRef() {
    return ref;
  }


  @JsonProperty(JSON_PROPERTY_REF)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRef(@jakarta.annotation.Nullable PipelineCustomFieldRefPropertyType ref) {
    this.ref = ref;
  }

  /**
   * Return true if this PipelineCustomFieldType object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PipelineCustomFieldType pipelineCustomFieldType = (PipelineCustomFieldType) o;
    return Objects.equals(this.primitiveType, pipelineCustomFieldType.primitiveType) &&
        Objects.equals(this.discriminator, pipelineCustomFieldType.discriminator) &&
        Objects.equals(this.array, pipelineCustomFieldType.array) &&
        Objects.equals(this.ref, pipelineCustomFieldType.ref);
  }

  @Override
  public int hashCode() {
    return Objects.hash(primitiveType, discriminator, array, ref);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PipelineCustomFieldType {\n");
    sb.append("    primitiveType: ").append(toIndentedString(primitiveType)).append("\n");
    sb.append("    discriminator: ").append(toIndentedString(discriminator)).append("\n");
    sb.append("    array: ").append(toIndentedString(array)).append("\n");
    sb.append("    ref: ").append(toIndentedString(ref)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

    public static class Builder {
    
        private PipelineCustomFieldType instance;
    
        public Builder() {
          this(new PipelineCustomFieldType());
        }
    
        protected Builder(PipelineCustomFieldType instance) {
          this.instance = instance;
        }
    
        public PipelineCustomFieldType.Builder primitiveType(PipelineCustomFieldPrimitiveType primitiveType) {
              this.instance.primitiveType = primitiveType;
          return this;
        }
            public PipelineCustomFieldType.Builder discriminator(PipelineCustomFieldModelPropertyTypeDiscriminator discriminator) {
              this.instance.discriminator = discriminator;
          return this;
        }
            public PipelineCustomFieldType.Builder array(PipelineCustomFieldArrayPropertyType array) {
              this.instance.array = array;
          return this;
        }
            public PipelineCustomFieldType.Builder ref(PipelineCustomFieldRefPropertyType ref) {
              this.instance.ref = ref;
          return this;
        }
        
    
        /**
        * returns a built PipelineCustomFieldType instance.
        *
        * The builder is not reusable.
        */
        public PipelineCustomFieldType build() {
          try {
            return this.instance;
          } finally {
            // ensure that this.instance is not reused
            this.instance = null;
          }
        }
    
        @Override
        public String toString() {
          return getClass() + "=(" + instance + ")";
        }
      }
    
      /**
      * Create a builder with no initialized field.
      */
      public static PipelineCustomFieldType.Builder builder() {
        return new PipelineCustomFieldType.Builder();
      }
    
      /**
      * Create a builder with a shallow copy of this instance.
      */
      public PipelineCustomFieldType.Builder toBuilder() {
        return new PipelineCustomFieldType.Builder()
          .primitiveType(getPrimitiveType())
          .discriminator(getDiscriminator())
          .array(getArray())
          .ref(getRef());
      }
}

