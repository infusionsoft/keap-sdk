/*
 * Keap REST API
 * Keap REST Core Service
 *
 * The version of the OpenAPI document: 2.70.0.790985
 * Contact: api@keap.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.keap.core.sdk.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import jakarta.validation.constraints.*;
import jakarta.validation.Valid;


/**
 * EmailSendTemplateRequest
 */
@JsonPropertyOrder({
  EmailSendTemplateRequest.JSON_PROPERTY_ADDRESS_FIELD,
  EmailSendTemplateRequest.JSON_PROPERTY_CONTACT_IDS,
  EmailSendTemplateRequest.JSON_PROPERTY_TEMPLATE_ID,
  EmailSendTemplateRequest.JSON_PROPERTY_USER_ID
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.10.0")
public class EmailSendTemplateRequest implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_ADDRESS_FIELD = "address_field";
  @jakarta.annotation.Nullable  private String addressField;

  public static final String JSON_PROPERTY_CONTACT_IDS = "contact_ids";
  @jakarta.annotation.Nullable  private List<String> contactIds = new ArrayList<>();

  public static final String JSON_PROPERTY_TEMPLATE_ID = "template_id";
  @jakarta.annotation.Nullable  private String templateId;

  public static final String JSON_PROPERTY_USER_ID = "user_id";
  @jakarta.annotation.Nullable  private String userId;

  public EmailSendTemplateRequest() { 
  }

  public EmailSendTemplateRequest addressField(@jakarta.annotation.Nullable String addressField) {
    this.addressField = addressField;
    return this;
  }

  /**
   * Email field of each Contact record to address the email to, such as &#39;Email&#39;, &#39;EmailAddress2&#39;, &#39;EmailAddress3&#39; or &#39;_CustomFieldName&#39;, defaulting to the contact&#39;s primary email
   * @return addressField
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "Email field of each Contact record to address the email to, such as 'Email', 'EmailAddress2', 'EmailAddress3' or '_CustomFieldName', defaulting to the contact's primary email")
  @JsonProperty(JSON_PROPERTY_ADDRESS_FIELD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getAddressField() {
    return addressField;
  }


  @JsonProperty(JSON_PROPERTY_ADDRESS_FIELD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAddressField(@jakarta.annotation.Nullable String addressField) {
    this.addressField = addressField;
  }


  public EmailSendTemplateRequest contactIds(@jakarta.annotation.Nullable List<String> contactIds) {
    this.contactIds = contactIds;
    return this;
  }

  public EmailSendTemplateRequest addContactIdsItem(String contactIdsItem) {
    if (this.contactIds == null) {
      this.contactIds = new ArrayList<>();
    }
    this.contactIds.add(contactIdsItem);
    return this;
  }

  /**
   * List of contacts to send
   * @return contactIds
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "List of contacts to send")
  @JsonProperty(JSON_PROPERTY_CONTACT_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<String> getContactIds() {
    return contactIds;
  }


  @JsonProperty(JSON_PROPERTY_CONTACT_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setContactIds(@jakarta.annotation.Nullable List<String> contactIds) {
    this.contactIds = contactIds;
  }


  public EmailSendTemplateRequest templateId(@jakarta.annotation.Nullable String templateId) {
    this.templateId = templateId;
    return this;
  }

  /**
   * Template ID
   * @return templateId
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "Template ID")
  @JsonProperty(JSON_PROPERTY_TEMPLATE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getTemplateId() {
    return templateId;
  }


  @JsonProperty(JSON_PROPERTY_TEMPLATE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTemplateId(@jakarta.annotation.Nullable String templateId) {
    this.templateId = templateId;
  }


  public EmailSendTemplateRequest userId(@jakarta.annotation.Nullable String userId) {
    this.userId = userId;
    return this;
  }

  /**
   * user id sending the email
   * @return userId
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "user id sending the email")
  @JsonProperty(JSON_PROPERTY_USER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getUserId() {
    return userId;
  }


  @JsonProperty(JSON_PROPERTY_USER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUserId(@jakarta.annotation.Nullable String userId) {
    this.userId = userId;
  }

  /**
   * Return true if this EmailSendTemplateRequest object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EmailSendTemplateRequest emailSendTemplateRequest = (EmailSendTemplateRequest) o;
    return Objects.equals(this.addressField, emailSendTemplateRequest.addressField) &&
        Objects.equals(this.contactIds, emailSendTemplateRequest.contactIds) &&
        Objects.equals(this.templateId, emailSendTemplateRequest.templateId) &&
        Objects.equals(this.userId, emailSendTemplateRequest.userId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(addressField, contactIds, templateId, userId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EmailSendTemplateRequest {\n");
    sb.append("    addressField: ").append(toIndentedString(addressField)).append("\n");
    sb.append("    contactIds: ").append(toIndentedString(contactIds)).append("\n");
    sb.append("    templateId: ").append(toIndentedString(templateId)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

    public static class Builder {
    
        private EmailSendTemplateRequest instance;
    
        public Builder() {
          this(new EmailSendTemplateRequest());
        }
    
        protected Builder(EmailSendTemplateRequest instance) {
          this.instance = instance;
        }
    
        public EmailSendTemplateRequest.Builder addressField(String addressField) {
              this.instance.addressField = addressField;
          return this;
        }
            public EmailSendTemplateRequest.Builder contactIds(List<String> contactIds) {
              this.instance.contactIds = contactIds;
          return this;
        }
            public EmailSendTemplateRequest.Builder templateId(String templateId) {
              this.instance.templateId = templateId;
          return this;
        }
            public EmailSendTemplateRequest.Builder userId(String userId) {
              this.instance.userId = userId;
          return this;
        }
        
    
        /**
        * returns a built EmailSendTemplateRequest instance.
        *
        * The builder is not reusable.
        */
        public EmailSendTemplateRequest build() {
          try {
            return this.instance;
          } finally {
            // ensure that this.instance is not reused
            this.instance = null;
          }
        }
    
        @Override
        public String toString() {
          return getClass() + "=(" + instance + ")";
        }
      }
    
      /**
      * Create a builder with no initialized field.
      */
      public static EmailSendTemplateRequest.Builder builder() {
        return new EmailSendTemplateRequest.Builder();
      }
    
      /**
      * Create a builder with a shallow copy of this instance.
      */
      public EmailSendTemplateRequest.Builder toBuilder() {
        return new EmailSendTemplateRequest.Builder()
          .addressField(getAddressField())
          .contactIds(getContactIds())
          .templateId(getTemplateId())
          .userId(getUserId());
      }
}

