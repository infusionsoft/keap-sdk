/*
 * Keap REST API
 * Keap REST Core Service
 *
 * The version of the OpenAPI document: 2.70.0.869301
 * Contact: api@keap.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.keap.core.sdk.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import jakarta.validation.constraints.*;
import jakarta.validation.Valid;


/**
 * AssignAutomationCategoryRequest
 */
@JsonPropertyOrder({
  AssignAutomationCategoryRequest.JSON_PROPERTY_APPLY_CATEGORY,
  AssignAutomationCategoryRequest.JSON_PROPERTY_AUTOMATION_IDS,
  AssignAutomationCategoryRequest.JSON_PROPERTY_CATEGORY_IDS
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.13.0")
public class AssignAutomationCategoryRequest implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_APPLY_CATEGORY = "apply_category";
  @jakarta.annotation.Nullable  private Boolean applyCategory;

  public static final String JSON_PROPERTY_AUTOMATION_IDS = "automation_ids";
  @jakarta.annotation.Nullable  private List<String> automationIds = new ArrayList<>();

  public static final String JSON_PROPERTY_CATEGORY_IDS = "category_ids";
  @jakarta.annotation.Nullable  private List<String> categoryIds = new ArrayList<>();

  public AssignAutomationCategoryRequest() { 
  }

  public AssignAutomationCategoryRequest applyCategory(@jakarta.annotation.Nullable Boolean applyCategory) {
    this.applyCategory = applyCategory;
    return this;
  }

  /**
   * Get applyCategory
   * @return applyCategory
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_APPLY_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getApplyCategory() {
    return applyCategory;
  }


  @JsonProperty(JSON_PROPERTY_APPLY_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setApplyCategory(@jakarta.annotation.Nullable Boolean applyCategory) {
    this.applyCategory = applyCategory;
  }


  public AssignAutomationCategoryRequest automationIds(@jakarta.annotation.Nullable List<String> automationIds) {
    this.automationIds = automationIds;
    return this;
  }

  public AssignAutomationCategoryRequest addAutomationIdsItem(String automationIdsItem) {
    if (this.automationIds == null) {
      this.automationIds = new ArrayList<>();
    }
    this.automationIds.add(automationIdsItem);
    return this;
  }

  /**
   * Get automationIds
   * @return automationIds
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_AUTOMATION_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<String> getAutomationIds() {
    return automationIds;
  }


  @JsonProperty(JSON_PROPERTY_AUTOMATION_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAutomationIds(@jakarta.annotation.Nullable List<String> automationIds) {
    this.automationIds = automationIds;
  }


  public AssignAutomationCategoryRequest categoryIds(@jakarta.annotation.Nullable List<String> categoryIds) {
    this.categoryIds = categoryIds;
    return this;
  }

  public AssignAutomationCategoryRequest addCategoryIdsItem(String categoryIdsItem) {
    if (this.categoryIds == null) {
      this.categoryIds = new ArrayList<>();
    }
    this.categoryIds.add(categoryIdsItem);
    return this;
  }

  /**
   * Get categoryIds
   * @return categoryIds
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_CATEGORY_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<String> getCategoryIds() {
    return categoryIds;
  }


  @JsonProperty(JSON_PROPERTY_CATEGORY_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCategoryIds(@jakarta.annotation.Nullable List<String> categoryIds) {
    this.categoryIds = categoryIds;
  }

  /**
   * Return true if this AssignAutomationCategoryRequest object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AssignAutomationCategoryRequest assignAutomationCategoryRequest = (AssignAutomationCategoryRequest) o;
    return Objects.equals(this.applyCategory, assignAutomationCategoryRequest.applyCategory) &&
        Objects.equals(this.automationIds, assignAutomationCategoryRequest.automationIds) &&
        Objects.equals(this.categoryIds, assignAutomationCategoryRequest.categoryIds);
  }

  @Override
  public int hashCode() {
    return Objects.hash(applyCategory, automationIds, categoryIds);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AssignAutomationCategoryRequest {\n");
    sb.append("    applyCategory: ").append(toIndentedString(applyCategory)).append("\n");
    sb.append("    automationIds: ").append(toIndentedString(automationIds)).append("\n");
    sb.append("    categoryIds: ").append(toIndentedString(categoryIds)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

    public static class Builder {
    
        private AssignAutomationCategoryRequest instance;
    
        public Builder() {
          this(new AssignAutomationCategoryRequest());
        }
    
        protected Builder(AssignAutomationCategoryRequest instance) {
          this.instance = instance;
        }
    
        public AssignAutomationCategoryRequest.Builder applyCategory(Boolean applyCategory) {
              this.instance.applyCategory = applyCategory;
          return this;
        }
            public AssignAutomationCategoryRequest.Builder automationIds(List<String> automationIds) {
              this.instance.automationIds = automationIds;
          return this;
        }
            public AssignAutomationCategoryRequest.Builder categoryIds(List<String> categoryIds) {
              this.instance.categoryIds = categoryIds;
          return this;
        }
        
    
        /**
        * returns a built AssignAutomationCategoryRequest instance.
        *
        * The builder is not reusable.
        */
        public AssignAutomationCategoryRequest build() {
          try {
            return this.instance;
          } finally {
            // ensure that this.instance is not reused
            this.instance = null;
          }
        }
    
        @Override
        public String toString() {
          return getClass() + "=(" + instance + ")";
        }
      }
    
      /**
      * Create a builder with no initialized field.
      */
      public static AssignAutomationCategoryRequest.Builder builder() {
        return new AssignAutomationCategoryRequest.Builder();
      }
    
      /**
      * Create a builder with a shallow copy of this instance.
      */
      public AssignAutomationCategoryRequest.Builder toBuilder() {
        return new AssignAutomationCategoryRequest.Builder()
          .applyCategory(getApplyCategory())
          .automationIds(getAutomationIds())
          .categoryIds(getCategoryIds());
      }
}

