/*
 * Keap REST API
 * Keap REST Core Service
 *
 * The version of the OpenAPI document: 2.70.0.812056
 * Contact: api@keap.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.keap.core.sdk.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.keap.core.sdk.model.PipelineCustomFieldDisplayStyle;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import jakarta.validation.constraints.*;
import jakarta.validation.Valid;


/**
 * Class representing a property of a card custom field.
 */
@Schema(description = "Class representing a property of a card custom field.")
@JsonPropertyOrder({
  PipelineCustomFieldCardProperty.JSON_PROPERTY_PROPERTY_NAME,
  PipelineCustomFieldCardProperty.JSON_PROPERTY_STYLES
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.13.0")
public class PipelineCustomFieldCardProperty implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_PROPERTY_NAME = "property_name";
  @jakarta.annotation.Nullable  private String propertyName;

  public static final String JSON_PROPERTY_STYLES = "styles";
  @jakarta.annotation.Nullable  private List<PipelineCustomFieldDisplayStyle> styles;

  public PipelineCustomFieldCardProperty() { 
  }

  public PipelineCustomFieldCardProperty propertyName(@jakarta.annotation.Nullable String propertyName) {
    this.propertyName = propertyName;
    return this;
  }

  /**
   * The name of the property.
   * @return propertyName
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "The name of the property.")
  @JsonProperty(JSON_PROPERTY_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getPropertyName() {
    return propertyName;
  }


  @JsonProperty(JSON_PROPERTY_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPropertyName(@jakarta.annotation.Nullable String propertyName) {
    this.propertyName = propertyName;
  }


  public PipelineCustomFieldCardProperty styles(@jakarta.annotation.Nullable List<PipelineCustomFieldDisplayStyle> styles) {
    this.styles = styles;
    return this;
  }

  public PipelineCustomFieldCardProperty addStylesItem(PipelineCustomFieldDisplayStyle stylesItem) {
    if (this.styles == null) {
      this.styles = new ArrayList<>();
    }
    this.styles.add(stylesItem);
    return this;
  }

  /**
   * The display styles associated with the property.
   * @return styles
   */
  @jakarta.annotation.Nullable  @Valid
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "The display styles associated with the property.")
  @JsonProperty(JSON_PROPERTY_STYLES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<PipelineCustomFieldDisplayStyle> getStyles() {
    return styles;
  }


  @JsonProperty(JSON_PROPERTY_STYLES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStyles(@jakarta.annotation.Nullable List<PipelineCustomFieldDisplayStyle> styles) {
    this.styles = styles;
  }

  /**
   * Return true if this PipelineCustomFieldCardProperty object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PipelineCustomFieldCardProperty pipelineCustomFieldCardProperty = (PipelineCustomFieldCardProperty) o;
    return Objects.equals(this.propertyName, pipelineCustomFieldCardProperty.propertyName) &&
        Objects.equals(this.styles, pipelineCustomFieldCardProperty.styles);
  }

  @Override
  public int hashCode() {
    return Objects.hash(propertyName, styles);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PipelineCustomFieldCardProperty {\n");
    sb.append("    propertyName: ").append(toIndentedString(propertyName)).append("\n");
    sb.append("    styles: ").append(toIndentedString(styles)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

    public static class Builder {
    
        private PipelineCustomFieldCardProperty instance;
    
        public Builder() {
          this(new PipelineCustomFieldCardProperty());
        }
    
        protected Builder(PipelineCustomFieldCardProperty instance) {
          this.instance = instance;
        }
    
        public PipelineCustomFieldCardProperty.Builder propertyName(String propertyName) {
              this.instance.propertyName = propertyName;
          return this;
        }
            public PipelineCustomFieldCardProperty.Builder styles(List<PipelineCustomFieldDisplayStyle> styles) {
              this.instance.styles = styles;
          return this;
        }
        
    
        /**
        * returns a built PipelineCustomFieldCardProperty instance.
        *
        * The builder is not reusable.
        */
        public PipelineCustomFieldCardProperty build() {
          try {
            return this.instance;
          } finally {
            // ensure that this.instance is not reused
            this.instance = null;
          }
        }
    
        @Override
        public String toString() {
          return getClass() + "=(" + instance + ")";
        }
      }
    
      /**
      * Create a builder with no initialized field.
      */
      public static PipelineCustomFieldCardProperty.Builder builder() {
        return new PipelineCustomFieldCardProperty.Builder();
      }
    
      /**
      * Create a builder with a shallow copy of this instance.
      */
      public PipelineCustomFieldCardProperty.Builder toBuilder() {
        return new PipelineCustomFieldCardProperty.Builder()
          .propertyName(getPropertyName())
          .styles(getStyles());
      }
}

