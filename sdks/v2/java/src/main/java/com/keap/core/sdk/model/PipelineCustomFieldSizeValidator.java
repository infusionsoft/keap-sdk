/*
 * Keap REST API
 * Keap REST Core Service
 *
 * The version of the OpenAPI document: 2.70.0.809589
 * Contact: api@keap.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.keap.core.sdk.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.keap.core.sdk.model.PipelineCustomFieldSizeValidationType;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.Arrays;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import jakarta.validation.constraints.*;
import jakarta.validation.Valid;


/**
 * Class representing a size validator for custom fields.
 */
@Schema(description = "Class representing a size validator for custom fields.")
@JsonPropertyOrder({
  PipelineCustomFieldSizeValidator.JSON_PROPERTY_SIZE_TYPE,
  PipelineCustomFieldSizeValidator.JSON_PROPERTY_SIZE
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.13.0")
public class PipelineCustomFieldSizeValidator implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_SIZE_TYPE = "size_type";
  @jakarta.annotation.Nonnull  private PipelineCustomFieldSizeValidationType sizeType;

  public static final String JSON_PROPERTY_SIZE = "size";
  @jakarta.annotation.Nonnull  private Integer size;

  public PipelineCustomFieldSizeValidator() { 
  }

  public PipelineCustomFieldSizeValidator sizeType(@jakarta.annotation.Nonnull PipelineCustomFieldSizeValidationType sizeType) {
    this.sizeType = sizeType;
    return this;
  }

  /**
   * The type of size validation for the custom field. This field is required.
   * @return sizeType
   */
  @jakarta.annotation.Nonnull  @NotNull
  @Valid
  @Schema(requiredMode = Schema.RequiredMode.REQUIRED, description = "The type of size validation for the custom field. This field is required.")
  @JsonProperty(JSON_PROPERTY_SIZE_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public PipelineCustomFieldSizeValidationType getSizeType() {
    return sizeType;
  }


  @JsonProperty(JSON_PROPERTY_SIZE_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSizeType(@jakarta.annotation.Nonnull PipelineCustomFieldSizeValidationType sizeType) {
    this.sizeType = sizeType;
  }


  public PipelineCustomFieldSizeValidator size(@jakarta.annotation.Nonnull Integer size) {
    this.size = size;
    return this;
  }

  /**
   * The size value for the custom field.
   * @return size
   */
  @jakarta.annotation.Nonnull  @NotNull
  @Schema(requiredMode = Schema.RequiredMode.REQUIRED, description = "The size value for the custom field.")
  @JsonProperty(JSON_PROPERTY_SIZE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public Integer getSize() {
    return size;
  }


  @JsonProperty(JSON_PROPERTY_SIZE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSize(@jakarta.annotation.Nonnull Integer size) {
    this.size = size;
  }

  /**
   * Return true if this PipelineCustomFieldSizeValidator object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PipelineCustomFieldSizeValidator pipelineCustomFieldSizeValidator = (PipelineCustomFieldSizeValidator) o;
    return Objects.equals(this.sizeType, pipelineCustomFieldSizeValidator.sizeType) &&
        Objects.equals(this.size, pipelineCustomFieldSizeValidator.size);
  }

  @Override
  public int hashCode() {
    return Objects.hash(sizeType, size);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PipelineCustomFieldSizeValidator {\n");
    sb.append("    sizeType: ").append(toIndentedString(sizeType)).append("\n");
    sb.append("    size: ").append(toIndentedString(size)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

    public static class Builder {
    
        private PipelineCustomFieldSizeValidator instance;
    
        public Builder() {
          this(new PipelineCustomFieldSizeValidator());
        }
    
        protected Builder(PipelineCustomFieldSizeValidator instance) {
          this.instance = instance;
        }
    
        public PipelineCustomFieldSizeValidator.Builder sizeType(PipelineCustomFieldSizeValidationType sizeType) {
              this.instance.sizeType = sizeType;
          return this;
        }
            public PipelineCustomFieldSizeValidator.Builder size(Integer size) {
              this.instance.size = size;
          return this;
        }
        
    
        /**
        * returns a built PipelineCustomFieldSizeValidator instance.
        *
        * The builder is not reusable.
        */
        public PipelineCustomFieldSizeValidator build() {
          try {
            return this.instance;
          } finally {
            // ensure that this.instance is not reused
            this.instance = null;
          }
        }
    
        @Override
        public String toString() {
          return getClass() + "=(" + instance + ")";
        }
      }
    
      /**
      * Create a builder with no initialized field.
      */
      public static PipelineCustomFieldSizeValidator.Builder builder() {
        return new PipelineCustomFieldSizeValidator.Builder();
      }
    
      /**
      * Create a builder with a shallow copy of this instance.
      */
      public PipelineCustomFieldSizeValidator.Builder toBuilder() {
        return new PipelineCustomFieldSizeValidator.Builder()
          .sizeType(getSizeType())
          .size(getSize());
      }
}

