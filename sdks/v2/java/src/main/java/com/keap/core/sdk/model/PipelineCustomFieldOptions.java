/*
 * Keap REST API
 * Keap REST Core Service
 *
 * The version of the OpenAPI document: 2.70.0.809589
 * Contact: api@keap.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.keap.core.sdk.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.keap.core.sdk.model.PipelineCustomFieldOptionDisplayType;
import com.keap.core.sdk.model.PipelineCustomFieldOptionGroup;
import com.keap.core.sdk.model.PipelineCustomFieldRefType;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import jakarta.validation.constraints.*;
import jakarta.validation.Valid;


/**
 * Class representing the options for a custom field.
 */
@Schema(description = "Class representing the options for a custom field.")
@JsonPropertyOrder({
  PipelineCustomFieldOptions.JSON_PROPERTY_DEFAULT_OPTION_ID,
  PipelineCustomFieldOptions.JSON_PROPERTY_DISPLAY_TYPE,
  PipelineCustomFieldOptions.JSON_PROPERTY_OPTION_SOURCE,
  PipelineCustomFieldOptions.JSON_PROPERTY_GROUPS
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.13.0")
public class PipelineCustomFieldOptions implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_DEFAULT_OPTION_ID = "default_option_id";
  @jakarta.annotation.Nullable  private String defaultOptionId;

  public static final String JSON_PROPERTY_DISPLAY_TYPE = "display_type";
  @jakarta.annotation.Nonnull  private PipelineCustomFieldOptionDisplayType displayType;

  public static final String JSON_PROPERTY_OPTION_SOURCE = "option_source";
  @jakarta.annotation.Nullable  private PipelineCustomFieldRefType optionSource;

  public static final String JSON_PROPERTY_GROUPS = "groups";
  @jakarta.annotation.Nonnull  private List<@Valid PipelineCustomFieldOptionGroup> groups = new ArrayList<>();

  public PipelineCustomFieldOptions() { 
  }

  public PipelineCustomFieldOptions defaultOptionId(@jakarta.annotation.Nullable String defaultOptionId) {
    this.defaultOptionId = defaultOptionId;
    return this;
  }

  /**
   * The default option ID for the custom field.
   * @return defaultOptionId
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "The default option ID for the custom field.")
  @JsonProperty(JSON_PROPERTY_DEFAULT_OPTION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getDefaultOptionId() {
    return defaultOptionId;
  }


  @JsonProperty(JSON_PROPERTY_DEFAULT_OPTION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDefaultOptionId(@jakarta.annotation.Nullable String defaultOptionId) {
    this.defaultOptionId = defaultOptionId;
  }


  public PipelineCustomFieldOptions displayType(@jakarta.annotation.Nonnull PipelineCustomFieldOptionDisplayType displayType) {
    this.displayType = displayType;
    return this;
  }

  /**
   * The display type of the custom field options. This field is required.
   * @return displayType
   */
  @jakarta.annotation.Nonnull  @NotNull
  @Valid
  @Schema(requiredMode = Schema.RequiredMode.REQUIRED, description = "The display type of the custom field options. This field is required.")
  @JsonProperty(JSON_PROPERTY_DISPLAY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public PipelineCustomFieldOptionDisplayType getDisplayType() {
    return displayType;
  }


  @JsonProperty(JSON_PROPERTY_DISPLAY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDisplayType(@jakarta.annotation.Nonnull PipelineCustomFieldOptionDisplayType displayType) {
    this.displayType = displayType;
  }


  public PipelineCustomFieldOptions optionSource(@jakarta.annotation.Nullable PipelineCustomFieldRefType optionSource) {
    this.optionSource = optionSource;
    return this;
  }

  /**
   * The source of the custom field options. This field is optional.
   * @return optionSource
   */
  @jakarta.annotation.Nullable  @Valid
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "The source of the custom field options. This field is optional.")
  @JsonProperty(JSON_PROPERTY_OPTION_SOURCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public PipelineCustomFieldRefType getOptionSource() {
    return optionSource;
  }


  @JsonProperty(JSON_PROPERTY_OPTION_SOURCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOptionSource(@jakarta.annotation.Nullable PipelineCustomFieldRefType optionSource) {
    this.optionSource = optionSource;
  }


  public PipelineCustomFieldOptions groups(@jakarta.annotation.Nonnull List<@Valid PipelineCustomFieldOptionGroup> groups) {
    this.groups = groups;
    return this;
  }

  public PipelineCustomFieldOptions addGroupsItem(PipelineCustomFieldOptionGroup groupsItem) {
    if (this.groups == null) {
      this.groups = new ArrayList<>();
    }
    this.groups.add(groupsItem);
    return this;
  }

  /**
   * The list of custom field option groups.
   * @return groups
   */
  @jakarta.annotation.Nonnull  @NotNull
  @Valid
  @Schema(requiredMode = Schema.RequiredMode.REQUIRED, description = "The list of custom field option groups.")
  @JsonProperty(JSON_PROPERTY_GROUPS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public List<@Valid PipelineCustomFieldOptionGroup> getGroups() {
    return groups;
  }


  @JsonProperty(JSON_PROPERTY_GROUPS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setGroups(@jakarta.annotation.Nonnull List<@Valid PipelineCustomFieldOptionGroup> groups) {
    this.groups = groups;
  }

  /**
   * Return true if this PipelineCustomFieldOptions object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PipelineCustomFieldOptions pipelineCustomFieldOptions = (PipelineCustomFieldOptions) o;
    return Objects.equals(this.defaultOptionId, pipelineCustomFieldOptions.defaultOptionId) &&
        Objects.equals(this.displayType, pipelineCustomFieldOptions.displayType) &&
        Objects.equals(this.optionSource, pipelineCustomFieldOptions.optionSource) &&
        Objects.equals(this.groups, pipelineCustomFieldOptions.groups);
  }

  @Override
  public int hashCode() {
    return Objects.hash(defaultOptionId, displayType, optionSource, groups);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PipelineCustomFieldOptions {\n");
    sb.append("    defaultOptionId: ").append(toIndentedString(defaultOptionId)).append("\n");
    sb.append("    displayType: ").append(toIndentedString(displayType)).append("\n");
    sb.append("    optionSource: ").append(toIndentedString(optionSource)).append("\n");
    sb.append("    groups: ").append(toIndentedString(groups)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

    public static class Builder {
    
        private PipelineCustomFieldOptions instance;
    
        public Builder() {
          this(new PipelineCustomFieldOptions());
        }
    
        protected Builder(PipelineCustomFieldOptions instance) {
          this.instance = instance;
        }
    
        public PipelineCustomFieldOptions.Builder defaultOptionId(String defaultOptionId) {
              this.instance.defaultOptionId = defaultOptionId;
          return this;
        }
            public PipelineCustomFieldOptions.Builder displayType(PipelineCustomFieldOptionDisplayType displayType) {
              this.instance.displayType = displayType;
          return this;
        }
            public PipelineCustomFieldOptions.Builder optionSource(PipelineCustomFieldRefType optionSource) {
              this.instance.optionSource = optionSource;
          return this;
        }
            public PipelineCustomFieldOptions.Builder groups(List<PipelineCustomFieldOptionGroup> groups) {
              this.instance.groups = groups;
          return this;
        }
        
    
        /**
        * returns a built PipelineCustomFieldOptions instance.
        *
        * The builder is not reusable.
        */
        public PipelineCustomFieldOptions build() {
          try {
            return this.instance;
          } finally {
            // ensure that this.instance is not reused
            this.instance = null;
          }
        }
    
        @Override
        public String toString() {
          return getClass() + "=(" + instance + ")";
        }
      }
    
      /**
      * Create a builder with no initialized field.
      */
      public static PipelineCustomFieldOptions.Builder builder() {
        return new PipelineCustomFieldOptions.Builder();
      }
    
      /**
      * Create a builder with a shallow copy of this instance.
      */
      public PipelineCustomFieldOptions.Builder toBuilder() {
        return new PipelineCustomFieldOptions.Builder()
          .defaultOptionId(getDefaultOptionId())
          .displayType(getDisplayType())
          .optionSource(getOptionSource())
          .groups(getGroups());
      }
}

