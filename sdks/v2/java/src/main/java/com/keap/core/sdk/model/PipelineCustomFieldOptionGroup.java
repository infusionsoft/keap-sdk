/*
 * Keap REST API
 * Keap REST Core Service
 *
 * The version of the OpenAPI document: 2.70.0.812056
 * Contact: api@keap.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.keap.core.sdk.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.keap.core.sdk.model.PipelineCustomFieldOption;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import jakarta.validation.constraints.*;
import jakarta.validation.Valid;


/**
 * Class representing a group of custom field options.
 */
@Schema(description = "Class representing a group of custom field options.")
@JsonPropertyOrder({
  PipelineCustomFieldOptionGroup.JSON_PROPERTY_HEADER,
  PipelineCustomFieldOptionGroup.JSON_PROPERTY_OPTIONS,
  PipelineCustomFieldOptionGroup.JSON_PROPERTY_SORT_ORDER
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.13.0")
public class PipelineCustomFieldOptionGroup implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_HEADER = "header";
  @jakarta.annotation.Nullable  private String header;

  public static final String JSON_PROPERTY_OPTIONS = "options";
  @jakarta.annotation.Nonnull  private List<@Valid PipelineCustomFieldOption> options = new ArrayList<>();

  public static final String JSON_PROPERTY_SORT_ORDER = "sort_order";
  @jakarta.annotation.Nonnull  private Integer sortOrder;

  public PipelineCustomFieldOptionGroup() { 
  }

  public PipelineCustomFieldOptionGroup header(@jakarta.annotation.Nullable String header) {
    this.header = header;
    return this;
  }

  /**
   * The header of the custom field option group.
   * @return header
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "The header of the custom field option group.")
  @JsonProperty(JSON_PROPERTY_HEADER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getHeader() {
    return header;
  }


  @JsonProperty(JSON_PROPERTY_HEADER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHeader(@jakarta.annotation.Nullable String header) {
    this.header = header;
  }


  public PipelineCustomFieldOptionGroup options(@jakarta.annotation.Nonnull List<@Valid PipelineCustomFieldOption> options) {
    this.options = options;
    return this;
  }

  public PipelineCustomFieldOptionGroup addOptionsItem(PipelineCustomFieldOption optionsItem) {
    if (this.options == null) {
      this.options = new ArrayList<>();
    }
    this.options.add(optionsItem);
    return this;
  }

  /**
   * The list of custom field options in the group.
   * @return options
   */
  @jakarta.annotation.Nonnull  @NotNull
  @Valid
  @Schema(requiredMode = Schema.RequiredMode.REQUIRED, description = "The list of custom field options in the group.")
  @JsonProperty(JSON_PROPERTY_OPTIONS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public List<@Valid PipelineCustomFieldOption> getOptions() {
    return options;
  }


  @JsonProperty(JSON_PROPERTY_OPTIONS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setOptions(@jakarta.annotation.Nonnull List<@Valid PipelineCustomFieldOption> options) {
    this.options = options;
  }


  public PipelineCustomFieldOptionGroup sortOrder(@jakarta.annotation.Nonnull Integer sortOrder) {
    this.sortOrder = sortOrder;
    return this;
  }

  /**
   * The sort order of the custom field option group.
   * @return sortOrder
   */
  @jakarta.annotation.Nonnull  @NotNull
  @Schema(requiredMode = Schema.RequiredMode.REQUIRED, description = "The sort order of the custom field option group.")
  @JsonProperty(JSON_PROPERTY_SORT_ORDER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public Integer getSortOrder() {
    return sortOrder;
  }


  @JsonProperty(JSON_PROPERTY_SORT_ORDER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSortOrder(@jakarta.annotation.Nonnull Integer sortOrder) {
    this.sortOrder = sortOrder;
  }

  /**
   * Return true if this PipelineCustomFieldOptionGroup object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PipelineCustomFieldOptionGroup pipelineCustomFieldOptionGroup = (PipelineCustomFieldOptionGroup) o;
    return Objects.equals(this.header, pipelineCustomFieldOptionGroup.header) &&
        Objects.equals(this.options, pipelineCustomFieldOptionGroup.options) &&
        Objects.equals(this.sortOrder, pipelineCustomFieldOptionGroup.sortOrder);
  }

  @Override
  public int hashCode() {
    return Objects.hash(header, options, sortOrder);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PipelineCustomFieldOptionGroup {\n");
    sb.append("    header: ").append(toIndentedString(header)).append("\n");
    sb.append("    options: ").append(toIndentedString(options)).append("\n");
    sb.append("    sortOrder: ").append(toIndentedString(sortOrder)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

    public static class Builder {
    
        private PipelineCustomFieldOptionGroup instance;
    
        public Builder() {
          this(new PipelineCustomFieldOptionGroup());
        }
    
        protected Builder(PipelineCustomFieldOptionGroup instance) {
          this.instance = instance;
        }
    
        public PipelineCustomFieldOptionGroup.Builder header(String header) {
              this.instance.header = header;
          return this;
        }
            public PipelineCustomFieldOptionGroup.Builder options(List<PipelineCustomFieldOption> options) {
              this.instance.options = options;
          return this;
        }
            public PipelineCustomFieldOptionGroup.Builder sortOrder(Integer sortOrder) {
              this.instance.sortOrder = sortOrder;
          return this;
        }
        
    
        /**
        * returns a built PipelineCustomFieldOptionGroup instance.
        *
        * The builder is not reusable.
        */
        public PipelineCustomFieldOptionGroup build() {
          try {
            return this.instance;
          } finally {
            // ensure that this.instance is not reused
            this.instance = null;
          }
        }
    
        @Override
        public String toString() {
          return getClass() + "=(" + instance + ")";
        }
      }
    
      /**
      * Create a builder with no initialized field.
      */
      public static PipelineCustomFieldOptionGroup.Builder builder() {
        return new PipelineCustomFieldOptionGroup.Builder();
      }
    
      /**
      * Create a builder with a shallow copy of this instance.
      */
      public PipelineCustomFieldOptionGroup.Builder toBuilder() {
        return new PipelineCustomFieldOptionGroup.Builder()
          .header(getHeader())
          .options(getOptions())
          .sortOrder(getSortOrder());
      }
}

