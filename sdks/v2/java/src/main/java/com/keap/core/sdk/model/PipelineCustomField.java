/*
 * Keap REST API
 * Keap REST Core Service
 *
 * The version of the OpenAPI document: 2.70.0.809589
 * Contact: api@keap.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.keap.core.sdk.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.keap.core.sdk.model.PipelineCustomFieldDisplayOptions;
import com.keap.core.sdk.model.PipelineCustomFieldOptions;
import com.keap.core.sdk.model.PipelineCustomFieldPropertyValidator;
import com.keap.core.sdk.model.PipelineCustomFieldType;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import jakarta.validation.constraints.*;
import jakarta.validation.Valid;


/**
 * Represents a custom field in the system. This class extends the BaseModel and includes various properties related to custom fields.
 */
@Schema(description = "Represents a custom field in the system. This class extends the BaseModel and includes various properties related to custom fields.")
@JsonPropertyOrder({
  PipelineCustomField.JSON_PROPERTY_ID,
  PipelineCustomField.JSON_PROPERTY_NAME,
  PipelineCustomField.JSON_PROPERTY_TYPE,
  PipelineCustomField.JSON_PROPERTY_LABEL,
  PipelineCustomField.JSON_PROPERTY_DESCRIPTION,
  PipelineCustomField.JSON_PROPERTY_HELPER_TEXT,
  PipelineCustomField.JSON_PROPERTY_DEFAULT_VALUE,
  PipelineCustomField.JSON_PROPERTY_VALIDATORS,
  PipelineCustomField.JSON_PROPERTY_DISPLAY_OPTIONS,
  PipelineCustomField.JSON_PROPERTY_OPTIONS
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.13.0")
public class PipelineCustomField implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_ID = "id";
  @jakarta.annotation.Nonnull  private String id;

  public static final String JSON_PROPERTY_NAME = "name";
  @jakarta.annotation.Nullable  private String name;

  public static final String JSON_PROPERTY_TYPE = "type";
  @jakarta.annotation.Nullable  private PipelineCustomFieldType type;

  public static final String JSON_PROPERTY_LABEL = "label";
  @jakarta.annotation.Nullable  private String label;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  @jakarta.annotation.Nullable  private String description;

  public static final String JSON_PROPERTY_HELPER_TEXT = "helper_text";
  @jakarta.annotation.Nullable  private String helperText;

  public static final String JSON_PROPERTY_DEFAULT_VALUE = "default_value";
  @jakarta.annotation.Nullable  private Object defaultValue;

  public static final String JSON_PROPERTY_VALIDATORS = "validators";
  @jakarta.annotation.Nullable  private List<@Valid PipelineCustomFieldPropertyValidator> validators;

  public static final String JSON_PROPERTY_DISPLAY_OPTIONS = "display_options";
  @jakarta.annotation.Nullable  private PipelineCustomFieldDisplayOptions displayOptions;

  public static final String JSON_PROPERTY_OPTIONS = "options";
  @jakarta.annotation.Nullable  private PipelineCustomFieldOptions options;

  public PipelineCustomField() { 
  }

  public PipelineCustomField id(@jakarta.annotation.Nonnull String id) {
    this.id = id;
    return this;
  }

  /**
   * The identifier of the custom field.
   * @return id
   */
  @jakarta.annotation.Nonnull  @NotNull
  @Schema(requiredMode = Schema.RequiredMode.REQUIRED, description = "The identifier of the custom field.")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(@jakarta.annotation.Nonnull String id) {
    this.id = id;
  }


  public PipelineCustomField name(@jakarta.annotation.Nullable String name) {
    this.name = name;
    return this;
  }

  /**
   * The name of the custom field. This field is optional.
   * @return name
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "The name of the custom field. This field is optional.")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(@jakarta.annotation.Nullable String name) {
    this.name = name;
  }


  public PipelineCustomField type(@jakarta.annotation.Nullable PipelineCustomFieldType type) {
    this.type = type;
    return this;
  }

  /**
   * The type of the custom field. This field is optional and must be a valid PipelineCustomFieldType.
   * @return type
   */
  @jakarta.annotation.Nullable  @Valid
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "The type of the custom field. This field is optional and must be a valid PipelineCustomFieldType.")
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public PipelineCustomFieldType getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(@jakarta.annotation.Nullable PipelineCustomFieldType type) {
    this.type = type;
  }


  public PipelineCustomField label(@jakarta.annotation.Nullable String label) {
    this.label = label;
    return this;
  }

  /**
   * The label of the custom field. This field is optional.
   * @return label
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "The label of the custom field. This field is optional.")
  @JsonProperty(JSON_PROPERTY_LABEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getLabel() {
    return label;
  }


  @JsonProperty(JSON_PROPERTY_LABEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLabel(@jakarta.annotation.Nullable String label) {
    this.label = label;
  }


  public PipelineCustomField description(@jakarta.annotation.Nullable String description) {
    this.description = description;
    return this;
  }

  /**
   * The description of the custom field. This field is optional.
   * @return description
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "The description of the custom field. This field is optional.")
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(@jakarta.annotation.Nullable String description) {
    this.description = description;
  }


  public PipelineCustomField helperText(@jakarta.annotation.Nullable String helperText) {
    this.helperText = helperText;
    return this;
  }

  /**
   * The helper text for the custom field. This field is optional and is serialized to JSON as \&quot;helper_text\&quot;.
   * @return helperText
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "The helper text for the custom field. This field is optional and is serialized to JSON as \"helper_text\".")
  @JsonProperty(JSON_PROPERTY_HELPER_TEXT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getHelperText() {
    return helperText;
  }


  @JsonProperty(JSON_PROPERTY_HELPER_TEXT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHelperText(@jakarta.annotation.Nullable String helperText) {
    this.helperText = helperText;
  }


  public PipelineCustomField defaultValue(@jakarta.annotation.Nullable Object defaultValue) {
    this.defaultValue = defaultValue;
    return this;
  }

  /**
   * The default value of the custom field. This field is optional and must be a valid Object.
   * @return defaultValue
   */
  @jakarta.annotation.Nullable  @NotNull
  @Schema(requiredMode = Schema.RequiredMode.REQUIRED, description = "The default value of the custom field. This field is optional and must be a valid Object.")
  @JsonProperty(JSON_PROPERTY_DEFAULT_VALUE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public Object getDefaultValue() {
    return defaultValue;
  }


  @JsonProperty(JSON_PROPERTY_DEFAULT_VALUE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDefaultValue(@jakarta.annotation.Nullable Object defaultValue) {
    this.defaultValue = defaultValue;
  }


  public PipelineCustomField validators(@jakarta.annotation.Nullable List<@Valid PipelineCustomFieldPropertyValidator> validators) {
    this.validators = validators;
    return this;
  }

  public PipelineCustomField addValidatorsItem(PipelineCustomFieldPropertyValidator validatorsItem) {
    if (this.validators == null) {
      this.validators = new ArrayList<>();
    }
    this.validators.add(validatorsItem);
    return this;
  }

  /**
   * The list of validators for the custom field. This field is optional and must be a list of valid PipelineCustomFieldPropertyValidator.
   * @return validators
   */
  @jakarta.annotation.Nullable  @Valid
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "The list of validators for the custom field. This field is optional and must be a list of valid PipelineCustomFieldPropertyValidator.")
  @JsonProperty(JSON_PROPERTY_VALIDATORS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<@Valid PipelineCustomFieldPropertyValidator> getValidators() {
    return validators;
  }


  @JsonProperty(JSON_PROPERTY_VALIDATORS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setValidators(@jakarta.annotation.Nullable List<@Valid PipelineCustomFieldPropertyValidator> validators) {
    this.validators = validators;
  }


  public PipelineCustomField displayOptions(@jakarta.annotation.Nullable PipelineCustomFieldDisplayOptions displayOptions) {
    this.displayOptions = displayOptions;
    return this;
  }

  /**
   * The display options for the custom field. This field is optional and must be a valid DisplayOptions.
   * @return displayOptions
   */
  @jakarta.annotation.Nullable  @Valid
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "The display options for the custom field. This field is optional and must be a valid DisplayOptions.")
  @JsonProperty(JSON_PROPERTY_DISPLAY_OPTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public PipelineCustomFieldDisplayOptions getDisplayOptions() {
    return displayOptions;
  }


  @JsonProperty(JSON_PROPERTY_DISPLAY_OPTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDisplayOptions(@jakarta.annotation.Nullable PipelineCustomFieldDisplayOptions displayOptions) {
    this.displayOptions = displayOptions;
  }


  public PipelineCustomField options(@jakarta.annotation.Nullable PipelineCustomFieldOptions options) {
    this.options = options;
    return this;
  }

  /**
   * The options for the custom field. This field is optional and must be a valid PipelineCustomFieldOptions.
   * @return options
   */
  @jakarta.annotation.Nullable  @Valid
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "The options for the custom field. This field is optional and must be a valid PipelineCustomFieldOptions.")
  @JsonProperty(JSON_PROPERTY_OPTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public PipelineCustomFieldOptions getOptions() {
    return options;
  }


  @JsonProperty(JSON_PROPERTY_OPTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOptions(@jakarta.annotation.Nullable PipelineCustomFieldOptions options) {
    this.options = options;
  }

  /**
   * Return true if this PipelineCustomField object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PipelineCustomField pipelineCustomField = (PipelineCustomField) o;
    return Objects.equals(this.id, pipelineCustomField.id) &&
        Objects.equals(this.name, pipelineCustomField.name) &&
        Objects.equals(this.type, pipelineCustomField.type) &&
        Objects.equals(this.label, pipelineCustomField.label) &&
        Objects.equals(this.description, pipelineCustomField.description) &&
        Objects.equals(this.helperText, pipelineCustomField.helperText) &&
        Objects.equals(this.defaultValue, pipelineCustomField.defaultValue) &&
        Objects.equals(this.validators, pipelineCustomField.validators) &&
        Objects.equals(this.displayOptions, pipelineCustomField.displayOptions) &&
        Objects.equals(this.options, pipelineCustomField.options);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, type, label, description, helperText, defaultValue, validators, displayOptions, options);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PipelineCustomField {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    label: ").append(toIndentedString(label)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    helperText: ").append(toIndentedString(helperText)).append("\n");
    sb.append("    defaultValue: ").append(toIndentedString(defaultValue)).append("\n");
    sb.append("    validators: ").append(toIndentedString(validators)).append("\n");
    sb.append("    displayOptions: ").append(toIndentedString(displayOptions)).append("\n");
    sb.append("    options: ").append(toIndentedString(options)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

    public static class Builder {
    
        private PipelineCustomField instance;
    
        public Builder() {
          this(new PipelineCustomField());
        }
    
        protected Builder(PipelineCustomField instance) {
          this.instance = instance;
        }
    
        public PipelineCustomField.Builder id(String id) {
              this.instance.id = id;
          return this;
        }
            public PipelineCustomField.Builder name(String name) {
              this.instance.name = name;
          return this;
        }
            public PipelineCustomField.Builder type(PipelineCustomFieldType type) {
              this.instance.type = type;
          return this;
        }
            public PipelineCustomField.Builder label(String label) {
              this.instance.label = label;
          return this;
        }
            public PipelineCustomField.Builder description(String description) {
              this.instance.description = description;
          return this;
        }
            public PipelineCustomField.Builder helperText(String helperText) {
              this.instance.helperText = helperText;
          return this;
        }
            public PipelineCustomField.Builder defaultValue(Object defaultValue) {
              this.instance.defaultValue = defaultValue;
          return this;
        }
            public PipelineCustomField.Builder validators(List<PipelineCustomFieldPropertyValidator> validators) {
              this.instance.validators = validators;
          return this;
        }
            public PipelineCustomField.Builder displayOptions(PipelineCustomFieldDisplayOptions displayOptions) {
              this.instance.displayOptions = displayOptions;
          return this;
        }
            public PipelineCustomField.Builder options(PipelineCustomFieldOptions options) {
              this.instance.options = options;
          return this;
        }
        
    
        /**
        * returns a built PipelineCustomField instance.
        *
        * The builder is not reusable.
        */
        public PipelineCustomField build() {
          try {
            return this.instance;
          } finally {
            // ensure that this.instance is not reused
            this.instance = null;
          }
        }
    
        @Override
        public String toString() {
          return getClass() + "=(" + instance + ")";
        }
      }
    
      /**
      * Create a builder with no initialized field.
      */
      public static PipelineCustomField.Builder builder() {
        return new PipelineCustomField.Builder();
      }
    
      /**
      * Create a builder with a shallow copy of this instance.
      */
      public PipelineCustomField.Builder toBuilder() {
        return new PipelineCustomField.Builder()
          .id(getId())
          .name(getName())
          .type(getType())
          .label(getLabel())
          .description(getDescription())
          .helperText(getHelperText())
          .defaultValue(getDefaultValue())
          .validators(getValidators())
          .displayOptions(getDisplayOptions())
          .options(getOptions());
      }
}

