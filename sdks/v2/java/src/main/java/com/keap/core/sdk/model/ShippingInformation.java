/*
 * Keap REST API
 * Keap REST Core Service
 *
 * The version of the OpenAPI document: 2.70.0.863963
 * Contact: api@keap.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.keap.core.sdk.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.keap.core.sdk.model.Address;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.Arrays;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import jakarta.validation.constraints.*;
import jakarta.validation.Valid;


/**
 * ShippingInformation
 */
@JsonPropertyOrder({
  ShippingInformation.JSON_PROPERTY_ADDRESS,
  ShippingInformation.JSON_PROPERTY_COMPANY,
  ShippingInformation.JSON_PROPERTY_FAMILY_NAME,
  ShippingInformation.JSON_PROPERTY_GIVEN_NAME,
  ShippingInformation.JSON_PROPERTY_ID,
  ShippingInformation.JSON_PROPERTY_INVOICE_TO_COMPANY,
  ShippingInformation.JSON_PROPERTY_PHONE_NUMBER
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.13.0")
public class ShippingInformation implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_ADDRESS = "address";
  @jakarta.annotation.Nullable  private Address address;

  public static final String JSON_PROPERTY_COMPANY = "company";
  @jakarta.annotation.Nullable  private String company;

  public static final String JSON_PROPERTY_FAMILY_NAME = "family_name";
  @jakarta.annotation.Nullable  private String familyName;

  public static final String JSON_PROPERTY_GIVEN_NAME = "given_name";
  @jakarta.annotation.Nullable  private String givenName;

  public static final String JSON_PROPERTY_ID = "id";
  @jakarta.annotation.Nullable  private String id;

  public static final String JSON_PROPERTY_INVOICE_TO_COMPANY = "invoice_to_company";
  @jakarta.annotation.Nullable  private Boolean invoiceToCompany;

  public static final String JSON_PROPERTY_PHONE_NUMBER = "phone_number";
  @jakarta.annotation.Nullable  private String phoneNumber;

  public ShippingInformation() { 
  }

  public ShippingInformation address(@jakarta.annotation.Nullable Address address) {
    this.address = address;
    return this;
  }

  /**
   * Get address
   * @return address
   */
  @jakarta.annotation.Nullable  @Valid
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Address getAddress() {
    return address;
  }


  @JsonProperty(JSON_PROPERTY_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAddress(@jakarta.annotation.Nullable Address address) {
    this.address = address;
  }


  public ShippingInformation company(@jakarta.annotation.Nullable String company) {
    this.company = company;
    return this;
  }

  /**
   * Get company
   * @return company
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_COMPANY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getCompany() {
    return company;
  }


  @JsonProperty(JSON_PROPERTY_COMPANY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCompany(@jakarta.annotation.Nullable String company) {
    this.company = company;
  }


  public ShippingInformation familyName(@jakarta.annotation.Nullable String familyName) {
    this.familyName = familyName;
    return this;
  }

  /**
   * Get familyName
   * @return familyName
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_FAMILY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getFamilyName() {
    return familyName;
  }


  @JsonProperty(JSON_PROPERTY_FAMILY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFamilyName(@jakarta.annotation.Nullable String familyName) {
    this.familyName = familyName;
  }


  public ShippingInformation givenName(@jakarta.annotation.Nullable String givenName) {
    this.givenName = givenName;
    return this;
  }

  /**
   * Get givenName
   * @return givenName
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_GIVEN_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getGivenName() {
    return givenName;
  }


  @JsonProperty(JSON_PROPERTY_GIVEN_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGivenName(@jakarta.annotation.Nullable String givenName) {
    this.givenName = givenName;
  }


  public ShippingInformation id(@jakarta.annotation.Nullable String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(@jakarta.annotation.Nullable String id) {
    this.id = id;
  }


  public ShippingInformation invoiceToCompany(@jakarta.annotation.Nullable Boolean invoiceToCompany) {
    this.invoiceToCompany = invoiceToCompany;
    return this;
  }

  /**
   * Get invoiceToCompany
   * @return invoiceToCompany
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_INVOICE_TO_COMPANY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getInvoiceToCompany() {
    return invoiceToCompany;
  }


  @JsonProperty(JSON_PROPERTY_INVOICE_TO_COMPANY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInvoiceToCompany(@jakarta.annotation.Nullable Boolean invoiceToCompany) {
    this.invoiceToCompany = invoiceToCompany;
  }


  public ShippingInformation phoneNumber(@jakarta.annotation.Nullable String phoneNumber) {
    this.phoneNumber = phoneNumber;
    return this;
  }

  /**
   * Get phoneNumber
   * @return phoneNumber
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_PHONE_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getPhoneNumber() {
    return phoneNumber;
  }


  @JsonProperty(JSON_PROPERTY_PHONE_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPhoneNumber(@jakarta.annotation.Nullable String phoneNumber) {
    this.phoneNumber = phoneNumber;
  }

  /**
   * Return true if this ShippingInformation object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ShippingInformation shippingInformation = (ShippingInformation) o;
    return Objects.equals(this.address, shippingInformation.address) &&
        Objects.equals(this.company, shippingInformation.company) &&
        Objects.equals(this.familyName, shippingInformation.familyName) &&
        Objects.equals(this.givenName, shippingInformation.givenName) &&
        Objects.equals(this.id, shippingInformation.id) &&
        Objects.equals(this.invoiceToCompany, shippingInformation.invoiceToCompany) &&
        Objects.equals(this.phoneNumber, shippingInformation.phoneNumber);
  }

  @Override
  public int hashCode() {
    return Objects.hash(address, company, familyName, givenName, id, invoiceToCompany, phoneNumber);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ShippingInformation {\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    company: ").append(toIndentedString(company)).append("\n");
    sb.append("    familyName: ").append(toIndentedString(familyName)).append("\n");
    sb.append("    givenName: ").append(toIndentedString(givenName)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    invoiceToCompany: ").append(toIndentedString(invoiceToCompany)).append("\n");
    sb.append("    phoneNumber: ").append(toIndentedString(phoneNumber)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

    public static class Builder {
    
        private ShippingInformation instance;
    
        public Builder() {
          this(new ShippingInformation());
        }
    
        protected Builder(ShippingInformation instance) {
          this.instance = instance;
        }
    
        public ShippingInformation.Builder address(Address address) {
              this.instance.address = address;
          return this;
        }
            public ShippingInformation.Builder company(String company) {
              this.instance.company = company;
          return this;
        }
            public ShippingInformation.Builder familyName(String familyName) {
              this.instance.familyName = familyName;
          return this;
        }
            public ShippingInformation.Builder givenName(String givenName) {
              this.instance.givenName = givenName;
          return this;
        }
            public ShippingInformation.Builder id(String id) {
              this.instance.id = id;
          return this;
        }
            public ShippingInformation.Builder invoiceToCompany(Boolean invoiceToCompany) {
              this.instance.invoiceToCompany = invoiceToCompany;
          return this;
        }
            public ShippingInformation.Builder phoneNumber(String phoneNumber) {
              this.instance.phoneNumber = phoneNumber;
          return this;
        }
        
    
        /**
        * returns a built ShippingInformation instance.
        *
        * The builder is not reusable.
        */
        public ShippingInformation build() {
          try {
            return this.instance;
          } finally {
            // ensure that this.instance is not reused
            this.instance = null;
          }
        }
    
        @Override
        public String toString() {
          return getClass() + "=(" + instance + ")";
        }
      }
    
      /**
      * Create a builder with no initialized field.
      */
      public static ShippingInformation.Builder builder() {
        return new ShippingInformation.Builder();
      }
    
      /**
      * Create a builder with a shallow copy of this instance.
      */
      public ShippingInformation.Builder toBuilder() {
        return new ShippingInformation.Builder()
          .address(getAddress())
          .company(getCompany())
          .familyName(getFamilyName())
          .givenName(getGivenName())
          .id(getId())
          .invoiceToCompany(getInvoiceToCompany())
          .phoneNumber(getPhoneNumber());
      }
}

