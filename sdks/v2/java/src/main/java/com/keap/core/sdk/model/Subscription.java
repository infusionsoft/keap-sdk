/*
 * Keap REST API
 * Keap REST Core Service
 *
 * The version of the OpenAPI document: 2.70.0.861953
 * Contact: api@keap.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.keap.core.sdk.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.keap.core.sdk.model.Address;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.Arrays;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import jakarta.validation.constraints.*;
import jakarta.validation.Valid;


/**
 * Subscription
 */
@JsonPropertyOrder({
  Subscription.JSON_PROPERTY_ACTIVE,
  Subscription.JSON_PROPERTY_ALLOW_TAX,
  Subscription.JSON_PROPERTY_AUTO_CHARGE,
  Subscription.JSON_PROPERTY_BILLING_AMOUNT,
  Subscription.JSON_PROPERTY_BILLING_CYCLE,
  Subscription.JSON_PROPERTY_BILLING_FREQUENCY,
  Subscription.JSON_PROPERTY_CONTACT_ID,
  Subscription.JSON_PROPERTY_DAYS_BETWEEN_RETRIES,
  Subscription.JSON_PROPERTY_END_DATE,
  Subscription.JSON_PROPERTY_ID,
  Subscription.JSON_PROPERTY_LAST_BILL_DATE,
  Subscription.JSON_PROPERTY_LEAD_AFFILIATE_ID,
  Subscription.JSON_PROPERTY_MAX_CHARGE_ATTEMPTS,
  Subscription.JSON_PROPERTY_MERCHANT_ACCOUNT_ID,
  Subscription.JSON_PROPERTY_NEXT_BILL_DATE,
  Subscription.JSON_PROPERTY_PAYMENT_METHOD_ID,
  Subscription.JSON_PROPERTY_PRODUCT_ID,
  Subscription.JSON_PROPERTY_QUANTITY,
  Subscription.JSON_PROPERTY_SALE_AFFILIATE_ID,
  Subscription.JSON_PROPERTY_SHIPPING_ADDRESS,
  Subscription.JSON_PROPERTY_START_DATE,
  Subscription.JSON_PROPERTY_SUBSCRIPTION_PLAN_ID
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.13.0")
public class Subscription implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_ACTIVE = "active";
  @jakarta.annotation.Nullable  private Boolean active;

  public static final String JSON_PROPERTY_ALLOW_TAX = "allow_tax";
  @jakarta.annotation.Nullable  private Boolean allowTax;

  public static final String JSON_PROPERTY_AUTO_CHARGE = "auto_charge";
  @jakarta.annotation.Nullable  private Boolean autoCharge;

  public static final String JSON_PROPERTY_BILLING_AMOUNT = "billing_amount";
  @jakarta.annotation.Nullable  private Double billingAmount;

  /**
   * The billing cycle of the subscription.
   */
  public enum BillingCycleEnum {
    YEAR(String.valueOf("YEAR")),
    
    MONTH(String.valueOf("MONTH")),
    
    WEEK(String.valueOf("WEEK")),
    
    DAY(String.valueOf("DAY")),
    
    UNKNOWN_COULD_NOT_DESERIALIZE(String.valueOf("unknown_default_open_api"));

    private String value;

    BillingCycleEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static BillingCycleEnum fromValue(String value) {
      for (BillingCycleEnum b : BillingCycleEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return UNKNOWN_COULD_NOT_DESERIALIZE;
    }
  }
  public static final String JSON_PROPERTY_BILLING_CYCLE = "billing_cycle";
  @jakarta.annotation.Nullable  private BillingCycleEnum billingCycle;

  public static final String JSON_PROPERTY_BILLING_FREQUENCY = "billing_frequency";
  @jakarta.annotation.Nullable  private Integer billingFrequency;

  public static final String JSON_PROPERTY_CONTACT_ID = "contact_id";
  @jakarta.annotation.Nullable  private String contactId;

  public static final String JSON_PROPERTY_DAYS_BETWEEN_RETRIES = "days_between_retries";
  @jakarta.annotation.Nullable  private Integer daysBetweenRetries;

  public static final String JSON_PROPERTY_END_DATE = "end_date";
  @jakarta.annotation.Nullable  private String endDate;

  public static final String JSON_PROPERTY_ID = "id";
  @jakarta.annotation.Nullable  private String id;

  public static final String JSON_PROPERTY_LAST_BILL_DATE = "last_bill_date";
  @jakarta.annotation.Nullable  private String lastBillDate;

  public static final String JSON_PROPERTY_LEAD_AFFILIATE_ID = "lead_affiliate_id";
  @jakarta.annotation.Nullable  private String leadAffiliateId;

  public static final String JSON_PROPERTY_MAX_CHARGE_ATTEMPTS = "max_charge_attempts";
  @jakarta.annotation.Nullable  private Integer maxChargeAttempts;

  public static final String JSON_PROPERTY_MERCHANT_ACCOUNT_ID = "merchant_account_id";
  @jakarta.annotation.Nullable  private String merchantAccountId;

  public static final String JSON_PROPERTY_NEXT_BILL_DATE = "next_bill_date";
  @jakarta.annotation.Nullable  private String nextBillDate;

  public static final String JSON_PROPERTY_PAYMENT_METHOD_ID = "payment_method_id";
  @jakarta.annotation.Nullable  private String paymentMethodId;

  public static final String JSON_PROPERTY_PRODUCT_ID = "product_id";
  @jakarta.annotation.Nullable  private String productId;

  public static final String JSON_PROPERTY_QUANTITY = "quantity";
  @jakarta.annotation.Nullable  private Long quantity;

  public static final String JSON_PROPERTY_SALE_AFFILIATE_ID = "sale_affiliate_id";
  @jakarta.annotation.Nullable  private String saleAffiliateId;

  public static final String JSON_PROPERTY_SHIPPING_ADDRESS = "shipping_address";
  @jakarta.annotation.Nullable  private Address shippingAddress;

  public static final String JSON_PROPERTY_START_DATE = "start_date";
  @jakarta.annotation.Nullable  private String startDate;

  public static final String JSON_PROPERTY_SUBSCRIPTION_PLAN_ID = "subscription_plan_id";
  @jakarta.annotation.Nullable  private String subscriptionPlanId;

  public Subscription() { 
  }

  public Subscription active(@jakarta.annotation.Nullable Boolean active) {
    this.active = active;
    return this;
  }

  /**
   * If the subscription is active or not.
   * @return active
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "If the subscription is active or not.")
  @JsonProperty(JSON_PROPERTY_ACTIVE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getActive() {
    return active;
  }


  @JsonProperty(JSON_PROPERTY_ACTIVE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setActive(@jakarta.annotation.Nullable Boolean active) {
    this.active = active;
  }


  public Subscription allowTax(@jakarta.annotation.Nullable Boolean allowTax) {
    this.allowTax = allowTax;
    return this;
  }

  /**
   * If the subscription allows tax.
   * @return allowTax
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "If the subscription allows tax.")
  @JsonProperty(JSON_PROPERTY_ALLOW_TAX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getAllowTax() {
    return allowTax;
  }


  @JsonProperty(JSON_PROPERTY_ALLOW_TAX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAllowTax(@jakarta.annotation.Nullable Boolean allowTax) {
    this.allowTax = allowTax;
  }


  public Subscription autoCharge(@jakarta.annotation.Nullable Boolean autoCharge) {
    this.autoCharge = autoCharge;
    return this;
  }

  /**
   * If the subscription should auto charge on the next billing date.
   * @return autoCharge
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "If the subscription should auto charge on the next billing date.")
  @JsonProperty(JSON_PROPERTY_AUTO_CHARGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Boolean getAutoCharge() {
    return autoCharge;
  }


  @JsonProperty(JSON_PROPERTY_AUTO_CHARGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAutoCharge(@jakarta.annotation.Nullable Boolean autoCharge) {
    this.autoCharge = autoCharge;
  }


  public Subscription billingAmount(@jakarta.annotation.Nullable Double billingAmount) {
    this.billingAmount = billingAmount;
    return this;
  }

  /**
   * The billing amount.
   * @return billingAmount
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "The billing amount.")
  @JsonProperty(JSON_PROPERTY_BILLING_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Double getBillingAmount() {
    return billingAmount;
  }


  @JsonProperty(JSON_PROPERTY_BILLING_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBillingAmount(@jakarta.annotation.Nullable Double billingAmount) {
    this.billingAmount = billingAmount;
  }


  public Subscription billingCycle(@jakarta.annotation.Nullable BillingCycleEnum billingCycle) {
    this.billingCycle = billingCycle;
    return this;
  }

  /**
   * The billing cycle of the subscription.
   * @return billingCycle
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "The billing cycle of the subscription.")
  @JsonProperty(JSON_PROPERTY_BILLING_CYCLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public BillingCycleEnum getBillingCycle() {
    return billingCycle;
  }


  @JsonProperty(JSON_PROPERTY_BILLING_CYCLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBillingCycle(@jakarta.annotation.Nullable BillingCycleEnum billingCycle) {
    this.billingCycle = billingCycle;
  }


  public Subscription billingFrequency(@jakarta.annotation.Nullable Integer billingFrequency) {
    this.billingFrequency = billingFrequency;
    return this;
  }

  /**
   * The billing frequency in days.
   * @return billingFrequency
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "The billing frequency in days.")
  @JsonProperty(JSON_PROPERTY_BILLING_FREQUENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Integer getBillingFrequency() {
    return billingFrequency;
  }


  @JsonProperty(JSON_PROPERTY_BILLING_FREQUENCY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBillingFrequency(@jakarta.annotation.Nullable Integer billingFrequency) {
    this.billingFrequency = billingFrequency;
  }


  public Subscription contactId(@jakarta.annotation.Nullable String contactId) {
    this.contactId = contactId;
    return this;
  }

  /**
   * Id of the contact to create the subscription for.
   * @return contactId
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "Id of the contact to create the subscription for.")
  @JsonProperty(JSON_PROPERTY_CONTACT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getContactId() {
    return contactId;
  }


  @JsonProperty(JSON_PROPERTY_CONTACT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setContactId(@jakarta.annotation.Nullable String contactId) {
    this.contactId = contactId;
  }


  public Subscription daysBetweenRetries(@jakarta.annotation.Nullable Integer daysBetweenRetries) {
    this.daysBetweenRetries = daysBetweenRetries;
    return this;
  }

  /**
   * Number of days between charge attempts.
   * @return daysBetweenRetries
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "Number of days between charge attempts.")
  @JsonProperty(JSON_PROPERTY_DAYS_BETWEEN_RETRIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Integer getDaysBetweenRetries() {
    return daysBetweenRetries;
  }


  @JsonProperty(JSON_PROPERTY_DAYS_BETWEEN_RETRIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDaysBetweenRetries(@jakarta.annotation.Nullable Integer daysBetweenRetries) {
    this.daysBetweenRetries = daysBetweenRetries;
  }


  public Subscription endDate(@jakarta.annotation.Nullable String endDate) {
    this.endDate = endDate;
    return this;
  }

  /**
   * The last date the subscription will bill.
   * @return endDate
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "The last date the subscription will bill.")
  @JsonProperty(JSON_PROPERTY_END_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getEndDate() {
    return endDate;
  }


  @JsonProperty(JSON_PROPERTY_END_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEndDate(@jakarta.annotation.Nullable String endDate) {
    this.endDate = endDate;
  }


  public Subscription id(@jakarta.annotation.Nullable String id) {
    this.id = id;
    return this;
  }

  /**
   * Id of the subscription.
   * @return id
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "Id of the subscription.")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(@jakarta.annotation.Nullable String id) {
    this.id = id;
  }


  public Subscription lastBillDate(@jakarta.annotation.Nullable String lastBillDate) {
    this.lastBillDate = lastBillDate;
    return this;
  }

  /**
   * The last date the subscription was billed.
   * @return lastBillDate
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "The last date the subscription was billed.")
  @JsonProperty(JSON_PROPERTY_LAST_BILL_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getLastBillDate() {
    return lastBillDate;
  }


  @JsonProperty(JSON_PROPERTY_LAST_BILL_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLastBillDate(@jakarta.annotation.Nullable String lastBillDate) {
    this.lastBillDate = lastBillDate;
  }


  public Subscription leadAffiliateId(@jakarta.annotation.Nullable String leadAffiliateId) {
    this.leadAffiliateId = leadAffiliateId;
    return this;
  }

  /**
   * The affiliate id for the lead of the subscription.
   * @return leadAffiliateId
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "The affiliate id for the lead of the subscription.")
  @JsonProperty(JSON_PROPERTY_LEAD_AFFILIATE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getLeadAffiliateId() {
    return leadAffiliateId;
  }


  @JsonProperty(JSON_PROPERTY_LEAD_AFFILIATE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLeadAffiliateId(@jakarta.annotation.Nullable String leadAffiliateId) {
    this.leadAffiliateId = leadAffiliateId;
  }


  public Subscription maxChargeAttempts(@jakarta.annotation.Nullable Integer maxChargeAttempts) {
    this.maxChargeAttempts = maxChargeAttempts;
    return this;
  }

  /**
   * Maximum number of charge attempts.
   * @return maxChargeAttempts
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "Maximum number of charge attempts.")
  @JsonProperty(JSON_PROPERTY_MAX_CHARGE_ATTEMPTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Integer getMaxChargeAttempts() {
    return maxChargeAttempts;
  }


  @JsonProperty(JSON_PROPERTY_MAX_CHARGE_ATTEMPTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMaxChargeAttempts(@jakarta.annotation.Nullable Integer maxChargeAttempts) {
    this.maxChargeAttempts = maxChargeAttempts;
  }


  public Subscription merchantAccountId(@jakarta.annotation.Nullable String merchantAccountId) {
    this.merchantAccountId = merchantAccountId;
    return this;
  }

  /**
   * The merchant account id associated with the subscription.
   * @return merchantAccountId
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "The merchant account id associated with the subscription.")
  @JsonProperty(JSON_PROPERTY_MERCHANT_ACCOUNT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getMerchantAccountId() {
    return merchantAccountId;
  }


  @JsonProperty(JSON_PROPERTY_MERCHANT_ACCOUNT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMerchantAccountId(@jakarta.annotation.Nullable String merchantAccountId) {
    this.merchantAccountId = merchantAccountId;
  }


  public Subscription nextBillDate(@jakarta.annotation.Nullable String nextBillDate) {
    this.nextBillDate = nextBillDate;
    return this;
  }

  /**
   * The next date the subscription will bill.
   * @return nextBillDate
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "The next date the subscription will bill.")
  @JsonProperty(JSON_PROPERTY_NEXT_BILL_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getNextBillDate() {
    return nextBillDate;
  }


  @JsonProperty(JSON_PROPERTY_NEXT_BILL_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNextBillDate(@jakarta.annotation.Nullable String nextBillDate) {
    this.nextBillDate = nextBillDate;
  }


  public Subscription paymentMethodId(@jakarta.annotation.Nullable String paymentMethodId) {
    this.paymentMethodId = paymentMethodId;
    return this;
  }

  /**
   * Id associated with the payment method.
   * @return paymentMethodId
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "Id associated with the payment method.")
  @JsonProperty(JSON_PROPERTY_PAYMENT_METHOD_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getPaymentMethodId() {
    return paymentMethodId;
  }


  @JsonProperty(JSON_PROPERTY_PAYMENT_METHOD_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPaymentMethodId(@jakarta.annotation.Nullable String paymentMethodId) {
    this.paymentMethodId = paymentMethodId;
  }


  public Subscription productId(@jakarta.annotation.Nullable String productId) {
    this.productId = productId;
    return this;
  }

  /**
   * Id of the product associated with the subscription.
   * @return productId
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "Id of the product associated with the subscription.")
  @JsonProperty(JSON_PROPERTY_PRODUCT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getProductId() {
    return productId;
  }


  @JsonProperty(JSON_PROPERTY_PRODUCT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProductId(@jakarta.annotation.Nullable String productId) {
    this.productId = productId;
  }


  public Subscription quantity(@jakarta.annotation.Nullable Long quantity) {
    this.quantity = quantity;
    return this;
  }

  /**
   * The subscription quantity.
   * @return quantity
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "The subscription quantity.")
  @JsonProperty(JSON_PROPERTY_QUANTITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Long getQuantity() {
    return quantity;
  }


  @JsonProperty(JSON_PROPERTY_QUANTITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setQuantity(@jakarta.annotation.Nullable Long quantity) {
    this.quantity = quantity;
  }


  public Subscription saleAffiliateId(@jakarta.annotation.Nullable String saleAffiliateId) {
    this.saleAffiliateId = saleAffiliateId;
    return this;
  }

  /**
   * The affiliate id for the sale of the subscription.
   * @return saleAffiliateId
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "The affiliate id for the sale of the subscription.")
  @JsonProperty(JSON_PROPERTY_SALE_AFFILIATE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getSaleAffiliateId() {
    return saleAffiliateId;
  }


  @JsonProperty(JSON_PROPERTY_SALE_AFFILIATE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSaleAffiliateId(@jakarta.annotation.Nullable String saleAffiliateId) {
    this.saleAffiliateId = saleAffiliateId;
  }


  public Subscription shippingAddress(@jakarta.annotation.Nullable Address shippingAddress) {
    this.shippingAddress = shippingAddress;
    return this;
  }

  /**
   * Get shippingAddress
   * @return shippingAddress
   */
  @jakarta.annotation.Nullable  @Valid
  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_SHIPPING_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Address getShippingAddress() {
    return shippingAddress;
  }


  @JsonProperty(JSON_PROPERTY_SHIPPING_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setShippingAddress(@jakarta.annotation.Nullable Address shippingAddress) {
    this.shippingAddress = shippingAddress;
  }


  public Subscription startDate(@jakarta.annotation.Nullable String startDate) {
    this.startDate = startDate;
    return this;
  }

  /**
   * The first day the subscription will bill.
   * @return startDate
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "The first day the subscription will bill.")
  @JsonProperty(JSON_PROPERTY_START_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getStartDate() {
    return startDate;
  }


  @JsonProperty(JSON_PROPERTY_START_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStartDate(@jakarta.annotation.Nullable String startDate) {
    this.startDate = startDate;
  }


  public Subscription subscriptionPlanId(@jakarta.annotation.Nullable String subscriptionPlanId) {
    this.subscriptionPlanId = subscriptionPlanId;
    return this;
  }

  /**
   * Id of the product subscription plan.
   * @return subscriptionPlanId
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "Id of the product subscription plan.")
  @JsonProperty(JSON_PROPERTY_SUBSCRIPTION_PLAN_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getSubscriptionPlanId() {
    return subscriptionPlanId;
  }


  @JsonProperty(JSON_PROPERTY_SUBSCRIPTION_PLAN_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSubscriptionPlanId(@jakarta.annotation.Nullable String subscriptionPlanId) {
    this.subscriptionPlanId = subscriptionPlanId;
  }

  /**
   * Return true if this Subscription object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Subscription subscription = (Subscription) o;
    return Objects.equals(this.active, subscription.active) &&
        Objects.equals(this.allowTax, subscription.allowTax) &&
        Objects.equals(this.autoCharge, subscription.autoCharge) &&
        Objects.equals(this.billingAmount, subscription.billingAmount) &&
        Objects.equals(this.billingCycle, subscription.billingCycle) &&
        Objects.equals(this.billingFrequency, subscription.billingFrequency) &&
        Objects.equals(this.contactId, subscription.contactId) &&
        Objects.equals(this.daysBetweenRetries, subscription.daysBetweenRetries) &&
        Objects.equals(this.endDate, subscription.endDate) &&
        Objects.equals(this.id, subscription.id) &&
        Objects.equals(this.lastBillDate, subscription.lastBillDate) &&
        Objects.equals(this.leadAffiliateId, subscription.leadAffiliateId) &&
        Objects.equals(this.maxChargeAttempts, subscription.maxChargeAttempts) &&
        Objects.equals(this.merchantAccountId, subscription.merchantAccountId) &&
        Objects.equals(this.nextBillDate, subscription.nextBillDate) &&
        Objects.equals(this.paymentMethodId, subscription.paymentMethodId) &&
        Objects.equals(this.productId, subscription.productId) &&
        Objects.equals(this.quantity, subscription.quantity) &&
        Objects.equals(this.saleAffiliateId, subscription.saleAffiliateId) &&
        Objects.equals(this.shippingAddress, subscription.shippingAddress) &&
        Objects.equals(this.startDate, subscription.startDate) &&
        Objects.equals(this.subscriptionPlanId, subscription.subscriptionPlanId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(active, allowTax, autoCharge, billingAmount, billingCycle, billingFrequency, contactId, daysBetweenRetries, endDate, id, lastBillDate, leadAffiliateId, maxChargeAttempts, merchantAccountId, nextBillDate, paymentMethodId, productId, quantity, saleAffiliateId, shippingAddress, startDate, subscriptionPlanId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Subscription {\n");
    sb.append("    active: ").append(toIndentedString(active)).append("\n");
    sb.append("    allowTax: ").append(toIndentedString(allowTax)).append("\n");
    sb.append("    autoCharge: ").append(toIndentedString(autoCharge)).append("\n");
    sb.append("    billingAmount: ").append(toIndentedString(billingAmount)).append("\n");
    sb.append("    billingCycle: ").append(toIndentedString(billingCycle)).append("\n");
    sb.append("    billingFrequency: ").append(toIndentedString(billingFrequency)).append("\n");
    sb.append("    contactId: ").append(toIndentedString(contactId)).append("\n");
    sb.append("    daysBetweenRetries: ").append(toIndentedString(daysBetweenRetries)).append("\n");
    sb.append("    endDate: ").append(toIndentedString(endDate)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    lastBillDate: ").append(toIndentedString(lastBillDate)).append("\n");
    sb.append("    leadAffiliateId: ").append(toIndentedString(leadAffiliateId)).append("\n");
    sb.append("    maxChargeAttempts: ").append(toIndentedString(maxChargeAttempts)).append("\n");
    sb.append("    merchantAccountId: ").append(toIndentedString(merchantAccountId)).append("\n");
    sb.append("    nextBillDate: ").append(toIndentedString(nextBillDate)).append("\n");
    sb.append("    paymentMethodId: ").append(toIndentedString(paymentMethodId)).append("\n");
    sb.append("    productId: ").append(toIndentedString(productId)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("    saleAffiliateId: ").append(toIndentedString(saleAffiliateId)).append("\n");
    sb.append("    shippingAddress: ").append(toIndentedString(shippingAddress)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    subscriptionPlanId: ").append(toIndentedString(subscriptionPlanId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

    public static class Builder {
    
        private Subscription instance;
    
        public Builder() {
          this(new Subscription());
        }
    
        protected Builder(Subscription instance) {
          this.instance = instance;
        }
    
        public Subscription.Builder active(Boolean active) {
              this.instance.active = active;
          return this;
        }
            public Subscription.Builder allowTax(Boolean allowTax) {
              this.instance.allowTax = allowTax;
          return this;
        }
            public Subscription.Builder autoCharge(Boolean autoCharge) {
              this.instance.autoCharge = autoCharge;
          return this;
        }
            public Subscription.Builder billingAmount(Double billingAmount) {
              this.instance.billingAmount = billingAmount;
          return this;
        }
            public Subscription.Builder billingCycle(BillingCycleEnum billingCycle) {
              this.instance.billingCycle = billingCycle;
          return this;
        }
            public Subscription.Builder billingFrequency(Integer billingFrequency) {
              this.instance.billingFrequency = billingFrequency;
          return this;
        }
            public Subscription.Builder contactId(String contactId) {
              this.instance.contactId = contactId;
          return this;
        }
            public Subscription.Builder daysBetweenRetries(Integer daysBetweenRetries) {
              this.instance.daysBetweenRetries = daysBetweenRetries;
          return this;
        }
            public Subscription.Builder endDate(String endDate) {
              this.instance.endDate = endDate;
          return this;
        }
            public Subscription.Builder id(String id) {
              this.instance.id = id;
          return this;
        }
            public Subscription.Builder lastBillDate(String lastBillDate) {
              this.instance.lastBillDate = lastBillDate;
          return this;
        }
            public Subscription.Builder leadAffiliateId(String leadAffiliateId) {
              this.instance.leadAffiliateId = leadAffiliateId;
          return this;
        }
            public Subscription.Builder maxChargeAttempts(Integer maxChargeAttempts) {
              this.instance.maxChargeAttempts = maxChargeAttempts;
          return this;
        }
            public Subscription.Builder merchantAccountId(String merchantAccountId) {
              this.instance.merchantAccountId = merchantAccountId;
          return this;
        }
            public Subscription.Builder nextBillDate(String nextBillDate) {
              this.instance.nextBillDate = nextBillDate;
          return this;
        }
            public Subscription.Builder paymentMethodId(String paymentMethodId) {
              this.instance.paymentMethodId = paymentMethodId;
          return this;
        }
            public Subscription.Builder productId(String productId) {
              this.instance.productId = productId;
          return this;
        }
            public Subscription.Builder quantity(Long quantity) {
              this.instance.quantity = quantity;
          return this;
        }
            public Subscription.Builder saleAffiliateId(String saleAffiliateId) {
              this.instance.saleAffiliateId = saleAffiliateId;
          return this;
        }
            public Subscription.Builder shippingAddress(Address shippingAddress) {
              this.instance.shippingAddress = shippingAddress;
          return this;
        }
            public Subscription.Builder startDate(String startDate) {
              this.instance.startDate = startDate;
          return this;
        }
            public Subscription.Builder subscriptionPlanId(String subscriptionPlanId) {
              this.instance.subscriptionPlanId = subscriptionPlanId;
          return this;
        }
        
    
        /**
        * returns a built Subscription instance.
        *
        * The builder is not reusable.
        */
        public Subscription build() {
          try {
            return this.instance;
          } finally {
            // ensure that this.instance is not reused
            this.instance = null;
          }
        }
    
        @Override
        public String toString() {
          return getClass() + "=(" + instance + ")";
        }
      }
    
      /**
      * Create a builder with no initialized field.
      */
      public static Subscription.Builder builder() {
        return new Subscription.Builder();
      }
    
      /**
      * Create a builder with a shallow copy of this instance.
      */
      public Subscription.Builder toBuilder() {
        return new Subscription.Builder()
          .active(getActive())
          .allowTax(getAllowTax())
          .autoCharge(getAutoCharge())
          .billingAmount(getBillingAmount())
          .billingCycle(getBillingCycle())
          .billingFrequency(getBillingFrequency())
          .contactId(getContactId())
          .daysBetweenRetries(getDaysBetweenRetries())
          .endDate(getEndDate())
          .id(getId())
          .lastBillDate(getLastBillDate())
          .leadAffiliateId(getLeadAffiliateId())
          .maxChargeAttempts(getMaxChargeAttempts())
          .merchantAccountId(getMerchantAccountId())
          .nextBillDate(getNextBillDate())
          .paymentMethodId(getPaymentMethodId())
          .productId(getProductId())
          .quantity(getQuantity())
          .saleAffiliateId(getSaleAffiliateId())
          .shippingAddress(getShippingAddress())
          .startDate(getStartDate())
          .subscriptionPlanId(getSubscriptionPlanId());
      }
}

