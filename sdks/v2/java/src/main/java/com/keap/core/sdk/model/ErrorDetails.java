/*
 * Keap REST API
 * Keap REST Core Service
 *
 * The version of the OpenAPI document: 2.70.0.867851
 * Contact: api@keap.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.keap.core.sdk.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.Arrays;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import jakarta.validation.constraints.*;
import jakarta.validation.Valid;


/**
 * ErrorDetails
 */
@JsonPropertyOrder({
  ErrorDetails.JSON_PROPERTY_DOMAIN,
  ErrorDetails.JSON_PROPERTY_RESOURCE
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.13.0")
public class ErrorDetails implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_DOMAIN = "domain";
  @jakarta.annotation.Nullable  private String domain;

  public static final String JSON_PROPERTY_RESOURCE = "resource";
  @jakarta.annotation.Nullable  private String resource;

  public ErrorDetails() { 
  }

  public ErrorDetails domain(@jakarta.annotation.Nullable String domain) {
    this.domain = domain;
    return this;
  }

  /**
   * Get domain
   * @return domain
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_DOMAIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getDomain() {
    return domain;
  }


  @JsonProperty(JSON_PROPERTY_DOMAIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDomain(@jakarta.annotation.Nullable String domain) {
    this.domain = domain;
  }


  public ErrorDetails resource(@jakarta.annotation.Nullable String resource) {
    this.resource = resource;
    return this;
  }

  /**
   * Get resource
   * @return resource
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_RESOURCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getResource() {
    return resource;
  }


  @JsonProperty(JSON_PROPERTY_RESOURCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setResource(@jakarta.annotation.Nullable String resource) {
    this.resource = resource;
  }

  /**
   * Return true if this ErrorDetails object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ErrorDetails errorDetails = (ErrorDetails) o;
    return Objects.equals(this.domain, errorDetails.domain) &&
        Objects.equals(this.resource, errorDetails.resource);
  }

  @Override
  public int hashCode() {
    return Objects.hash(domain, resource);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ErrorDetails {\n");
    sb.append("    domain: ").append(toIndentedString(domain)).append("\n");
    sb.append("    resource: ").append(toIndentedString(resource)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

    public static class Builder {
    
        private ErrorDetails instance;
    
        public Builder() {
          this(new ErrorDetails());
        }
    
        protected Builder(ErrorDetails instance) {
          this.instance = instance;
        }
    
        public ErrorDetails.Builder domain(String domain) {
              this.instance.domain = domain;
          return this;
        }
            public ErrorDetails.Builder resource(String resource) {
              this.instance.resource = resource;
          return this;
        }
        
    
        /**
        * returns a built ErrorDetails instance.
        *
        * The builder is not reusable.
        */
        public ErrorDetails build() {
          try {
            return this.instance;
          } finally {
            // ensure that this.instance is not reused
            this.instance = null;
          }
        }
    
        @Override
        public String toString() {
          return getClass() + "=(" + instance + ")";
        }
      }
    
      /**
      * Create a builder with no initialized field.
      */
      public static ErrorDetails.Builder builder() {
        return new ErrorDetails.Builder();
      }
    
      /**
      * Create a builder with a shallow copy of this instance.
      */
      public ErrorDetails.Builder toBuilder() {
        return new ErrorDetails.Builder()
          .domain(getDomain())
          .resource(getResource());
      }
}

