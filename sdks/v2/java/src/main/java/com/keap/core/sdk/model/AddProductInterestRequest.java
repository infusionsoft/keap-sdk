/*
 * Keap REST API
 * Keap REST Core Service
 *
 * The version of the OpenAPI document: 2.70.0.798982-hf-202504081948
 * Contact: api@keap.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.keap.core.sdk.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.Arrays;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import jakarta.validation.constraints.*;
import jakarta.validation.Valid;


/**
 * AddProductInterestRequest
 */
@JsonPropertyOrder({
  AddProductInterestRequest.JSON_PROPERTY_DISCOUNT_PERCENT,
  AddProductInterestRequest.JSON_PROPERTY_ENTITY_ID,
  AddProductInterestRequest.JSON_PROPERTY_PRICE,
  AddProductInterestRequest.JSON_PROPERTY_QUANTITY,
  AddProductInterestRequest.JSON_PROPERTY_TYPE
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.10.0")
public class AddProductInterestRequest implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_DISCOUNT_PERCENT = "discount_percent";
  @jakarta.annotation.Nullable  private Integer discountPercent;

  public static final String JSON_PROPERTY_ENTITY_ID = "entity_id";
  @jakarta.annotation.Nonnull  private String entityId;

  public static final String JSON_PROPERTY_PRICE = "price";
  @jakarta.annotation.Nonnull  private Double price;

  public static final String JSON_PROPERTY_QUANTITY = "quantity";
  @jakarta.annotation.Nullable  private Integer quantity;

  /**
   * Gets or Sets type
   */
  public enum TypeEnum {
    PRODUCT(String.valueOf("PRODUCT")),
    
    SUBSCRIPTION_PLAN(String.valueOf("SUBSCRIPTION_PLAN")),
    
    UNKNOWN_COULD_NOT_DESERIALIZE(String.valueOf("unknown_default_open_api"));

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return UNKNOWN_COULD_NOT_DESERIALIZE;
    }
  }
  public static final String JSON_PROPERTY_TYPE = "type";
  @jakarta.annotation.Nonnull  private TypeEnum type;

  public AddProductInterestRequest() { 
  }

  public AddProductInterestRequest discountPercent(@jakarta.annotation.Nullable Integer discountPercent) {
    this.discountPercent = discountPercent;
    return this;
  }

  /**
   * Defaults to &#x60;0&#x60;.
   * @return discountPercent
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "Defaults to `0`.")
  @JsonProperty(JSON_PROPERTY_DISCOUNT_PERCENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Integer getDiscountPercent() {
    return discountPercent;
  }


  @JsonProperty(JSON_PROPERTY_DISCOUNT_PERCENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDiscountPercent(@jakarta.annotation.Nullable Integer discountPercent) {
    this.discountPercent = discountPercent;
  }


  public AddProductInterestRequest entityId(@jakarta.annotation.Nonnull String entityId) {
    this.entityId = entityId;
    return this;
  }

  /**
   * The &#x60;product_id&#x60; (when the &#x60;type&#x60; is set to &#x60;PRODUCT&#x60;)  or the &#x60;subscription_plan_id&#x60; (when the &#x60;type&#x60; is set to &#x60;SUBSCRIPTION_PLAN&#x60;). 
   * @return entityId
   */
  @jakarta.annotation.Nonnull  @NotNull
  @Schema(requiredMode = Schema.RequiredMode.REQUIRED, description = "The `product_id` (when the `type` is set to `PRODUCT`)  or the `subscription_plan_id` (when the `type` is set to `SUBSCRIPTION_PLAN`). ")
  @JsonProperty(JSON_PROPERTY_ENTITY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getEntityId() {
    return entityId;
  }


  @JsonProperty(JSON_PROPERTY_ENTITY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEntityId(@jakarta.annotation.Nonnull String entityId) {
    this.entityId = entityId;
  }


  public AddProductInterestRequest price(@jakarta.annotation.Nonnull Double price) {
    this.price = price;
    return this;
  }

  /**
   * Get price
   * @return price
   */
  @jakarta.annotation.Nonnull  @NotNull
  @Schema(requiredMode = Schema.RequiredMode.REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_PRICE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public Double getPrice() {
    return price;
  }


  @JsonProperty(JSON_PROPERTY_PRICE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPrice(@jakarta.annotation.Nonnull Double price) {
    this.price = price;
  }


  public AddProductInterestRequest quantity(@jakarta.annotation.Nullable Integer quantity) {
    this.quantity = quantity;
    return this;
  }

  /**
   * Defaults to &#x60;1&#x60;.
   * @return quantity
   */
  @jakarta.annotation.Nullable  @Schema(requiredMode = Schema.RequiredMode.NOT_REQUIRED, description = "Defaults to `1`.")
  @JsonProperty(JSON_PROPERTY_QUANTITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Integer getQuantity() {
    return quantity;
  }


  @JsonProperty(JSON_PROPERTY_QUANTITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setQuantity(@jakarta.annotation.Nullable Integer quantity) {
    this.quantity = quantity;
  }


  public AddProductInterestRequest type(@jakarta.annotation.Nonnull TypeEnum type) {
    this.type = type;
    return this;
  }

  /**
   * Get type
   * @return type
   */
  @jakarta.annotation.Nonnull  @NotNull
  @Schema(requiredMode = Schema.RequiredMode.REQUIRED, description = "")
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public TypeEnum getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setType(@jakarta.annotation.Nonnull TypeEnum type) {
    this.type = type;
  }

  /**
   * Return true if this AddProductInterestRequest object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AddProductInterestRequest addProductInterestRequest = (AddProductInterestRequest) o;
    return Objects.equals(this.discountPercent, addProductInterestRequest.discountPercent) &&
        Objects.equals(this.entityId, addProductInterestRequest.entityId) &&
        Objects.equals(this.price, addProductInterestRequest.price) &&
        Objects.equals(this.quantity, addProductInterestRequest.quantity) &&
        Objects.equals(this.type, addProductInterestRequest.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(discountPercent, entityId, price, quantity, type);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AddProductInterestRequest {\n");
    sb.append("    discountPercent: ").append(toIndentedString(discountPercent)).append("\n");
    sb.append("    entityId: ").append(toIndentedString(entityId)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

    public static class Builder {
    
        private AddProductInterestRequest instance;
    
        public Builder() {
          this(new AddProductInterestRequest());
        }
    
        protected Builder(AddProductInterestRequest instance) {
          this.instance = instance;
        }
    
        public AddProductInterestRequest.Builder discountPercent(Integer discountPercent) {
              this.instance.discountPercent = discountPercent;
          return this;
        }
            public AddProductInterestRequest.Builder entityId(String entityId) {
              this.instance.entityId = entityId;
          return this;
        }
            public AddProductInterestRequest.Builder price(Double price) {
              this.instance.price = price;
          return this;
        }
            public AddProductInterestRequest.Builder quantity(Integer quantity) {
              this.instance.quantity = quantity;
          return this;
        }
            public AddProductInterestRequest.Builder type(TypeEnum type) {
              this.instance.type = type;
          return this;
        }
        
    
        /**
        * returns a built AddProductInterestRequest instance.
        *
        * The builder is not reusable.
        */
        public AddProductInterestRequest build() {
          try {
            return this.instance;
          } finally {
            // ensure that this.instance is not reused
            this.instance = null;
          }
        }
    
        @Override
        public String toString() {
          return getClass() + "=(" + instance + ")";
        }
      }
    
      /**
      * Create a builder with no initialized field.
      */
      public static AddProductInterestRequest.Builder builder() {
        return new AddProductInterestRequest.Builder();
      }
    
      /**
      * Create a builder with a shallow copy of this instance.
      */
      public AddProductInterestRequest.Builder toBuilder() {
        return new AddProductInterestRequest.Builder()
          .discountPercent(getDiscountPercent())
          .entityId(getEntityId())
          .price(getPrice())
          .quantity(getQuantity())
          .type(getType());
      }
}

