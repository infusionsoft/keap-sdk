openapi: 3.0.0
info:
  description: Keap REST Core Service
  version: 2.70.0.844065-hf-202508141354
  title: Keap REST API
  termsOfService: https://keap.com/legal
  contact:
    name: Keap
    url: https://developer.keap.com/get-support/
    email: api@keap.com
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0
tags:
- name: Affiliate
  description: Rest Affiliate Controller
- name: Automation
  description: Rest Automation Controller
- name: AutomationCategory
  description: Rest Automation Category Controller
- name: Business Profile
  description: Rest Business Profile Controller
- name: Campaign
  description: Rest Campaign Controller
- name: Category Discounts
  description: Rest Category Discount Controller
- name: Company
  description: Rest Company Controller
- name: Contact
  description: Rest Contact Controller
- name: Email
  description: Rest Email Controller
- name: Email Address
  description: Rest Api Email Address Controller
- name: Files
  description: Rest File Controller
- name: Free Trial Discounts
  description: Rest Free Trial Discount Controller
- name: FunnelIntegration
  description: Rest Funnel Integration Endpoint
- name: Landing Pages
  description: Rest Landing Page Controller
- name: Lead Source Categories
  description: Rest Lead Source Category Controller
- name: Lead Source Expenses
  description: Rest Lead Source Expense Controller
- name: Lead Source Recurring Expenses
  description: Rest Lead Source Recurring Expense Controller
- name: Lead Sources
  description: Rest Lead Source Controller
- name: LeadScore
  description: Rest Contact Lead Score Controller
- name: Locale
  description: Rest Locale Controller
- name: Merchants
  description: Rest Merchant Controller
- name: Note
  description: Rest Note Controller
- name: Opportunity
  description: Rest Opportunity Controller
- name: Order Total Discounts
  description: Rest Order Total Discount Controller
- name: Orders
  description: Rest Order Controller
- name: Payment Method Configs
  description: Rest Payment Method Config Controller
- name: Payment Methods
  description: Rest Payment Method Controller
- name: Product Categories
  description: Rest Product Category Controller
- name: Product Discounts
  description: Rest Product Discount Controller
- name: Product Interest Bundles
  description: Rest Product Interest Bundle Controller
- name: Products
  description: Rest Product Controller
- name: Referral
  description: Rest Referral Controller
- name: Reporting
  description: Rest Reporting Controller
- name: Sales
  description: Rest Sales Controller
- name: Settings
  description: Rest Setting Controller
- name: Shipping
  description: Rest Shipping Methods Controller
- name: Shipping Discounts
  description: Rest Shipping Discount Controller
- name: Subscription Plans
  description: Rest Subscription Plan Controller
- name: Subscriptions
  description: Rest Subscriptions Controller
- name: Tags
  description: Rest Tag Controller
- name: Task
  description: Rest Task Controller
- name: Users
  description: Rest User Controller
paths:
  /v2/affiliates:
    post:
      tags:
      - Affiliate
      summary: Create an Affiliate
      description: Creates a single Affiliate
      operationId: addAffiliate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAffiliateRequest'
        description: Affiliate request to insert
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAffiliate'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/affiliates/commissionPrograms:
    get:
      tags:
      - Affiliate
      summary: List Affiliate Commission Programs
      description: Retrieves a list of Affiliate Commission Programs
      operationId: listAffiliateCommissionPrograms
      parameters:
      - name: filter
        in: query
        description: |
          Filter to apply, allowed fields are:
          - (String) `name`
          - (String) `affiliate_id`
        required: false
        schema:
          type: string
      - name: order_by
        in: query
        description: |-
          Attribute and direction to order items.
          One of the following fields:
          - `name`
          - `date_created`

          One of the following directions:
          - `asc`
          - `desc`
        required: false
        schema:
          type: string
      - name: page_size
        in: query
        description: Total number of items to return per page
        required: false
        example: 0
        schema:
          type: integer
          format: int32
          minimum: 1
          maximum: 1000
          exclusiveMinimum: false
          exclusiveMaximum: false
      - name: page_token
        in: query
        description: Page token
        required: false
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAffiliateCommissionProgramsResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    post:
      tags:
      - Affiliate
      summary: Create an Affiliate Commission Program
      description: Creates an Affiliate Commission Program
      operationId: addCommissionProgram
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCommissionProgramRequest'
        description: Commission Program to insert
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AffiliateCommissionProgramResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/affiliates/commissionPrograms/defaultCommissionPrograms/{commission_program_id}:
    post:
      tags:
      - Affiliate
      summary: Create a Default Commission Program
      description: Creates a Default Commission Program
      operationId: createDefaultCommissionProgram
      parameters:
      - name: commission_program_id
        in: path
        description: commission_program_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDefaultCommissionProgramRequest'
        description: Values of the Default Commission Program
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetDefaultCommissionProgramResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    patch:
      tags:
      - Affiliate
      summary: Update a Default Commission Program
      description: Updates a Default Commission Program
      operationId: updateDefaultCommissionProgram
      parameters:
      - name: commission_program_id
        in: path
        description: commission_program_id
        required: true
        schema:
          type: string
      - name: update_mask
        in: query
        description: update_mask
        required: false
        explode: true
        schema:
          type: array
          items:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDefaultCommissionProgramRequest'
        description: Values of the default Commission Program
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetDefaultCommissionProgramResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/affiliates/commissionPrograms/productCommissionPrograms/{commission_program_id}:
    post:
      tags:
      - Affiliate
      summary: Assign a Product Commission Program
      description: Assigns a Product Commission Program to a Product
      operationId: assignProductCommissionProgram
      parameters:
      - name: commission_program_id
        in: path
        description: commission_program_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProductCommissionProgramRequest'
        description: Product Commission Program
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCommissionProgram'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    patch:
      tags:
      - Affiliate
      summary: Update a Product Commission Program
      description: Updates a Product Commission Program
      operationId: updateProductCommissionProgram
      parameters:
      - name: commission_program_id
        in: path
        description: commission_program_id
        required: true
        schema:
          type: string
      - name: update_mask
        in: query
        description: update_mask
        required: false
        explode: true
        schema:
          type: array
          items:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProductCommissionProgramRequest'
        description: Values of the product Commission Program
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCommissionProgram'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/affiliates/commissionPrograms/subscriptionCommissionPrograms/{commission_program_id}:
    post:
      tags:
      - Affiliate
      summary: Assign a Subscription Commission Program
      description: Assigns a Subscription Commission Program to a Subscription
      operationId: assignSubscriptionCommissionProgram
      parameters:
      - name: commission_program_id
        in: path
        description: commission_program_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSubscriptionCommissionProgramRequest'
        description: Subscription Commission Program
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionCommissionProgram'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    patch:
      tags:
      - Affiliate
      summary: Update a Subscription Commission Program
      description: Updates a Subscription Commission Program
      operationId: updateSubscriptionCommissionProgram
      parameters:
      - name: commission_program_id
        in: path
        description: commission_program_id
        required: true
        schema:
          type: string
      - name: update_mask
        in: query
        description: update_mask
        required: false
        explode: true
        schema:
          type: array
          items:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSubscriptionCommissionProgramRequest'
        description: Values of the subscription Commission Program
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionCommissionProgram'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/affiliates/commissionPrograms/{commission_id}:removeProductCommission:
    post:
      tags:
      - Affiliate
      summary: Remove a Product from a Commission Program
      description: Removes a Product from a Commission Program
      operationId: removeProductCommissionFromCommissions
      parameters:
      - name: commission_id
        in: path
        description: commission_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteProgramCommissionRequest'
        description: deleteProgramCommissionRequest
        required: true
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/affiliates/commissionPrograms/{commission_id}:removeSubscriptionCommission:
    post:
      tags:
      - Affiliate
      summary: Remove a Subscription from a Commission Program
      description: Removes a Subscription from a Commission Program
      operationId: removeSubscriptionPlanCommissionFromCommissions
      parameters:
      - name: commission_id
        in: path
        description: commission_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteSubscriptionPlanCommissionRequest'
        description: deleteSubscriptionPlanCommissionRequest
        required: true
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/affiliates/commissionPrograms/{commission_program_id}:
    get:
      tags:
      - Affiliate
      summary: Retrieve a Commission Program
      description: Retrieves a single Commission Program
      operationId: getCommissionProgram
      parameters:
      - name: commission_program_id
        in: path
        description: commission_program_id
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AffiliateProgramV2'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    delete:
      tags:
      - Affiliate
      summary: Delete a Commission Program
      description: Deletes a Commission Program
      operationId: deleteAffiliateCommissionProgram
      parameters:
      - name: commission_program_id
        in: path
        description: commission_program_id
        required: true
        schema:
          type: string
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    patch:
      tags:
      - Affiliate
      summary: Update an Affiliate Commission Program
      description: Updates the properties of an Affiliate Commission Program
      operationId: updateCommissionProgram
      parameters:
      - name: commission_program_id
        in: path
        description: commission_program_id
        required: true
        schema:
          type: string
      - name: update_mask
        in: query
        description: An optional list of properties to be updated. If set, only the
          provided properties will be updated and others will be skipped.
        required: false
        allowEmptyValue: false
        explode: true
        schema:
          type: array
          items:
            type: string
          enum:
          - name
          - notes
          - priority
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCommissionProgramRequest'
        description: updateCommissionProgramRequest
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AffiliateCommissionProgramResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/affiliates/redirects:
    get:
      tags:
      - Affiliate
      summary: List Affiliate Links
      description: Retrieves a list of Affiliate Links
      operationId: listAffiliateLinks
      parameters:
      - name: filter
        in: query
        description: |
          Filter to apply, allowed fields are:
          - (String) `name`
          - (String) `affiliate_id`
        required: false
        schema:
          type: string
      - name: order_by
        in: query
        description: |-
          Attribute and direction to order items.
          One of the following fields:
          - `name`
          - `date_created`

          One of the following directions:
          - `asc`
          - `desc`
        required: false
        schema:
          type: string
      - name: page_size
        in: query
        description: Total number of items to return per page
        required: false
        example: 0
        schema:
          type: integer
          format: int32
          minimum: 1
          maximum: 1000
          exclusiveMinimum: false
          exclusiveMaximum: false
      - name: page_token
        in: query
        description: Page token
        required: false
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAffiliateLinksResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    post:
      tags:
      - Affiliate
      summary: Create an Affiliate Link
      description: Creates a single Affiliate Link
      operationId: createRedirectLink
      requestBody:
        $ref: '#/components/requestBodies/CreateOrUpdateAffiliateLinkRequest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AffiliateLink'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/affiliates/redirects/{redirect_id}:
    get:
      tags:
      - Affiliate
      summary: Retrieve an Affiliate Link
      description: Retrieves information about a single Affiliate Link
      operationId: getRedirectLink
      parameters:
      - name: redirect_id
        in: path
        description: redirect_id
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AffiliateLink'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    delete:
      tags:
      - Affiliate
      summary: Delete an Affiliate Link
      description: Deletes an Affiliate Link
      operationId: deleteRedirectLink
      parameters:
      - name: redirect_id
        in: path
        description: redirect_id
        required: true
        schema:
          type: string
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    patch:
      tags:
      - Affiliate
      summary: Update an Affiliate Link
      description: Updates an Affiliate Link
      operationId: updateRedirectLink
      parameters:
      - name: redirect_id
        in: path
        description: redirect_id
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/CreateOrUpdateAffiliateLinkRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AffiliateLink'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/affiliates/summaries:
    get:
      tags:
      - Affiliate
      summary: List Affiliate Summaries
      description: Retrieves a list of Affiliate Summaries
      operationId: listSummaries
      parameters:
      - name: filter
        in: query
        description: |
          Filter to apply, allowed fields are:
          - (List[String]) `affiliate_ids`
          - (String) `since_time`
          - (String) `until_time`
          You will need to apply the `==` operator to check the equality of one of the filters with your searched
           word, in the encoded form `%3D%3D`. For the filters listed above, here are some examples:
           - `filter=since_time%3D%3D2024-09-17T-15:50+00`
           - `filter=until_time%3D%3D2024-09-17T-15:50+00`
           - `filter=affiliate_ids%3D%3D123,456,789`
        required: false
        schema:
          type: string
      - name: order_by
        in: query
        description: |-
          Attribute and direction to order items.
          One of the following fields:
          - `affiliate_id`
          - `amount_earned`
          - `balance`
          - `clawbacks`

          One of the following directions:
          - `asc`
          - `desc`
        required: false
        schema:
          type: string
      - name: page_size
        in: query
        description: Total number of items to return per page
        required: false
        example: 0
        schema:
          type: integer
          format: int32
          minimum: 1
          maximum: 1000
          exclusiveMinimum: false
          exclusiveMaximum: false
      - name: page_token
        in: query
        description: Page token
        required: false
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAffiliateSummariesResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/affiliates/{affiliate_id}/commissionTotal:
    get:
      tags:
      - Affiliate
      summary: Retrieve Affiliate Commission Earned and View LedgerURl for portal
      description: Get the Affiliate Commission Earned and View LedgerURl for portal
      operationId: getAffiliateCommissionTotal
      parameters:
      - name: affiliate_id
        in: path
        description: affiliate_id
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AffiliateCommissionEarned'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/affiliates/{affiliate_id}:commissions:
    get:
      tags:
      - Affiliate
      summary: Retrieve Affiliate Commission and Clawbacks
      description: Retrieve a list of Affiliate's Commissions and Clawbacks
      operationId: getAffiliateCommissions
      parameters:
      - name: affiliate_id
        in: path
        description: affiliate_id
        required: true
        schema:
          type: string
      - name: filter
        in: query
        description: |
          Filter to apply, allowed fields are:
          - (String) `affiliateId`
          - (String) `since_time`
          - (String) `until_time`
          You will need to apply the `==` operator to check the equality of one of the filters with your searched
           word, in the encoded form `%3D%3D`. For the filters listed above, here are some examples:
           - `filter=since_time%3D%3D2024-09-17T-15:50+00`
           - `filter=until_time%3D%3D2024-09-17T-15:50+00`
           - `filter=affiliateId%3D%3D123`
        required: false
        schema:
          type: string
      - name: order_by
        in: query
        description: |-
          Attribute and direction to order items.
          One of the following fields:
          - `invoice_id`
          - `affowed_id`
          - `date_earned`

          One of the following directions:
          - `asc`
          - `desc`
        required: false
        schema:
          type: string
      - name: page_size
        in: query
        description: Total number of items to return per page
        required: false
        example: 0
        schema:
          type: integer
          format: int32
          minimum: 1
          maximum: 1000
          exclusiveMinimum: false
          exclusiveMaximum: false
      - name: page_token
        in: query
        description: Page token
        required: false
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAffiliateCommissionsResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/affiliates/{id}:
    get:
      tags:
      - Affiliate
      summary: Retrieve an Affiliate
      description: Retrieves a single Affiliate
      operationId: getAffiliate
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAffiliate'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    delete:
      tags:
      - Affiliate
      summary: Delete Affiliate
      description: Deletes the specified Affiliate
      operationId: deleteAffiliate
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: string
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    patch:
      tags:
      - Affiliate
      summary: Update an Affiliate
      description: Updates a single Affiliate
      operationId: updateAffiliate
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAffiliateRequest'
        description: Request to update an affiliate
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAffiliate'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/affiliates/{id}:assignToProgram:
    post:
      tags:
      - Affiliate
      summary: Assign Affiliate to Commission program
      description: Assigns an Affiliate to Commission Program
      operationId: addAffiliateToProgram
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AffiliateAddToProgramRequest'
        description: affiliateAddToProgramRequest
        required: true
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/affiliates/{id}:removeFromProgram:
    post:
      tags:
      - Affiliate
      summary: Remove an Affiliate from a Commission Program
      description: Removes an Affiliate from a Commission Program
      operationId: removeAffiliateFromProgram
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AffiliateRemoveFromProgramRequest'
        description: removeFromProgramRequest
        required: true
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/automationCategory:
    get:
      tags:
      - AutomationCategory
      summary: List automation categories
      description: Retrieves a list of automation categories
      operationId: listCategories
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAutomationCategoryResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    post:
      tags:
      - AutomationCategory
      summary: Create automation category
      description: Creates a single automation category
      operationId: createCategory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAutomationCategoryRequest'
        description: createAutomationCategoryRequest
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutomationCategory'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    delete:
      tags:
      - AutomationCategory
      summary: Delete automation category
      description: Deletes one or more automation categories based on the request
        parameters
      operationId: deleteCategories
      parameters:
      - name: ids
        in: query
        description: ids
        required: true
        explode: true
        schema:
          type: array
          items:
            type: integer
            format: int64
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/automationCategory/{id}:
    patch:
      tags:
      - AutomationCategory
      summary: Update automation category
      description: Updates part of a single automation category
      operationId: patchCategory
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchAutomationCategoryRequest'
        description: patchAutomationCategoryRequest
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutomationCategory'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/automations:
    get:
      tags:
      - Automation
      summary: List Automations
      description: Retrieves a list of automations
      operationId: listAutomations
      parameters:
      - name: filter
        in: query
        description: |
          Filter to apply, allowed fields are:
          - (String) `name`

          You will need to apply the `==` operator to check the equality of the filter with your searched
          text, in the encoded form `%3D%3D`. The search will look for the text anywhere in the automation name.

          - `filter=name%3D%3DSpring Automation`
          - `filter=name%3D%3DTag New Contacts`
        required: false
        schema:
          type: string
      - name: order_by
        in: query
        description: |-
          Attribute and direction to order items.
          One of the following fields:
          - `name`
          - `category`
          - `activeContacts`
          - `publishedDate`

          One of the following directions:
          - `asc`
          - `desc`
        required: false
        schema:
          type: string
      - name: page_size
        in: query
        description: Total number of items to return per page
        required: false
        example: 0
        schema:
          type: integer
          format: int32
          minimum: 1
          maximum: 25
          exclusiveMinimum: false
          exclusiveMaximum: false
      - name: page_token
        in: query
        description: Page token
        required: false
        schema:
          type: string
      - name: stats
        in: query
        required: false
        schema:
          type: boolean
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAutomationResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    delete:
      tags:
      - Automation
      summary: Delete an Automation
      description: Deletes a single automation
      operationId: deleteAutomation
      parameters:
      - name: automation_ids
        in: query
        description: automation_ids
        required: true
        explode: true
        schema:
          type: array
          items:
            type: integer
            format: int64
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/automations/categories/batchAssign:
    post:
      tags:
      - Automation
      summary: Bulk update for Automations Categories
      description: Bulk updates the categories of one or more automations
      operationId: bulkAssignmentAutomationsCategories
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssignAutomationCategoryRequest'
        description: assignAutomationCategoryRequest
        required: true
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/automations/ids:
    get:
      tags:
      - Automation
      summary: List Automations Ids
      description: Retrieves a list of automations IDs
      operationId: listAllAutomationIds
      parameters:
      - name: filter
        in: query
        description: |
          Filter to apply, allowed fields are:
          - (String) `name`

          You will need to apply the `==` operator to check the equality of the filter with your searched
          text, in the encoded form `%3D%3D`. The search will look for the text anywhere in the automation name.

          - `filter=name%3D%3DSpring Automation`
          - `filter=name%3D%3DTag New Contacts`
        required: false
        schema:
          type: string
      - name: order_by
        in: query
        description: |-
          Attribute and direction to order items.
          One of the following fields:
          - `name`
          - `category`
          - `activeContacts`
          - `publishedDate`

          One of the following directions:
          - `asc`
          - `desc`
        required: false
        schema:
          type: string
      - name: page_size
        in: query
        description: Total number of items to return per page
        required: false
        example: 0
        schema:
          type: integer
          format: int32
          minimum: 1
          maximum: 25
          exclusiveMinimum: false
          exclusiveMaximum: false
      - name: page_token
        in: query
        description: Page token
        required: false
        schema:
          type: string
      - name: stats
        in: query
        required: false
        schema:
          type: boolean
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAutomationIdsResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/automations/{automation_id}:
    get:
      tags:
      - Automation
      summary: Retrieve an Automation
      description: Retrieves a single automation
      operationId: getAutomation
      parameters:
      - name: automation_id
        in: path
        description: automation_id
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Automation'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/automations/{automation_id}/sequences/{sequence_id}:addContacts:
    post:
      tags:
      - Automation
      summary: Add Contacts to an Automation Sequence
      description: |-
        Adds a list of contacts to an automation sequence
        Response contains a map of the provided list of Contact Ids and their individual result.
      operationId: addContactsToAutomationSequence
      parameters:
      - name: automation_id
        in: path
        description: automation_id
        required: true
        schema:
          type: string
      - name: sequence_id
        in: path
        description: sequence_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddToAutomationSequenceRequest'
        description: addToAutomationSequenceRequest
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddToAutomationSequenceResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/businessProfile:
    get:
      tags:
      - Business Profile
      summary: Retrieve Business Profile
      description: Retrieves Business Profile information.
      operationId: getBusinessProfile
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBusinessProfileResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    patch:
      tags:
      - Business Profile
      summary: Update Business Profile
      description: Updates Business Profile information.
      operationId: updateBusinessProfile
      parameters:
      - name: update_mask
        in: query
        description: An optional list of properties to be updated. If set, only the
          provided properties will be updated and others will be skipped.
        required: false
        allowEmptyValue: false
        explode: true
        schema:
          type: array
          items:
            type: string
          enum:
          - name
          - email
          - website
          - phone
          - address
          - currency_code
          - business_goals
          - business_primary_color
          - business_secondary_color
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBusinessProfileRequest'
        description: businessProfile
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBusinessProfileResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/campaigns:
    get:
      tags:
      - Campaign
      summary: List Campaigns
      description: Retrieves a list of campaigns for the authenticated user
      operationId: listCampaigns
      parameters:
      - name: filter
        in: query
        description: |
          Filter to apply, allowed fields are:
          - (String) `name`

          You will need to apply the `==` operator to check the equality of the filter with your searched
          text, in the encoded form `%3D%3D`.
          The search will look for the text anywhere in the campaign name.
          - `filter=name%3D%3DSpring Campaign`
          - `filter=name%3D%3DTag New Contacts`
        required: false
        schema:
          type: string
      - name: order_by
        in: query
        description: |-
          Attribute and direction to order items.
          One of the following fields:
          - `name`
          - `publisheddate`
          - `id`
          - `completedContactCount`
          - `activeContacts`
          - `datecreated`
          - `lastupdated`

          One of the following directions:
          - `asc`
          - `desc`
        required: false
        schema:
          type: string
      - name: page_size
        in: query
        description: Total number of items to return per page
        required: false
        example: 0
        schema:
          type: integer
          format: int32
          minimum: 1
          maximum: 1000
          exclusiveMinimum: false
          exclusiveMaximum: false
      - name: page_token
        in: query
        description: Page token
        required: false
        schema:
          type: string
      - name: stats
        in: query
        required: false
        schema:
          type: boolean
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCampaignsResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/campaigns/{campaign_id}:
    get:
      tags:
      - Campaign
      summary: Retrieve a Campaign
      description: Retrieves a single campaign
      operationId: getCampaign
      parameters:
      - name: campaign_id
        in: path
        description: campaign_id
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Campaign'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/campaigns/{campaign_id}/sequences/{sequence_id}:addContacts:
    post:
      tags:
      - Campaign
      summary: Add Contacts to Campaign Sequence
      description: |-
        Adds a list of contacts to a campaign sequence
        Response contains a map of the provided list of Contact Ids related to their individual result.
      operationId: addContactsToCampaignSequence
      parameters:
      - name: campaign_id
        in: path
        description: campaign_id
        required: true
        schema:
          type: string
      - name: sequence_id
        in: path
        description: sequence_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddContactsToSequenceRequest'
        description: addContactsToSequenceRequest
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddContactsToSequenceResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/campaigns/{campaign_id}/sequences/{sequence_id}:removeContacts:
    post:
      tags:
      - Campaign
      summary: Remove Contacts from Campaign Sequence
      description: |-
        Removes a list of contacts from a campaign sequence
        Response contains a map of the provided list of Contact Ids related to their individual result.
      operationId: removeContactsFromCampaignSequence
      parameters:
      - name: campaign_id
        in: path
        description: campaign_id
        required: true
        schema:
          type: string
      - name: sequence_id
        in: path
        description: sequence_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveContactsFromSequenceRequest'
        description: removeContactsFromSequenceRequest
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoveContactsFromSequenceResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/companies:
    get:
      tags:
      - Company
      summary: List Companies
      description: 'Retrieves a list of all Companies.<br/><br/>If the feature flag
        is <b>enabled</b>, the endpoint returns the <span style=''color:red''>legacy</span>
        non-paginated list of all companies.<br/>If the flag is <b>disabled</b>, it
        returns a paginated list using the v2-compliant implementation.<br/><br/><span
        style=''color:red''>Deprecated as of v2</span>: The legacy behavior will be
        removed after the transition period.'
      operationId: listCompanies
      parameters:
      - name: fields
        in: query
        description: Comma-delimited list of Company properties to include in the
          response. (Fields such as `notes`, `fax_number`, `email_address`, `phone_number`,
          `update_time`, `create_time` and `custom_fields` aren't included, by default.)
        required: false
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: filter
        in: query
        description: |
          Filter to apply, allowed fields are:
          - (String) `company_name`
          - (String) `email`
          - (String) `since_time`
          - (String) `until_time`
          You will need to apply the `==` operator to check the equality of one of the filters with your searched
          word, in the encoded form `%3D%3D`. For the filters listed above, here are some examples:
          - `filter=company_name%3D%3DCompany`
          - `filter=email%3D%3Dtest@gmail.com`
          - `filter=since_time%3D%3D2025-04-16T20:33:02.321Z;`
          - `filter=until_time%3D%3D2025-08-16T20:33:02.321Z;`
        required: false
        schema:
          type: string
      - name: order_by
        in: query
        description: |-
          Attribute and direction to order items.
          One of the following fields:
          - `id`
          - `create_time`
          - `name`
          - `email`

          One of the following directions:
          - `asc`
          - `desc`
        required: false
        schema:
          type: string
      - name: page_size
        in: query
        description: Total number of items to return per page
        required: false
        example: 0
        schema:
          type: integer
          format: int32
          minimum: 1
          maximum: 1000
          exclusiveMinimum: false
          exclusiveMaximum: false
      - name: page_token
        in: query
        description: Page token
        required: false
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCompaniesResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    post:
      tags:
      - Company
      summary: Create a Company
      description: Creates a new Company.`country_code` is required if `region` is
        specified.
      operationId: createCompany
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCompanyRequest'
        description: company
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/companies/{company_id}:
    get:
      tags:
      - Company
      summary: Retrieve a Company
      description: Retrieves a single Company
      operationId: getCompany
      parameters:
      - name: company_id
        in: path
        description: company_id
        required: true
        schema:
          type: string
      - name: fields
        in: query
        description: 'Comma-delimited list of Company properties to include in the
          response. (Available fields are: `company_name`, `address`, `custom_fields`,
          `email_address`, `fax_number`, `phone_number`, `website`, `notes`)'
        required: false
        explode: true
        schema:
          type: array
          items:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    delete:
      tags:
      - Company
      summary: Delete a Company
      description: Deletes the specified Company
      operationId: deleteCompany
      parameters:
      - name: company_id
        in: path
        description: company_id
        required: true
        schema:
          type: string
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    patch:
      tags:
      - Company
      summary: Update a Company
      description: Updates a Company with the values provided in the request
      operationId: updateCompany
      parameters:
      - name: company_id
        in: path
        description: company_id
        required: true
        schema:
          type: string
      - name: update_mask
        in: query
        description: An optional list of properties to be updated. If set, only the
          provided properties will be updated and others will be skipped.
        required: false
        allowEmptyValue: false
        explode: true
        schema:
          type: array
          items:
            type: string
          enum:
          - id
          - company_name
          - address
          - phone_number
          - fax_number
          - email_address
          - notes
          - website
          - custom_fields
          - create_time
          - update_time
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCompanyRequest'
        description: company
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/contacts:
    get:
      tags:
      - Contact
      summary: List Contacts
      description: Retrieves a list of Contacts
      operationId: listContacts
      parameters:
      - name: fields
        in: query
        description: |-
          Comma-delimited list of Contact properties to include in the response. (Available fields are: addresses,anniversary_date,birth_date,company,contact_type,create_time,
          custom_fields,email_addresses,family_name,fax_numbers,given_name,id,job_title,leadsource_id,
          links,middle_name,notes,origin,owner_id,phone_numbers,preferred_locale,preferred_name,prefix,
          referral_code,score_value,social_accounts,source_type,spouse_name,suffix,tag_ids,time_zone,
          update_time,utm_parameters,website)
        required: false
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: filter
        in: query
        description: |
          Filter to apply, allowed fields are:
          - (String) `email`
          - (String) `given_name`
          - (String) `family_name`
          - (String) `company_id`
          - (Set[String]) `contact_ids`
          - (String) `start_update_time`
          - (String) `end_update_time`

          You will need to apply the `==` operator to check the equality of one of the filters with your searched
          word, in the encoded form `%3D%3D`.
          For the filters listed above, here are some examples:
          - `filter=given_name%3D%3DMary`
          - `filter=company_id%3D%3D123`
          - `filter=company_id%3D%3D123%3Bfamily_name%3D%3DSmith`
        required: false
        schema:
          type: string
      - name: order_by
        in: query
        description: |-
          Attribute and direction to order items.
          One of the following fields:
          - `id`
          - `date_created`
          - `email`

          One of the following directions:
          - `asc`
          - `desc`
        required: false
        schema:
          type: string
      - name: page_size
        in: query
        description: Total number of items to return per page
        required: false
        example: 0
        schema:
          type: integer
          format: int32
          minimum: 1
          maximum: 1000
          exclusiveMinimum: false
          exclusiveMaximum: false
      - name: page_token
        in: query
        description: Page token
        required: false
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListContactsResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    post:
      tags:
      - Contact
      summary: Create a Contact
      description: |-
        Creates a new Contact.
        *Note:* Contact must contain at least one item in `email_addresses` or `phone_numbers` and `country_code` is required if `region` is specified.
      operationId: createContact
      requestBody:
        $ref: '#/components/requestBodies/CreateUpdateContactRequest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/contacts/links/types:
    get:
      tags:
      - Contact
      summary: List Contact Link types
      description: Retrieves a list of Contact Link types.
      operationId: listContactLinkTypes
      parameters:
      - name: filter
        in: query
        description: |
          Filter to apply, allowed fields are:
          - (String) `name`
          You will need to apply the `==` operator to check the equality of one of the filters with your searched
          word, in the encoded form `%3D%3D`. For the filters listed above, here are some examples:
          - `filter=name%3D%3DexpectedValue`
        required: false
        schema:
          type: string
      - name: order_by
        in: query
        description: |
          Attribute and direction to order items.
          One of the following fields:
          - `name`
          - `max_links`
          - `create_time`

          One of the following directions:
          - `asc`
          - `desc`
        required: false
        schema:
          type: string
      - name: page_size
        in: query
        description: Total number of items to return per page
        required: false
        example: 0
        schema:
          type: integer
          format: int32
          minimum: 1
          maximum: 1000
          exclusiveMinimum: false
          exclusiveMaximum: false
      - name: page_token
        in: query
        description: Page token
        required: false
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListContactLinkTypesResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    post:
      tags:
      - Contact
      summary: Create a Contact Link type
      description: Creates a new type of Contact Link
      operationId: createContactLinkType
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateContactLinkTypeRequest'
        description: request
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactLinkType'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/contacts/model:
    get:
      tags:
      - Contact
      summary: Retrieve Contact Model
      description: Get the custom fields and optional properties for the Contact object
      operationId: retrieveContactModel
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectModel'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/contacts/{contact_id}:
    get:
      tags:
      - Contact
      summary: Retrieve a Contact
      description: Retrieves a single Contact
      operationId: getContact
      parameters:
      - name: contact_id
        in: path
        description: contact_id
        required: true
        schema:
          type: string
      - name: fields
        in: query
        description: |-
          Comma-delimited list of Contact properties to include in the response. (Available fields are: addresses,anniversary_date,birth_date,company,contact_type,create_time,
          custom_fields,email_addresses,family_name,fax_numbers,given_name,id,job_title,leadsource_id,
          links,middle_name,notes,origin,owner_id,phone_numbers,preferred_locale,preferred_name,prefix,
          referral_code,score_value,social_accounts,source_type,spouse_name,suffix,tag_ids,time_zone,
          update_time,utm_parameters,website)
        required: false
        explode: true
        schema:
          type: array
          items:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    delete:
      tags:
      - Contact
      summary: Delete a Contact
      description: Deletes the specified Contact
      operationId: deleteContact
      parameters:
      - name: contact_id
        in: path
        description: contact_id
        required: true
        schema:
          type: string
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    patch:
      tags:
      - Contact
      summary: Update a Contact
      description: Updates a Contact
      operationId: updateContact
      parameters:
      - name: contact_id
        in: path
        description: contact_id
        required: true
        schema:
          type: string
      - name: update_mask
        in: query
        description: An optional list of properties to be updated. If set, only the
          provided properties will be updated and others will be skipped.
        required: false
        allowEmptyValue: false
        explode: true
        schema:
          type: array
          items:
            type: string
          enum:
          - addresses
          - anniversary_date
          - birth_date
          - company
          - contact_type
          - create_time
          - custom_fields
          - email_addresses
          - family_name
          - fax_numbers
          - given_name
          - id
          - job_title
          - leadsource_id
          - links
          - middle_name
          - notes
          - origin
          - owner_id
          - phone_numbers
          - preferred_locale
          - preferred_name
          - prefix
          - referral_code
          - score_value
          - social_accounts
          - source_type
          - spouse_name
          - suffix
          - tag_ids
          - time_zone
          - update_time
          - utm_parameters
          - website
      requestBody:
        $ref: '#/components/requestBodies/CreateUpdateContactRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/contacts/{contact_id}/links:
    get:
      tags:
      - Contact
      summary: List Linked Contacts
      description: Retrieves a list of Linked Contacts for a given Contact
      operationId: listContactLinks
      parameters:
      - name: contact_id
        in: path
        description: contact_id
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListContactLinksResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/contacts/{contact_id}/notes:
    get:
      tags:
      - Note
      summary: List Notes
      description: Retrieves a list of Notes
      operationId: listNotes
      parameters:
      - name: contact_id
        in: path
        description: contact_id
        required: true
        schema:
          type: string
      - name: filter
        in: query
        description: |
          Filter to apply, allowed fields are:
          - (String) `assigned_to_user_id`
          - (String) `title`
          - (String) `since_time`
          - (String) `until_time`
          You will need to apply the `==` operator to check the equality of one of the filters with your searched
          word, in the encoded form `%3D%3D`. For the filters listed above, here are some examples:
          - `filter=assigned_to_user_id%3D%3DUserId`
          - `filter=title%3D%3DexpectedTitle`
          - `filter=since_time%3D%3D2025-04-16T20:33:02.321Z;`
          - `filter=until_time%3D%3D2025-08-16T20:33:02.321Z;`
        required: false
        schema:
          type: string
      - name: order_by
        in: query
        description: |-
          Attribute and direction to order items.
          One of the following fields:
          - `id`
          - `create_time`

          One of the following directions:
          - `asc`
          - `desc`
        required: false
        schema:
          type: string
      - name: page_size
        in: query
        description: Total number of items to return per page
        required: false
        example: 0
        schema:
          type: integer
          format: int32
          minimum: 1
          maximum: 1000
          exclusiveMinimum: false
          exclusiveMaximum: false
      - name: page_token
        in: query
        description: Page token
        required: false
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListNotesResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    post:
      tags:
      - Note
      summary: Create a Note
      description: Creates a new Note.
      operationId: createNote
      parameters:
      - name: contact_id
        in: path
        description: contact_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateNoteRequest'
        description: request
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/contacts/{contact_id}/notes/{note_id}:
    get:
      tags:
      - Note
      summary: Retrieve a Note
      description: Retrieves the specified Note
      operationId: getNote
      parameters:
      - name: contact_id
        in: path
        description: contact_id
        required: true
        schema:
          type: string
      - name: note_id
        in: path
        description: note_id
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetNoteResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    delete:
      tags:
      - Note
      summary: Delete a Note
      description: Deletes the specified Note
      operationId: deleteNote
      parameters:
      - name: contact_id
        in: path
        description: contact_id
        required: true
        schema:
          type: string
      - name: note_id
        in: path
        description: note_id
        required: true
        schema:
          type: string
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    patch:
      tags:
      - Note
      summary: Update a Note
      description: Updates a Note for a Contact
      operationId: updateNote
      parameters:
      - name: contact_id
        in: path
        description: contact_id
        required: true
        schema:
          type: string
      - name: note_id
        in: path
        description: note_id
        required: true
        schema:
          type: string
      - name: update_mask
        in: query
        description: An optional list of properties to be updated. If set, only the
          provided properties will be updated and others will be skipped.
        required: false
        allowEmptyValue: false
        explode: true
        schema:
          type: array
          items:
            type: string
          enum:
          - contact_id
          - text
          - title
          - type
          - user_id
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateNoteRequest'
        description: updateNoteRequest
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateNoteResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/contacts:link:
    post:
      tags:
      - Contact
      summary: Link Contacts
      description: Links two Contacts together using the provided Link type
      operationId: linkContacts
      requestBody:
        $ref: '#/components/requestBodies/LinkContactsRequest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactLink'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/contacts:unlink:
    post:
      tags:
      - Contact
      summary: Delete Link between two Contacts
      description: Deletes Link between two Contacts
      operationId: unlinkContacts
      requestBody:
        $ref: '#/components/requestBodies/LinkContactsRequest'
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/discounts/freeTrials:
    get:
      tags:
      - Free Trial Discounts
      summary: List all Subscription Free Trial Discounts
      description: Retrieves a list of Subscription Free Trial Discounts
      operationId: listFreeTrialDiscounts
      parameters:
      - name: filter
        in: query
        description: |
          Filter to apply, allowed fields are:
          - (Integer) `free_trial_days`
          - (Boolean) `hide_price`
          - (String) `subscription_plan_id`

          You will need to apply the `==` operator to check the equality of one of the filters with your searched
          word, in the encoded form `%3D%3D`. For the filters listed above, here are some examples:
          - `filter=free_trial_days%3D%3D14`
          - `filter=hide_price%3D%3DTrue`
          - `filter=subscription_plan_id%3D%3DmySubscriptionPlanId`
          - `filter=free_trial_days%3D%3D14%3Bhide_price%3D%3DFalse`
        required: false
        schema:
          type: string
      - name: order_by
        in: query
        description: |-
          Attribute and direction to order items.
          One of the following fields:
          - `free_trial_days`
          - `hide_price`
          - `id`
          - `name`
          - `subscription_plan_id`

          One of the following directions:
          - `asc`
          - `desc`
        required: false
        schema:
          type: string
      - name: page_size
        in: query
        description: Total number of items to return per page
        required: false
        example: 0
        schema:
          type: integer
          format: int32
          minimum: 1
          maximum: 1000
          exclusiveMinimum: false
          exclusiveMaximum: false
      - name: page_token
        in: query
        description: Page token
        required: false
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFreeTrialDiscountsResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    post:
      tags:
      - Free Trial Discounts
      summary: Create a Subscription Free Trial Discount
      description: Creates a Subscription Free Trial Discount
      operationId: createFreeTrialDiscount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFreeTrialDiscountRequest'
        description: createFreeTrialDiscountRequest
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FreeTrialDiscount'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/discounts/freeTrials/{discount_id}:
    get:
      tags:
      - Free Trial Discounts
      summary: Retrieve a Subscription Free Trial Discount
      description: Retrieves a Subscription Free Trial Discount
      operationId: getFreeTrialDiscount
      parameters:
      - name: discount_id
        in: path
        description: discount_id
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FreeTrialDiscount'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    delete:
      tags:
      - Free Trial Discounts
      summary: Delete a Subscription Free Trial Discount
      description: Deletes a specified Subscription Free Trial Discount
      operationId: deleteFreeTrialDiscount
      parameters:
      - name: discount_id
        in: path
        description: discount_id
        required: true
        schema:
          type: string
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    patch:
      tags:
      - Free Trial Discounts
      summary: Update a Subscription Free Trial Discount
      description: Updates a Subscription Free Trial Discount
      operationId: updateFreeTrialDiscount
      parameters:
      - name: discount_id
        in: path
        description: discount_id
        required: true
        schema:
          type: string
      - name: update_mask
        in: query
        description: An optional list of properties to be updated. If set, only the
          provided properties will be updated and others will be skipped.
        required: false
        allowEmptyValue: false
        explode: true
        schema:
          type: array
          items:
            type: string
          enum:
          - name
          - description
          - free_trial_days
          - hide_price
          - subscription_plan_id
          - criteria
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFreeTrialDiscountRequest'
        description: request
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FreeTrialDiscount'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/discounts/orderTotals:
    get:
      tags:
      - Order Total Discounts
      summary: List all Order Total Discounts
      description: Retrieves a list of Order Total Discounts
      operationId: listOrderTotalDiscounts
      parameters:
      - name: filter
        in: query
        description: |
          Filter to apply, allowed fields are:
          - (Boolean) `apply_to_commissions`
          - (DiscountStrategy) `discount_strategy`: GROSS or NET
          - (DiscountType) `discount_type`: AMOUNT or PERCENT
          - (Double) `discount_value`

          You will need to apply the `==` operator to check the equality of one of the filters with your searched
          word, in the encoded form `%3D%3D`. For the filters listed above, here are some examples:
          - `filter=apply_to_commissions%3D%3Dtrue`
          - `filter=discount_strategy%3D%3DGROSS`
          - `filter=discount_type%3D%3DAMOUNT`
          - `filter=discount_value%3D%3D10.0`
          - `filter=discount_type%3D%3DAMOUNT%3Bdiscount_strategy%3D%3DNET`
        required: false
        schema:
          type: string
      - name: order_by
        in: query
        description: |-
          Attribute and direction to order items.
          One of the following fields:
          - `apply_to_commissions`
          - `discount_strategy`
          - `discount_type`
          - `discount_value`
          - `id`
          - `name`

          One of the following directions:
          - `asc`
          - `desc`
        required: false
        schema:
          type: string
      - name: page_size
        in: query
        description: Total number of items to return per page
        required: false
        example: 0
        schema:
          type: integer
          format: int32
          minimum: 1
          maximum: 1000
          exclusiveMinimum: false
          exclusiveMaximum: false
      - name: page_token
        in: query
        description: Page token
        required: false
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOrderTotalDiscountsResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    post:
      tags:
      - Order Total Discounts
      summary: Create an Order Total Discount
      description: Creates an Order Total Discount
      operationId: createOrderTotalDiscount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrderTotalDiscountRequest'
        description: request
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderTotalDiscount'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/discounts/orderTotals/{discount_id}:
    get:
      tags:
      - Order Total Discounts
      summary: Retrieve an Order Total Discount
      description: Retrieves an Order Total Discount
      operationId: getOrderTotalDiscount
      parameters:
      - name: discount_id
        in: path
        description: discount_id
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderTotalDiscount'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    delete:
      tags:
      - Order Total Discounts
      summary: Delete an Order Total Discount
      description: Deletes a specified Order Total Discount
      operationId: deleteOrderTotalDiscount
      parameters:
      - name: discount_id
        in: path
        description: discount_id
        required: true
        schema:
          type: string
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    patch:
      tags:
      - Order Total Discounts
      summary: Update an Order Total Discount
      description: Updates an Order Total Discount
      operationId: updateOrderTotalDiscount
      parameters:
      - name: discount_id
        in: path
        description: discount_id
        required: true
        schema:
          type: string
      - name: update_mask
        in: query
        description: An optional list of properties to be updated. If set, only the
          provided properties will be updated and others will be skipped.
        required: false
        allowEmptyValue: false
        explode: true
        schema:
          type: array
          items:
            type: string
          enum:
          - name
          - description
          - apply_to_commissions
          - discount_type
          - discount_value
          - discount_strategy
          - criteria
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOrderTotalDiscountRequest'
        description: request
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderTotalDiscount'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/discounts/productCategories:
    get:
      tags:
      - Category Discounts
      summary: List Category Discounts
      description: Retrieves a list of Category Discounts
      operationId: listCategoryDiscounts
      parameters:
      - name: filter
        in: query
        description: |
          Filter to apply, the allowed field is:
          - (String) `product_category_id`

          You will need to apply the `==` operator to check the equality of the filter with your searched
          word, in the encoded form `%3D%3D`. For the filters listed above, here are some examples:
          - `filter=product_category_id%3D%3D4`
        required: false
        schema:
          type: string
      - name: order_by
        in: query
        description: |-
          Attribute and direction to order items.
          One of the following fields:
          - `id`
          - `name`

          One of the following directions:
          - `asc`
          - `desc`
        required: false
        schema:
          type: string
      - name: page_size
        in: query
        description: Total number of items to return per page
        required: false
        example: 0
        schema:
          type: integer
          format: int32
          minimum: 1
          maximum: 1000
          exclusiveMinimum: false
          exclusiveMaximum: false
      - name: page_token
        in: query
        description: Page token
        required: false
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCategoryDiscountsResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    post:
      tags:
      - Category Discounts
      summary: Create a Category Discount
      description: Creates a Category Discount
      operationId: createCategoryDiscount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCategoryDiscountRequest'
        description: request
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryDiscount'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/discounts/productCategories/{discount_id}:
    get:
      tags:
      - Category Discounts
      summary: Retrieve a Category Discount
      description: Retrieves a single Category Discount
      operationId: getCategoryDiscount
      parameters:
      - name: discount_id
        in: path
        description: discount_id
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryDiscount'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    delete:
      tags:
      - Category Discounts
      summary: Delete a Category Discount
      description: Deletes a specified Category Discount
      operationId: deleteCategoryDiscount
      parameters:
      - name: discount_id
        in: path
        description: discount_id
        required: true
        schema:
          type: string
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    patch:
      tags:
      - Category Discounts
      summary: Update a Category Discount
      description: Updates a Category Discount
      operationId: updateCategoryDiscount
      parameters:
      - name: discount_id
        in: path
        description: discount_id
        required: true
        schema:
          type: string
      - name: update_mask
        in: query
        description: An optional list of properties to be updated. If set, only the
          provided properties will be updated and others will be skipped.
        required: false
        allowEmptyValue: false
        explode: true
        schema:
          type: array
          items:
            type: string
          enum:
          - name
          - description
          - discount_percent
          - apply_to_commissions
          - criteria
          - product_category_ids
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCategoryDiscountRequest'
        description: request
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryDiscount'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/discounts/products:
    get:
      tags:
      - Product Discounts
      summary: List all Product Discounts
      description: Retrieves a list of Product Discounts
      operationId: listProductDiscounts
      parameters:
      - name: filter
        in: query
        description: |
          Filter to apply, allowed fields are:
          - (Boolean) `apply_to_commissions`
          - (DiscountType) `discount_type`: AMOUNT or PERCENT
          - (Double) `discount_value`
          - (String) `product_id`

          You will need to apply the `==` operator to check the equality of one of the filters with your searched
          word, in the encoded form `%3D%3D`. For the filters listed above, here are some examples:
          - `filter=apply_to_commissions%3D%3Dtrue`
          - `filter=discount_type%3D%3DAMOUNT`
          - `filter=discount_value%3D%3D10.0`
          - `filter=product_id%3D%3D2`
          - `filter=discount_type%3D%3DAMOUNT%3Bdiscount_value%3D%3D10.0`
        required: false
        schema:
          type: string
      - name: order_by
        in: query
        description: |-
          Attribute and direction to order items.
          One of the following fields:
          - `apply_to_commissions`
          - `discount_type`
          - `discount_value`
          - `id`
          - `name`
          - `product_id`

          One of the following directions:
          - `asc`
          - `desc`
        required: false
        schema:
          type: string
      - name: page_size
        in: query
        description: Total number of items to return per page
        required: false
        example: 0
        schema:
          type: integer
          format: int32
          minimum: 1
          maximum: 1000
          exclusiveMinimum: false
          exclusiveMaximum: false
      - name: page_token
        in: query
        description: Page token
        required: false
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListProductDiscountsResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    post:
      tags:
      - Product Discounts
      summary: Create a Product Discount
      description: Creates a Product Discount
      operationId: createProductDiscount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProductDiscountRequest'
        description: request
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductDiscount'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/discounts/products/{discount_id}:
    get:
      tags:
      - Product Discounts
      summary: Retrieve a Product Discount
      description: Retrieves a Product Discount
      operationId: getProductDiscount
      parameters:
      - name: discount_id
        in: path
        description: discount_id
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductDiscount'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    delete:
      tags:
      - Product Discounts
      summary: Delete a Product Discount
      description: Deletes a specified Product Discount
      operationId: deleteProductDiscount
      parameters:
      - name: discount_id
        in: path
        description: discount_id
        required: true
        schema:
          type: string
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    patch:
      tags:
      - Product Discounts
      summary: Update a Product Discount
      description: Updates a Product Discount
      operationId: updateProductDiscount
      parameters:
      - name: discount_id
        in: path
        description: discount_id
        required: true
        schema:
          type: string
      - name: update_mask
        in: query
        description: An optional list of properties to be updated. If set, only the
          provided properties will be updated and others will be skipped.
        required: false
        allowEmptyValue: false
        explode: true
        schema:
          type: array
          items:
            type: string
          enum:
          - name
          - description
          - apply_to_commissions
          - discount_type
          - discount_value
          - product_id
          - criteria
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProductDiscountRequest'
        description: request
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductDiscount'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/discounts/shipping:
    get:
      tags:
      - Shipping Discounts
      summary: List all Shipping Discounts
      description: Retrieves a list of Shipping Discounts
      operationId: listShippingDiscounts
      parameters:
      - name: filter
        in: query
        description: |
          Filter to apply, allowed fields are:
          - (DiscountType) `discount_type`: AMOUNT or PERCENT
          - (Double) `discount_value`

          You will need to apply the `==` operator to check the equality of one of the filters with your searched
          word, in the encoded form `%3D%3D`. For the filters listed above, here are some examples:
          - `filter=discount_type%3D%3DAMOUNT`
          - `filter=discount_value%3D%3D4.5`
          - `filter=discount_type%3D%3DAMOUNT%3Bdiscount_value%3D%3D4.5`
        required: false
        schema:
          type: string
      - name: order_by
        in: query
        description: |-
          Attribute and direction to order items.
          One of the following fields:
          - `discount_type`
          - `discount_value`
          - `id`
          - `name`

          One of the following directions:
          - `asc`
          - `desc`
        required: false
        schema:
          type: string
      - name: page_size
        in: query
        description: Total number of items to return per page
        required: false
        example: 0
        schema:
          type: integer
          format: int32
          minimum: 1
          maximum: 1000
          exclusiveMinimum: false
          exclusiveMaximum: false
      - name: page_token
        in: query
        description: Page token
        required: false
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListShippingDiscountsResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    post:
      tags:
      - Shipping Discounts
      summary: Create a Shipping Discount
      description: Creates a Shipping Discount
      operationId: createShippingDiscount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateShippingDiscountRequest'
        description: request
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShippingDiscount'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/discounts/shipping/{discount_id}:
    get:
      tags:
      - Shipping Discounts
      summary: Retrieve a Shipping Discount
      description: Retrieves a Shipping Discount
      operationId: getShippingDiscount
      parameters:
      - name: discount_id
        in: path
        description: discount_id
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShippingDiscount'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    delete:
      tags:
      - Shipping Discounts
      summary: Delete a Shipping Discount
      description: Deletes a specified Shipping Discount
      operationId: deleteShippingDiscount
      parameters:
      - name: discount_id
        in: path
        description: discount_id
        required: true
        schema:
          type: string
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    patch:
      tags:
      - Shipping Discounts
      summary: Update a Shipping Discount
      description: Updates a Shipping Discount
      operationId: updateShippingDiscount
      parameters:
      - name: discount_id
        in: path
        description: discount_id
        required: true
        schema:
          type: string
      - name: update_mask
        in: query
        description: An optional list of properties to be updated. If set, only the
          provided properties will be updated and others will be skipped.
        required: false
        allowEmptyValue: false
        explode: true
        schema:
          type: array
          items:
            type: string
          enum:
          - name
          - description
          - discount_type
          - discount_value
          - criteria
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateShippingDiscountRequest'
        description: request
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShippingDiscount'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/emails:
    post:
      tags:
      - Email
      summary: Create an Email Record
      description: Creates a Record of an Email sent to a Contact
      operationId: createEmail
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEmailSentRequest'
        description: emailWithContent
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailSentWithContent'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/emails/templates/{email_template_id}:
    get:
      tags:
      - Email
      summary: Retrieve an email template
      description: Retrieve an email template
      operationId: getEmailTemplate
      parameters:
      - name: email_template_id
        in: path
        description: email_template_id
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailTemplate'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/emails/templates:send:
    post:
      tags:
      - Email
      summary: Send an email based on a template
      description: Send an email based on a template
      operationId: sendEmailTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailSendTemplateRequest'
        description: 'Use a template to send an email to a list of contacts '
      responses:
        '202':
          description: Accepted
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/emails/{id}:
    get:
      tags:
      - Email
      summary: Retrieve an Email
      description: Retrieves a single Email that has been sent
      operationId: getEmail
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailSentWithContent'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    delete:
      tags:
      - Email
      summary: Delete an Email Record
      description: Deletes a specific Email Record
      operationId: deleteEmail
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: string
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/emails:batchAdd:
    post:
      tags:
      - Email
      summary: Create a set of Email Records
      description: Creates a set of Records of Emails sent to Contacts, maximum 1000
        per transaction.
      operationId: createEmails
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEmailsSentRequest'
        description: Email records to persist, with content.
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailsSentList'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/emails:batchRemove:
    post:
      tags:
      - Email
      summary: Remove a set of Email Records
      description: Removes a set of Email Records
      operationId: deleteEmails
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteEmailsRequest'
        description: deleteEmailsRequest
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteEmailsResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/emails:send:
    post:
      tags:
      - Email
      summary: Send an Email
      description: Sends an Email to a list of Contacts
      operationId: sendEmail
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailSendRequest'
        description: emailSendRequest
      responses:
        '202':
          description: Accepted
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/files:
    get:
      tags:
      - Files
      summary: List all files
      description: Retrieves a list of files
      operationId: listFiles
      parameters:
      - name: filter
        in: query
        description: |
          Filter to apply, allowed fields are:
          - (Boolean) `is_public`
          - (String) `contact_id`
          - (String) `user_id`
          - (FileBoxCategory) `category`
          - (FileBoxType) `file_box_type`

          You will need to apply the `==` operator to check the equality of one of the filters with your searched
          word, in the encoded form `%3D%3D`. For the filters listed above, here are some examples:
          - `filter=contact_id%3D%3D123`
          - `filter=category%3D%3DATTACHMENTS`
          - `filter=file_box_type%3D%3DTICKET%3Bcategory%3D%3DATTACHMENTS`
        required: false
        schema:
          type: string
      - name: order_by
        in: query
        description: |
          Attribute and direction to order items.
          One of the following fields:
          - `file_name`
          - `updated_time`
          - ...

          One of the following directions:
          - `asc`
          - `desc`
        required: false
        schema:
          type: string
      - name: page_size
        in: query
        description: Total number of items to return per page
        required: false
        example: 0
        schema:
          type: integer
          format: int32
          minimum: 1
          maximum: 1000
          exclusiveMinimum: false
          exclusiveMaximum: false
      - name: page_token
        in: query
        description: Page token
        required: false
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFilesResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    post:
      tags:
      - Files
      summary: Create a file
      description: Creates a file and uploads it
      operationId: createFile
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                contact_id:
                  description: Contact ID
                  type: string
                file:
                  description: File to upload. This is a file sent as multi-part (not
                    a string)
                  type: string
                file_association:
                  description: File association
                  type: string
                  enum:
                  - CONTACT
                  - USER
                  - COMPANY
                file_name:
                  description: File name
                  type: string
                is_public:
                  description: Is public
                  type: boolean
              required:
              - file
              - file_association
              - file_name
              - is_public
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileMetadata'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/files/{file_id}:
    get:
      tags:
      - Files
      summary: Retrieve a file
      description: Retrieves a file
      operationId: getFile
      parameters:
      - name: file_id
        in: path
        description: file_id
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileMetadata'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    post:
      tags:
      - Files
      summary: Update a file
      description: Updates a file. Note that this endpoint is using a POST method
        instead of PATCH.
      operationId: updateFile
      parameters:
      - name: file_id
        in: path
        description: file_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  description: File to upload. This is a file sent as multi-part (not
                    a string)
                  type: string
                file_name:
                  description: File name
                  type: string
                is_public:
                  description: Is public
                  type: boolean
                update_mask:
                  description: Update Mask
                  type: string
                  enum:
                  - file
                  - file_name
                  - is_public
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileMetadata'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    delete:
      tags:
      - Files
      summary: Delete a file
      description: Deletes a specified file
      operationId: deleteFile
      parameters:
      - name: file_id
        in: path
        description: file_id
        required: true
        schema:
          type: string
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/files/{file_id}:data:
    get:
      tags:
      - Files
      summary: Retrieve a file's data
      description: Retrieves a file's data
      operationId: getFileData
      parameters:
      - name: file_id
        in: path
        description: file_id
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
                format: byte
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/leadSourceCategories:
    get:
      tags:
      - Lead Source Categories
      summary: List Lead Source Categories
      description: Retrieves a list of Lead Source Categories
      operationId: listLeadSourceCategories
      parameters:
      - name: filter
        in: query
        description: |-
          Filter to apply, allowed fields are:

          - (String) `name`

          You will need to apply the `==` operator to check the equality of one of the filters with your searched
          word, in the encoded form `%3D%3D`. For the filters listed above, here is an example:

          - `filter=name%3D%3Dexample`
        required: false
        schema:
          type: string
      - name: order_by
        in: query
        description: |-
          Attribute and direction to order items.
          One of the following fields:
          - `name`

          One of the following directions:
          - `asc`
          - `desc`
        required: false
        schema:
          type: string
      - name: page_size
        in: query
        description: Total number of items to return per page
        required: false
        example: 0
        schema:
          type: integer
          format: int32
          minimum: 1
          maximum: 1000
          exclusiveMinimum: false
          exclusiveMaximum: false
      - name: page_token
        in: query
        description: Page token
        required: false
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLeadSourceCategoriesResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    post:
      tags:
      - Lead Source Categories
      summary: Create a Lead Source Category
      description: Creates a new Lead Source Category
      operationId: createLeadSourceCategory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUpdateLeadSourceCategoryRequest'
        description: The request object to create a new lead source category
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeadSourceCategory'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/leadSourceCategories/{lead_source_category_id}:
    get:
      tags:
      - Lead Source Categories
      summary: Retrieve a Lead Source Category
      description: Retrieves a single Lead Source Category for a given ID
      operationId: getLeadSourceCategory
      parameters:
      - name: lead_source_category_id
        in: path
        description: The ID of a lead source category
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeadSourceCategory'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    delete:
      tags:
      - Lead Source Categories
      summary: Delete a Lead Source Category
      description: Deletes the specified Lead Source Category
      operationId: deleteLeadSourceCategory
      parameters:
      - name: lead_source_category_id
        in: path
        description: The ID of a lead source category
        required: true
        schema:
          type: string
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    patch:
      tags:
      - Lead Source Categories
      summary: Update a Lead Source Category
      description: Updates a Lead Source Category
      operationId: updateLeadSourceCategory
      parameters:
      - name: lead_source_category_id
        in: path
        description: The ID of a lead source category
        required: true
        schema:
          type: string
      - name: update_mask
        in: query
        description: An optional list of properties to be updated. If set, only the
          provided properties will be updated and others will be skipped.
        required: false
        allowEmptyValue: false
        explode: true
        schema:
          type: array
          items:
            type: string
          enum:
          - name
          - description
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUpdateLeadSourceCategoryRequest'
        description: The request object to update a lead source category
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeadSourceCategory'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/leadSources:
    get:
      tags:
      - Lead Sources
      summary: List Lead Sources
      description: Retrieves a list of Lead Sources
      operationId: listLeadSources
      parameters:
      - name: filter
        in: query
        description: |-
          Filter to apply, allowed fields are:

          - (String) `name`
          - (String) `status`
          - (String) `lead_source_category_id`
          - (String) `vendor`
          - (String) `medium`
          - (String) `start_time`
          - (String) `end_time`

          You will need to apply the `==` operator to check the equality of one of the filters with your searched
          word, in the encoded form `%3D%3D`. For the filters listed above, here are some examples:

          - `filter=name%3D%3Dexample`
          - `filter=start_time%3D%3D2024-12-22T01:00:00.000Z`
        required: false
        schema:
          type: string
      - name: order_by
        in: query
        description: |-
          Attribute and direction to order items.
          One of the following fields:

          - `name`
          - `status`
          - `vendor`
          - `medium`
          - `start_time`
          - `end_time`
          - `create_time`
          - `update_time`

          One of the following directions:

          - `asc`
          - `desc`
        required: false
        schema:
          type: string
      - name: page_size
        in: query
        description: Total number of items to return per page
        required: false
        example: 0
        schema:
          type: integer
          format: int32
          minimum: 1
          maximum: 1000
          exclusiveMinimum: false
          exclusiveMaximum: false
      - name: page_token
        in: query
        description: Page token
        required: false
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLeadSourcesResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    post:
      tags:
      - Lead Sources
      summary: Create a Lead Source
      description: Creates a new Lead Source
      operationId: createLeadSource
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateLeadSourceRequest'
        description: The request object to create a new lead source
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeadSource'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/leadSources/{lead_source_id}:
    get:
      tags:
      - Lead Sources
      summary: Retrieve a Lead Source
      description: Retrieves a Lead Source by ID
      operationId: getLeadSource
      parameters:
      - name: lead_source_id
        in: path
        description: The ID of a lead source
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeadSource'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    delete:
      tags:
      - Lead Sources
      summary: Delete a Lead Source
      description: Deletes a Lead Source by ID
      operationId: deleteLeadSource
      parameters:
      - name: lead_source_id
        in: path
        description: The ID of a lead source
        required: true
        schema:
          type: string
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    patch:
      tags:
      - Lead Sources
      summary: Update a Lead Source
      description: Updates a Lead Source with only the values provided in the request
      operationId: updateLeadSource
      parameters:
      - name: lead_source_id
        in: path
        description: The ID of a lead source
        required: true
        schema:
          type: string
      - name: update_mask
        in: query
        description: An optional list of properties to be updated. If set, only the
          provided properties will be updated and others will be skipped.
        required: false
        allowEmptyValue: false
        explode: true
        schema:
          type: array
          items:
            type: string
          enum:
          - name
          - description
          - vendor
          - medium
          - message
          - start_time
          - end_time
          - status
          - lead_source_category_id
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateLeadSourceRequest'
        description: The request object to update a lead source
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeadSource'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/leadSources/{lead_source_id}/expenses:
    get:
      tags:
      - Lead Source Expenses
      summary: List Lead Source Expenses
      description: Retrieves a list of lead source expenses
      operationId: listLeadSourceExpenses
      parameters:
      - name: filter
        in: query
        description: |-
          Filter to apply, allowed fields are:

          - (String) `title`
          - (Long) `amount`
          - (String) `incurred_time`
          - (String) `create_time`
          - (String) `update_time`

          You will need to apply the `==` operator to check the equality of one of the filters with your searched
          word, in the encoded form `%3D%3D`. For the filters listed above, here are some examples:

          - `filter=amount%3D%3D2500`
          - `filter=incurred_time%3D%3D2024-12-22T01:00:00.000Z`
        required: false
        schema:
          type: string
      - name: lead_source_id
        in: path
        description: The ID of the lead source this expense belongs to
        required: true
        schema:
          type: string
      - name: order_by
        in: query
        description: |-
          Attribute and direction to order items.
          One of the following fields:

          - `title`
          - `amount`
          - `incurred_time`
          - `create_time`
          - `update_time`

          One of the following directions:
          - `asc`
          - `desc`
        required: false
        schema:
          type: string
      - name: page_size
        in: query
        description: Total number of items to return per page
        required: false
        example: 0
        schema:
          type: integer
          format: int32
          minimum: 1
          maximum: 1000
          exclusiveMinimum: false
          exclusiveMaximum: false
      - name: page_token
        in: query
        description: Page token
        required: false
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLeadSourceExpensesResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    post:
      tags:
      - Lead Source Expenses
      summary: Create a Lead Source Expense
      description: Creates a new Lead Source Expense
      operationId: createLeadSourceExpense
      parameters:
      - name: lead_source_id
        in: path
        description: The ID of the lead source this expense belongs to
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateLeadSourceExpenseRequest'
        description: The request object to create a new lead source expense
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeadSourceExpense'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/leadSources/{lead_source_id}/expenses/{lead_source_expense_id}:
    get:
      tags:
      - Lead Source Expenses
      summary: Retrieve a Lead Source Expense
      description: Retrieves a single Lead Source Expense for a given ID
      operationId: getLeadSourceExpense
      parameters:
      - name: lead_source_expense_id
        in: path
        description: The ID of a lead source expense
        required: true
        schema:
          type: string
      - name: lead_source_id
        in: path
        description: The ID of the lead source this expense belongs to
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeadSourceExpense'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    delete:
      tags:
      - Lead Source Expenses
      summary: Delete a lead source expense
      description: Deletes a lead source expense by ID
      operationId: deleteLeadSourceExpense
      parameters:
      - name: lead_source_expense_id
        in: path
        description: The ID of a lead source expense
        required: true
        schema:
          type: string
      - name: lead_source_id
        in: path
        description: The ID of the lead source this expense belongs to
        required: true
        schema:
          type: string
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    patch:
      tags:
      - Lead Source Expenses
      summary: Update a Lead Source Expense
      description: Updates a new Lead Source Expense
      operationId: updateLeadSourceExpense
      parameters:
      - name: lead_source_expense_id
        in: path
        description: The ID of a lead source expense
        required: true
        schema:
          type: string
      - name: lead_source_id
        in: path
        description: The ID of the lead source this expense belongs to
        required: true
        schema:
          type: string
      - name: update_mask
        in: query
        description: An optional list of properties to be updated. If set, only the
          provided properties will be updated and others will be skipped.
        required: false
        allowEmptyValue: false
        explode: true
        schema:
          type: array
          items:
            type: string
          enum:
          - title
          - notes
          - amount
          - incurred_time
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateLeadSourceExpenseRequest'
        description: The request object to update a lead source expense
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeadSourceExpense'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/leadSources/{lead_source_id}/recurringExpenses:
    get:
      tags:
      - Lead Source Recurring Expenses
      summary: Retrieves a list of lead source recurring expenses
      description: Retrieves a list of recurring expenses with lead_source_id and
        optional 'filter' query param
      operationId: listLeadSourceRecurringExpenses
      parameters:
      - name: filter
        in: query
        description: |-
          Filter to apply, allowed fields are:

          - (String) `title`
          - (Long) `amount`
          - (String) `start_time`
          - (String) `end_time`
          - (String) `next_expense_time`
          - (String) `create_time`
          - (String) `update_time`

          You will need to apply the `==` operator to check the equality of one of the filters with your searched
          word, in the encoded form `%3D%3D`. For the filters listed above, here are some examples:

          - `filter=amount%3D%3D2500`
          - `filter=next_expense_time%3D%3D2024-12-22T01:00:00.000Z`
        required: false
        schema:
          type: string
      - name: lead_source_id
        in: path
        description: The ID of the lead source this recurring expense belongs to
        required: true
        schema:
          type: string
      - name: order_by
        in: query
        description: |-
          Attribute and direction to order items.
          One of the following fields:
          - `title`
          - `amount`
          - `start_time`
          - `end_time`
          - `next_expense_time`
          - `create_time`
          - `update_time`

          One of the following directions:
          - `asc`
          - `desc`
        required: false
        schema:
          type: string
      - name: page_size
        in: query
        description: Total number of items to return per page
        required: false
        example: 0
        schema:
          type: integer
          format: int32
          minimum: 1
          maximum: 1000
          exclusiveMinimum: false
          exclusiveMaximum: false
      - name: page_token
        in: query
        description: Page token
        required: false
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLeadSourceRecurringExpensesResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    post:
      tags:
      - Lead Source Recurring Expenses
      summary: Create a Lead Source Recurring Expense
      description: Creates a new Lead Source Recurring Expense
      operationId: createLeadSourceRecurringExpense
      parameters:
      - name: lead_source_id
        in: path
        description: The ID of the lead source this recurring expense belongs to
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateLeadSourceRecurringExpenseRequest'
        description: The request object to create a new lead source recurring expense
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeadSourceRecurringExpense'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/leadSources/{lead_source_id}/recurringExpenses/{lead_source_recurring_expense_id}:
    get:
      tags:
      - Lead Source Recurring Expenses
      summary: Retrieve a Lead Source Recurring Expense
      description: Retrieves a Lead Source Recurring Expense using leadSourceId and
        leadSourceRecurringExpenseId
      operationId: getLeadSourceRecurringExpense
      parameters:
      - name: lead_source_id
        in: path
        description: The ID of the lead source this recurring expense belongs to
        required: true
        schema:
          type: string
      - name: lead_source_recurring_expense_id
        in: path
        description: The ID of a lead source recurring expense
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeadSourceRecurringExpense'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    delete:
      tags:
      - Lead Source Recurring Expenses
      summary: Delete a Lead Source Recurring Expense
      description: Deletes a new Lead Source Recurring Expense that belongs to a Lead
        Source
      operationId: deleteLeadSourceRecurringExpense
      parameters:
      - name: lead_source_id
        in: path
        description: The ID of the lead source this recurring expense belongs to
        required: true
        schema:
          type: string
      - name: lead_source_recurring_expense_id
        in: path
        description: The ID of a lead source recurring expense
        required: true
        schema:
          type: string
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    patch:
      tags:
      - Lead Source Recurring Expenses
      summary: Update a Lead Source Recurring Expense
      description: Updates a Lead Source Recurring Expense
      operationId: updateLeadSourceRecurringExpense
      parameters:
      - name: lead_source_id
        in: path
        description: The ID of the lead source this recurring expense belongs to
        required: true
        schema:
          type: string
      - name: lead_source_recurring_expense_id
        in: path
        description: The ID of a lead source recurring expense
        required: true
        schema:
          type: string
      - name: update_mask
        in: query
        description: An optional list of properties to be updated. If set, only the
          provided properties will be updated and others will be skipped.
        required: false
        allowEmptyValue: false
        explode: true
        schema:
          type: array
          items:
            type: string
          enum:
          - title
          - notes
          - amount
          - start_time
          - end_time
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LeadSourceRecurringExpenseUpdateRequest'
        description: The request object to update a lead source recurring expense
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeadSourceRecurringExpense'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/leadSources/{lead_source_id}/recurringExpenses/{lead_source_recurring_expense_id}/expenses:
    get:
      tags:
      - Lead Source Recurring Expenses
      summary: Retrieves a list of expenses incurred from a recurring expense
      description: Retrieves a list of expenses incurred from a recurring expense
      operationId: listExpensesIncurredFromLeadSourceRecurringExpense
      parameters:
      - name: filter
        in: query
        description: |-
          Filter to apply, allowed fields are:

          - (String) `title`
          - (Long) `amount`
          - (String) `incurred_time`
          - (String) `create_time`
          - (String) `update_time`

          You will need to apply the `==` operator to check the equality of one of the filters with your searched
          word, in the encoded form `%3D%3D`. For the filters listed above, here are some examples:

          - `filter=amount%3D%3D2500`
          - `filter=incurred_time%3D%3D2024-12-22T01:00:00.000Z`
        required: false
        schema:
          type: string
      - name: lead_source_id
        in: path
        description: The ID of the lead source this recurring expense belongs to
        required: true
        schema:
          type: string
      - name: lead_source_recurring_expense_id
        in: path
        description: The ID of a lead source recurring expense
        required: true
        schema:
          type: string
      - name: order_by
        in: query
        description: |-
          Attribute and direction to order items.
          One of the following fields:

          - `title`
          - `amount`
          - `incurred_time`
          - `create_time`
          - `update_time`

          One of the following directions:
          - `asc`
          - `desc`
        required: false
        schema:
          type: string
      - name: page_size
        in: query
        description: Total number of items to return per page
        required: false
        example: 0
        schema:
          type: integer
          format: int32
          minimum: 1
          maximum: 1000
          exclusiveMinimum: false
          exclusiveMaximum: false
      - name: page_token
        in: query
        description: Page token
        required: false
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLeadSourceExpensesResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/locales/countries:
    get:
      tags:
      - Locale
      summary: List Countries
      description: Retrieves a list of countries
      operationId: listCountries
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCountriesResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/locales/countries/{country_code}:
    get:
      tags:
      - Locale
      summary: Get Country
      description: Gets a country by its code or name
      operationId: getCountryByCode
      parameters:
      - name: country_code
        in: path
        description: The ISO 3166-2 alpha-2 code, alpha-3 code, or name of the country
          to be retrieved
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Country'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/locales/countries/{country_code}/provinces:
    get:
      tags:
      - Locale
      summary: List a Country's Province
      description: Retrieves a list of provinces for a given country
      operationId: listProvincesForCountry
      parameters:
      - name: country_code
        in: path
        description: country_code
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListProvincesResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/locales/countries/{country_code}/provinces/{province_code}:
    get:
      tags:
      - Locale
      summary: Get Province
      description: Get a province by its code or name
      operationId: getProvinceByCode
      parameters:
      - name: country_code
        in: path
        description: The ISO 3166-1 alpha-2 code, alpha-3 code, or name of the country
          to be retrieved
        required: true
        schema:
          type: string
      - name: province_code
        in: path
        description: The ISO 3166-2 code or name of the province to be retrieved
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Province'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/merchants:
    get:
      tags:
      - Merchants
      summary: List Merchant accounts
      description: Retrieves a list of Merchant accounts
      operationId: listMerchants
      parameters:
      - name: filter
        in: query
        description: |
          Filter to apply, allowed fields are:
          - (String) `id`
          - (String) `name`
          - (String) `type`
          You will need to apply the `==` operator to check the equality of one of the filters with your searched
          word, in the encoded form `%3D%3D`. For the filters listed above, here are some examples:
          - `filter=id%3D%3D123`
          - `filter=name%3D%3Dabc`
          - `filter=id%3D%3D123%3Bname%3D%3Dabc`
        required: false
        schema:
          type: string
      - name: order_by
        in: query
        description: |-
          Attribute and direction to order items.
          One of the following fields:
          - `id`
          - `name`

          One of the following directions:
          - `asc`
          - `desc`
        required: false
        schema:
          type: string
      - name: page_size
        in: query
        description: Total number of items to return per page
        required: false
        example: 0
        schema:
          type: integer
          format: int32
          minimum: 1
          maximum: 1000
          exclusiveMinimum: false
          exclusiveMaximum: false
      - name: page_token
        in: query
        description: Page token
        required: false
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListMerchantsResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/notes/model:
    get:
      tags:
      - Note
      summary: Retrieve Note Model
      description: 'Gets the custom fields for the Note object<br/>Note: Custom Fields
        for Tasks, Classic Appointments and Notes are combined.'
      operationId: retrieveNoteModel
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectModel'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/notes/model/customFields:
    post:
      tags:
      - Note
      summary: Create a Custom Field
      description: 'Creates a custom field of the specified type and options to the
        Note object<br/>Note: Custom Fields for Tasks, Classic Appointments and Notes
        are combined.'
      operationId: createNoteCustomField
      requestBody:
        $ref: '#/components/requestBodies/CreateCustomFieldRequest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomFieldMetaData'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/notes/model/customFields/{custom_field_id}:
    patch:
      tags:
      - Note
      summary: Update a Custom Field
      description: 'Updates a custom field of the specified type and options to the
        Note object<br/>Note: Custom Fields for Tasks, Classic Appointments and Notes
        are combined.'
      operationId: updateNotesCustomField
      parameters:
      - name: custom_field_id
        in: path
        description: custom_field_id
        required: true
        schema:
          type: string
      - name: update_mask
        in: query
        description: An optional list of properties to be updated. If set, only the
          provided properties will be updated and others will be skipped.
        required: false
        allowEmptyValue: false
        explode: true
        schema:
          type: array
          items:
            type: string
          enum:
          - group_id
          - label
          - options
      requestBody:
        $ref: '#/components/requestBodies/UpdateCustomFieldMetaDataRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomFieldMetaData'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/notes/templates:
    get:
      tags:
      - Note
      summary: Retrieve Note Templates
      description: Retrieves a list of Note Templates
      operationId: listNoteTemplates
      parameters:
      - name: filter
        in: query
        description: Search filter to apply to results
        required: false
        schema:
          type: string
      - name: order_by
        in: query
        description: Attribute and direction to order items by. E.g. `given_name desc`
        required: false
        schema:
          type: string
      - name: page_size
        in: query
        description: Total number of items to return per page
        required: false
        example: 0
        schema:
          type: integer
          format: int32
          minimum: 1
          maximum: 1000
          exclusiveMinimum: false
          exclusiveMaximum: false
      - name: page_token
        in: query
        description: Page token
        required: false
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListNoteTemplateResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/opportunities:
    get:
      tags:
      - Opportunity
      summary: List Opportunities
      description: Retrieves a list of all Opportunities.
      operationId: listOpportunities
      parameters:
      - name: fields
        in: query
        description: fields
        required: false
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: filter
        in: query
        description: |
          Filter to apply, allowed fields are:
          - (String) `stage_id`
          - (String) `user_id`
        required: false
        schema:
          type: string
      - name: order_by
        in: query
        description: |-
          Attribute and direction to opportunities items.
          One of the following fields:
          - `next_action_time`
          - `contact_name`
          - `opportunity_name`
          - `created_time`

          One of the following directions:
          - `asc`
          - `desc`
        required: false
        schema:
          type: string
      - name: page_size
        in: query
        description: Total number of items to return per page
        required: false
        example: 0
        schema:
          type: integer
          format: int32
          minimum: 1
          maximum: 1000
          exclusiveMinimum: false
          exclusiveMaximum: false
      - name: page_token
        in: query
        description: Page token
        required: false
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOpportunitiesResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    post:
      tags:
      - Opportunity
      summary: Create an Opportunity
      description: Creates a new opportunity as the authenticated user.
      operationId: createOpportunity
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOpportunityRequest'
        description: opportunity
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestV2Opportunity'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/opportunities/model/customFields:
    post:
      tags:
      - Opportunity
      summary: Create an Opportunity Custom Field
      description: Creates a custom field of the specified type and options to the
        Opportunity object
      operationId: createOpportunityCustomFields
      requestBody:
        $ref: '#/components/requestBodies/CreateCustomFieldRequest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomFieldMetaData'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/opportunities/model/customFields/{custom_field_id}:
    patch:
      tags:
      - Opportunity
      summary: Update a Opportunity's Custom Field
      description: Updates a custom field of the specified type and options to the
        Opportunity object.
      operationId: updateOpportunityCustomField
      parameters:
      - name: custom_field_id
        in: path
        description: custom_field_id
        required: true
        schema:
          type: string
      - name: update_mask
        in: query
        description: An optional list of properties to be updated. If set, only the
          provided properties will be updated and others will be skipped.
        required: false
        allowEmptyValue: false
        explode: true
        schema:
          type: array
          items:
            type: string
          enum:
          - group_id
          - label
          - options
      requestBody:
        $ref: '#/components/requestBodies/UpdateCustomFieldMetaDataRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomFieldMetaData'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/opportunities/stages:
    get:
      tags:
      - Opportunity
      summary: List of Opportunity Stages
      description: Retrieves a list of Opportunity Stages.
      operationId: listOpportunityStages
      parameters:
      - name: filter
        in: query
        description: Search filter to apply to results
        required: false
        schema:
          type: string
      - name: order_by
        in: query
        description: |-
          Attribute and direction to order stage items.
          One of the following fields:
          - `stage_order`

          One of the following directions:
          - `asc`
          - `desc`
        required: false
        schema:
          type: string
      - name: page_size
        in: query
        description: Total number of items to return per page
        required: false
        example: 0
        schema:
          type: integer
          format: int32
          minimum: 1
          maximum: 1000
          exclusiveMinimum: false
          exclusiveMaximum: false
      - name: page_token
        in: query
        description: Page token
        required: false
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOpportunityStagesResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    post:
      tags:
      - Opportunity
      summary: Create an Opportunity Stage
      description: Creates a new Opportunity Stage
      operationId: createOpportunityStage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOpportunityStageRequest'
        description: opportunity
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestOpportunityStage'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/opportunities/stages/{stage_id}:
    get:
      tags:
      - Opportunity
      summary: Retrieve an Opportunity Stage
      description: Retrieves the specified Opportunity Stage
      operationId: getOpportunityStage
      parameters:
      - name: stage_id
        in: path
        description: stage_id
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestOpportunityStage'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    delete:
      tags:
      - Opportunity
      summary: Delete an Opportunity Stage
      description: Deletes the specified Opportunity Stage
      operationId: deleteOpportunityStage
      parameters:
      - name: stage_id
        in: path
        description: stage_id
        required: true
        schema:
          type: string
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    patch:
      tags:
      - Opportunity
      summary: Update an Opportunity Stage
      description: Updates specified values of a given Opportunity Stage
      operationId: updateOpportunityStage
      parameters:
      - name: stage_id
        in: path
        description: stage_id
        required: true
        schema:
          type: string
      - name: update_mask
        in: query
        description: An optional list of properties to be updated. If set, only the
          provided properties will be updated and others will be skipped.
        required: false
        allowEmptyValue: false
        explode: true
        schema:
          type: array
          items:
            type: string
          enum:
          - name
          - order
          - target_number_days
          - probability
          - checklist_items
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOpportunityStageRequest'
        description: request
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestOpportunityStage'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/opportunities/{opportunity_id}:
    get:
      tags:
      - Opportunity
      summary: Retrieve a Opportunity
      description: Retrieves the specified Opportunity
      operationId: getOpportunity
      parameters:
      - name: opportunity_id
        in: path
        description: opportunity_id
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestV2Opportunity'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    delete:
      tags:
      - Opportunity
      summary: Delete an Opportunity
      description: Deletes the specified Opportunity
      operationId: deleteOpportunity
      parameters:
      - name: opportunity_id
        in: path
        description: opportunity_id
        required: true
        schema:
          type: string
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    patch:
      tags:
      - Opportunity
      summary: Update an opportunity
      description: Updates specified values of a given opportunity
      operationId: updateOpportunity
      parameters:
      - name: opportunity_id
        in: path
        description: opportunity_id
        required: true
        schema:
          type: string
      - name: update_mask
        in: query
        description: An optional list of properties to be updated. If set, only the
          provided properties will be updated and others will be skipped.
        required: false
        allowEmptyValue: false
        explode: true
        schema:
          type: array
          items:
            type: string
          enum:
          - opportunity_title
          - next_action_time
          - next_action_notes
          - opportunity_notes
          - estimated_close_time
          - include_in_forecast
          - projected_revenue_low
          - projected_revenue_high
          - contact_id
          - stage_id
          - user_id
          - custom_fields
          - affiliate_id
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOpportunityRequestV2'
        description: request
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestV2Opportunity'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/orders/model:
    get:
      tags:
      - Orders
      summary: Retrieve Order Custom Field Model
      description: Gets the custom fields for the Order object
      operationId: retrieveOrderCustomFieldModel
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectModel'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/orders/model/customFields:
    post:
      tags:
      - Orders
      summary: Create an Order Custom Field
      description: Creates a custom field of the specified type and options to the
        Order object
      operationId: createOrderCustomField
      requestBody:
        $ref: '#/components/requestBodies/CreateCustomFieldRequest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomFieldMetaData'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/orders/model/customFields/{custom_field_id}:
    delete:
      tags:
      - Orders
      summary: Delete an Order Custom Field
      description: Deletes a Custom Field from the Order object
      operationId: deleteOrderCustomField
      parameters:
      - name: custom_field_id
        in: path
        description: custom_field_id
        required: true
        schema:
          type: string
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    patch:
      tags:
      - Orders
      summary: Update an Order Custom Field
      description: Updates a custom field of the specified type and options to the
        Order object
      operationId: updateOrderCustomField
      parameters:
      - name: custom_field_id
        in: path
        description: custom_field_id
        required: true
        schema:
          type: string
      - name: update_mask
        in: query
        description: An optional list of properties to be updated. If set, only the
          provided properties will be updated and others will be skipped.
        required: false
        allowEmptyValue: false
        explode: true
        schema:
          type: array
          items:
            type: string
          enum:
          - group_id
          - label
          - options
      requestBody:
        $ref: '#/components/requestBodies/UpdateCustomFieldMetaDataRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomFieldMetaData'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/paymentMethodConfigs:
    post:
      tags:
      - Payment Method Configs
      summary: Create Payment Method Configuration
      description: Creates configuration details for rendering payment method components
      operationId: createPaymentMethodConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePaymentMethodConfigRequest'
        description: request
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentMethodConfig'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/productCategories:
    get:
      tags:
      - Product Categories
      summary: List all Product Categories
      description: Retrieves a list of Product Categories
      operationId: listProductCategories
      parameters:
      - name: filter
        in: query
        description: |
          Filter to apply, allowed fields are:
          - (String) `product_id`

          You will need to apply the `==` operator to check the equality of one of the filters with your searched
          word, in the encoded form `%3D%3D`. For the filters listed above, here are some examples:
          - `filter=product_id%3D%3D29`
        required: false
        schema:
          type: string
      - name: order_by
        in: query
        description: |-
          Attribute and direction to order items.
          One of the following fields:
          - `id`

          One of the following directions:
          - `asc`
          - `desc`
        required: false
        schema:
          type: string
      - name: page_size
        in: query
        description: Total number of items to return per page
        required: false
        example: 0
        schema:
          type: integer
          format: int32
          minimum: 1
          maximum: 1000
          exclusiveMinimum: false
          exclusiveMaximum: false
      - name: page_token
        in: query
        description: Page token
        required: false
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListProductCategoriesResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    post:
      tags:
      - Product Categories
      summary: Create a Product Category
      description: Creates a new Product Category
      operationId: createProductCategory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProductCategoryRequest'
        description: productCategory
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCategory'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/productCategories/{category_id}:
    get:
      tags:
      - Product Categories
      summary: Get a Product Category
      description: Gets a single Product Category
      operationId: getProductCategory
      parameters:
      - name: category_id
        in: path
        description: category_id
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCategory'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    delete:
      tags:
      - Product Categories
      summary: Delete a Product Category
      description: Deletes the specified Product Category, its sub-categories, and
        removes products from it
      operationId: deleteProductCategory
      parameters:
      - name: category_id
        in: path
        description: category_id
        required: true
        schema:
          type: string
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    patch:
      tags:
      - Product Categories
      summary: Update a Product Category
      description: Updates a single Product Category
      operationId: updateProductCategory
      parameters:
      - name: category_id
        in: path
        description: category_id
        required: true
        schema:
          type: string
      - name: update_mask
        in: query
        description: An optional list of properties to be updated. If set, only the
          provided properties will be updated and others will be skipped.
        required: false
        allowEmptyValue: false
        explode: true
        schema:
          type: array
          items:
            type: string
          enum:
          - name
          - display_order_index
          - parent_category_id
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProductCategoryRequest'
        description: request
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCategory'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/productCategories/{category_id}/images:
    post:
      tags:
      - Product Categories
      summary: Create the product category image file
      description: Creates the product category image file and uploads it to the specified
        product category
      operationId: createImageFile
      parameters:
      - name: category_id
        in: path
        description: category_id
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/createImageFileUsingPOST'
      responses:
        '201':
          description: Created
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    delete:
      tags:
      - Product Categories
      summary: Delete the image from a product category
      description: Deletes the image from the specified product category
      operationId: deleteImageFile
      parameters:
      - name: category_id
        in: path
        description: category_id
        required: true
        schema:
          type: string
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/productCategories/{category_id}:assignProducts:
    post:
      tags:
      - Product Categories
      summary: Assign Products to a Product Category
      description: Assigns products to a Product Category
      operationId: assignProductsToCategory
      parameters:
      - name: category_id
        in: path
        description: category_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssignProductsRequest'
        description: request
        required: true
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/productInterestBundles:
    get:
      tags:
      - Product Interest Bundles
      summary: List Product Interest Bundles
      description: Retrieves a list of Product Interest Bundles
      operationId: listProductInterestBundles
      parameters:
      - name: filter
        in: query
        description: |
          Filter to apply, allowed fields are:
          - (String) `name`
        required: false
        schema:
          type: string
      - name: order_by
        in: query
        description: |
          Attribute and direction to order items.
          One of the following fields:
          - `name`

          One of the following directions:
          - `asc`
          - `desc`
        required: false
        schema:
          type: string
      - name: page_size
        in: query
        description: Total number of items to return per page
        required: false
        example: 0
        schema:
          type: integer
          format: int32
          minimum: 1
          maximum: 1000
          exclusiveMinimum: false
          exclusiveMaximum: false
      - name: page_token
        in: query
        description: Page token
        required: false
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListProductInterestBundleResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    post:
      tags:
      - Product Interest Bundles
      summary: Create a Product Interest Bundle
      description: Creates a new Product Interest Bundle.
      operationId: createProductInterestBundle
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProductInterestBundleRequest'
        description: createProductInterestBundleRequest
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductInterestBundle'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/productInterestBundles/{id}:
    get:
      tags:
      - Product Interest Bundles
      summary: Get a Product Interest Bundle
      description: Gets a single Product Interest Bundle.
      operationId: getProductInterestBundle
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductInterestBundle'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    delete:
      tags:
      - Product Interest Bundles
      summary: Delete a Product Interest Bundle
      description: Deletes an existing Product Interest Bundle.
      operationId: deleteProductInterestBundle
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: string
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    patch:
      tags:
      - Product Interest Bundles
      summary: Update a Product Interest Bundle
      description: Updates an existing Product Interest Bundle.
      operationId: updateProductInterestBundle
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: string
      - name: update_mask
        in: query
        description: An optional list of properties to be updated. If set, only the
          provided properties will be updated and others will be skipped.
        required: false
        allowEmptyValue: false
        explode: true
        schema:
          type: array
          items:
            type: string
          enum:
          - name
          - description
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProductInterestBundleRequest'
        description: updateProductInterestBundleRequest
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductInterestBundle'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/productInterestBundles/{id}/interests:
    post:
      tags:
      - Product Interest Bundles
      summary: Create a Product Interest in an existing Bundle
      description: Creates a new Product Interest in an existing Bundle.
      operationId: addProductInterest
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddProductInterestRequest'
        description: request
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductInterest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/productInterestBundles/{id}/interests/{interest_id}:
    delete:
      tags:
      - Product Interest Bundles
      summary: Delete a Product Interest from an existing Bundle
      description: Deletes an existing Product Interest from an existing Bundle.
      operationId: removeProductInterest
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: string
      - name: interest_id
        in: path
        description: interest_id
        required: true
        schema:
          type: string
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    patch:
      tags:
      - Product Interest Bundles
      summary: Update a Product Interest in an existing Bundle
      description: Updates an existing Product Interest in an existing Bundle.
      operationId: updateProductInterest
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: string
      - name: interest_id
        in: path
        description: interest_id
        required: true
        schema:
          type: string
      - name: update_mask
        in: query
        description: An optional list of properties to be updated. If set, only the
          provided properties will be updated and others will be skipped.
        required: false
        allowEmptyValue: false
        explode: true
        schema:
          type: array
          items:
            type: string
          enum:
          - quantity
          - price
          - discount_percent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProductInterestRequest'
        description: updateProductInterestRequest
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductInterest'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/products:
    get:
      tags:
      - Products
      summary: List Products
      description: Retrieves a list of Products
      operationId: listProducts
      parameters:
      - name: filter
        in: query
        description: |
          Filter to apply, allowed fields are:
          - (String) `name`
        required: false
        schema:
          type: string
      - name: order_by
        in: query
        description: |-
          Attribute and direction to order items.
          One of the following fields:
          - `name`

          One of the following directions:
          - `asc`
          - `desc`
        required: false
        schema:
          type: string
      - name: page_size
        in: query
        description: Total number of items to return per page
        required: false
        example: 0
        schema:
          type: integer
          format: int32
          minimum: 1
          maximum: 1000
          exclusiveMinimum: false
          exclusiveMaximum: false
      - name: page_token
        in: query
        description: Page token
        required: false
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListProductsResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    post:
      tags:
      - Products
      summary: Create a Product
      description: Creates a new product
      operationId: createProduct
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProductRequest'
        description: createProductRequest
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestV2Product'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/products/{product_id}:
    get:
      tags:
      - Products
      summary: Get a Product
      description: Gets a single Product
      operationId: getProduct
      parameters:
      - name: product_id
        in: path
        description: product_id
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestV2Product'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    delete:
      tags:
      - Products
      summary: Delete a Product
      description: Deletes a single product
      operationId: deleteProduct
      parameters:
      - name: product_id
        in: path
        description: product_id
        required: true
        schema:
          type: string
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    patch:
      tags:
      - Products
      summary: Update a Product
      description: Updates a product
      operationId: updateProduct
      parameters:
      - name: product_id
        in: path
        description: product_id
        required: true
        schema:
          type: string
      - name: update_mask
        in: query
        description: An optional list of properties to be updated. If set, only the
          provided properties will be updated and others will be skipped.
        required: false
        allowEmptyValue: false
        explode: true
        schema:
          type: array
          items:
            type: string
          enum:
          - active
          - name
          - description
          - price
          - sku
          - shippable
          - short_description
          - subscription_only
          - storefront_hidden
          - weight
          - taxable
          - country_taxable
          - city_taxable
          - state_taxable
          - inventory_limit
          - out_of_stock_enabled
          - email_for_inventory_notifications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProductRequest'
        description: updateProductRequest
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestV2Product'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/products/{product_id}/images:
    post:
      tags:
      - Products
      summary: Create the Product Image
      description: Creates the Product Image file and uploads it to the specified
        Product
      operationId: createProductImage
      parameters:
      - name: product_id
        in: path
        description: product_id
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/createImageFileUsingPOST'
      responses:
        '201':
          description: Created
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    delete:
      tags:
      - Products
      summary: Delete the Product Image
      description: Deletes the Product Image from the specified Product
      operationId: deleteProductImage
      parameters:
      - name: product_id
        in: path
        description: product_id
        required: true
        schema:
          type: string
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/products/{product_id}/subscriptions:
    get:
      tags:
      - Subscription Plans
      summary: List Subscription Plans
      description: Retrieves a list of Subscription Plans
      operationId: listSubscriptionPlans
      parameters:
      - name: filter
        in: query
        description: |
          Filter to apply, allowed fields are:
          - (Boolean) `active`: true or false
          - (BillingCycle) `cycle_type`: DAILY, WEEKLY, MONTHLY, YEARLY
          You will need to apply the `==` operator to check the equality of one of the filters with your searched
          word, in the encoded form `%3D%3D`. For the filters listed above, here are some examples:
          - `filter=active%3D%3Dtrue`
          - `filter=cycle_type%3D%3DDAILY`
          - `filter=active%3D%3Dfalse%3Bcycle_type%3D%3DWEEKLY`
        required: false
        schema:
          type: string
      - name: order_by
        in: query
        description: |
          Attribute and direction to order items.
          One of the following fields:
          - `id`
          - `product_id`

          One of the following directions:
          - `asc`
          - `desc`
        required: false
        schema:
          type: string
      - name: page_size
        in: query
        description: Total number of items to return per page
        required: false
        example: 0
        schema:
          type: integer
          format: int32
          minimum: 1
          maximum: 1000
          exclusiveMinimum: false
          exclusiveMaximum: false
      - name: page_token
        in: query
        description: Page token
        required: false
        schema:
          type: string
      - name: product_id
        in: path
        description: product_id
        required: true
        example: '''-'' can be used for a wildcard (/v2/products/-/subscriptions'
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSubscriptionPlansResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    post:
      tags:
      - Subscription Plans
      summary: Create Subscription Plan
      description: Creates a Subscription Plan
      operationId: createSubscriptionPlans
      parameters:
      - name: product_id
        in: path
        description: product_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSubscriptionPlanRequest'
        description: createSubscriptionPlanRequest
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionPlan'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/products/{product_id}/subscriptions/{subscription_plan_id}:
    get:
      tags:
      - Subscription Plans
      summary: Get Subscription Plan
      description: Retrieves a Subscription Plan
      operationId: fetchSubscriptionPlan
      parameters:
      - name: product_id
        in: path
        description: product_id
        required: true
        schema:
          type: string
      - name: subscription_plan_id
        in: path
        description: subscription_plan_id
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionPlan'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    delete:
      tags:
      - Subscription Plans
      summary: Delete Subscription Plan
      description: Deletes a Subscription Plan
      operationId: deleteSubscriptionPlan
      parameters:
      - name: product_id
        in: path
        description: product_id
        required: true
        schema:
          type: string
      - name: subscription_plan_id
        in: path
        description: subscription_plan_id
        required: true
        schema:
          type: string
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    patch:
      tags:
      - Subscription Plans
      summary: Update Subscription Plan
      description: Updates a Subscription Plan
      operationId: updateSubscriptionPlan
      parameters:
      - name: product_id
        in: path
        description: product_id
        required: true
        schema:
          type: string
      - name: subscription_plan_id
        in: path
        description: subscription_plan_id
        required: true
        schema:
          type: string
      - name: update_mask
        in: query
        description: An optional list of properties to be updated. If set, only the
          provided properties will be updated and others will be skipped.
        required: false
        allowEmptyValue: false
        explode: true
        schema:
          type: array
          items:
            type: string
          enum:
          - active
          - allow_prorating
          - cycle_type
          - display_order_index
          - frequency
          - plan_price
          - total_cycles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSubscriptionPlanRequest'
        description: updateSubscriptionPlanRequest
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionPlan'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/products/{product_id}:adjustInventory:
    post:
      tags:
      - Products
      summary: Adjust Inventory of a Product
      description: Increase or decrease the quantity of the Product
      operationId: adjustInventory
      parameters:
      - name: product_id
        in: path
        description: product_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProductInventoryRequest'
        description: updateProductInventoryRequest
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestV2Product'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/reporting/reports:
    get:
      tags:
      - Reporting
      summary: List Reports
      description: Retrieves a list of Reports as defined in the application (identified
        as Saved Search)<br/><span style='color:red'>Deprecated as of v2</span>
      operationId: listReports
      parameters:
      - name: filter
        in: query
        description: |
          Filter to apply, allowed fields are:
          - (String) `name`
          - (DateTime) `since_created_time`
          - (DateTime) `until_created_time`

          You will need to apply the `==` operator to check the equality of one of the filters with your searched
           word, in the encoded form `%3D%3D`. For the filters listed above, here are some examples:
          - `filter=given_name%3D%3DMary`
          - `filter=company_id%3D%3D123`
          - `filter=company_id%3D%3D123%3Bfamily_name%3D%3DSmith`
        required: false
        schema:
          type: string
      - name: order_by
        in: query
        description: |-
          Attribute and direction to order items.
          One of the following fields:
          - `name`
          - `created_time`

          One of the following directions:
          - `asc`
          - `desc`
        required: false
        schema:
          type: string
      - name: page_size
        in: query
        description: Total number of items to return per page
        required: false
        example: 0
        schema:
          type: integer
          format: int32
          minimum: 1
          maximum: 1000
          exclusiveMinimum: false
          exclusiveMaximum: false
      - name: page_token
        in: query
        description: Page token
        required: false
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListReportsResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/reporting/reports/{report_id}:
    get:
      tags:
      - Reporting
      summary: Retrieve Report
      description: Retrieves information about a Report as defined in the application
        (identified as Saved Search)<br/><span style='color:red'>Deprecated as of
        v2</span>
      operationId: retrieveReport
      parameters:
      - name: report_id
        in: path
        description: report_id
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/reporting/reports/{report_id}:run:
    post:
      tags:
      - Reporting
      summary: Run a Report
      description: Runs a report as defined in the application (identified as Saved
        Search)<br/><span style='color:red'>Deprecated as of v2</span>
      operationId: runReport
      parameters:
      - name: fields
        in: query
        description: Comma-separated list of fields to return (or do not supply a
          value to return all)
        required: false
        schema:
          type: string
      - name: order_by
        in: query
        description: Attribute and direction to order items by. E.g. `given_name desc`
        required: false
        schema:
          type: string
      - name: page_size
        in: query
        description: Total number of items to return per page
        required: false
        example: 0
        schema:
          type: integer
          format: int32
          minimum: 1
          maximum: 1000
          exclusiveMinimum: false
          exclusiveMaximum: false
          default: 1000
      - name: page_token
        in: query
        description: Representation of the last row retrieved from the previous page.
          An empty value implies a request for the first page.
        required: false
        schema:
          type: string
      - name: report_id
        in: path
        description: The unique identifier of the report (Saved Search) to execute
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportExecutionResult'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/sales/merchants/{id}:setDefault:
    post:
      tags:
      - Sales
      summary: Set default Merchant Account
      description: Sets the specified Merchant Account as the default Merchant Account.
      operationId: setMerchantGatewayAsDefault
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/settings/applications:getConfiguration:
    get:
      tags:
      - Settings
      summary: Get Application Configuration
      description: Get configuration values for the application instance.
      operationId: getApplicationConfigurations
      parameters:
      - name: fields
        in: query
        description: By default, only application data is returned. In addition to
          that, data is returned for the fields that are mentioned in the query.
        required: false
        allowEmptyValue: false
        explode: true
        schema:
          type: array
          items:
            type: string
            enum:
            - AFFILIATE
            - APPOINTMENT
            - CONTACT
            - ECOMMERCE
            - EMAIL
            - FORMS
            - FULFILLMENT
            - INVOICE
            - NOTE
            - OPPORTUNITY
            - TASK
            - TEMPLATE
          enum:
          - AFFILIATE
          - APPOINTMENT
          - CONTACT
          - ECOMMERCE
          - EMAIL
          - FORMS
          - FULFILLMENT
          - INVOICE
          - NOTE
          - OPPORTUNITY
          - TASK
          - TEMPLATE
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSettingsResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/settings/applications:isEnabled:
    get:
      tags:
      - Settings
      summary: Get Application Status
      description: Check if the application is enabled or not
      operationId: isApplicationEnabled
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetApplicationEnabledStatusResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/settings/contactOptionTypes:
    get:
      tags:
      - Settings
      summary: Get Contact Option types
      description: Gets a list of Contact Option types.
      operationId: getContactOptionTypes
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetContactOptionTypesResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/shipping:
    get:
      tags:
      - Shipping
      summary: List Shipping methods
      description: Retrieves a list of Shipping methods
      operationId: listShippingMethods
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRestShippingMethodsResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/subscriptions:
    post:
      tags:
      - Subscriptions
      summary: Create Subscription
      description: Creates a subscription with the specified product and product subscription
        id.
      operationId: createSubscription
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSubscriptionRequest'
        description: request
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/subscriptions/model:
    get:
      tags:
      - Subscriptions
      summary: Retrieve Subscription Custom Field Model
      description: Get the custom fields for the Subscription object
      operationId: retrieveSubscriptionCustomFieldModel
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectModel'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/subscriptions/model/customFields:
    post:
      tags:
      - Subscriptions
      summary: Create a Subscription Custom Field
      description: Creates a custom field of the specified type and options to the
        Subscription object
      operationId: createSubscriptionCustomField
      requestBody:
        $ref: '#/components/requestBodies/CreateCustomFieldRequest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomFieldMetaData'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/subscriptions/model/customFields/{custom_field_id}:
    delete:
      tags:
      - Subscriptions
      summary: Delete a Subscription Custom Field
      description: Deletes a custom field from the Subscription object
      operationId: deleteSubscriptionCustomField
      parameters:
      - name: custom_field_id
        in: path
        description: custom_field_id
        required: true
        schema:
          type: string
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    patch:
      tags:
      - Subscriptions
      summary: Update a Subscription Custom Field
      description: Updates a custom field of the specified type and options to the
        Subscription object
      operationId: updateSubscriptionCustomField
      parameters:
      - name: custom_field_id
        in: path
        description: custom_field_id
        required: true
        schema:
          type: string
      - name: update_mask
        in: query
        description: An optional list of properties to be updated. If set, only the
          provided properties will be updated and others will be skipped.
        required: false
        allowEmptyValue: false
        explode: true
        schema:
          type: array
          items:
            type: string
          enum:
          - group_id
          - label
          - options
      requestBody:
        $ref: '#/components/requestBodies/UpdateCustomFieldMetaDataRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomFieldMetaData'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/tags:
    get:
      tags:
      - Tags
      summary: List Tags
      description: |-
        Retrieves a list of Tags defined in the application
        To search for `null` or empty fields use `filter==NONE`
      operationId: listTags
      parameters:
      - name: filter
        in: query
        description: |-
          Filter to apply, allowed fields are:

          - (String) `name`
          - (String) `description`
          - (String) `category_id`
          - (String) `since_create_time`
          - (String) `until_create_time`
          - (String) `since_update_time`
          - (String) `until_update_time`

          You will need to apply the `==` operator to check the equality of one of the filters with your searched
          word, in the encoded form `%3D%3D`. If NONE is passed in for `category_id` or `description`, it will check
          for the non-existence of that field. For the filters listed above, here are some examples:

          - `filter=name%3D%3Dmy-tag`
          - `filter=category_id%3D%3DNONE`
          - `filter=description%3D%3DNONE`
          - `filter=since_create_time%3D%3D2024-12-22T01:00:00.000Z;until_create_time%3D%3D2025-01-01T00:00:00.000Z;`
        required: false
        schema:
          type: string
      - name: order_by
        in: query
        description: |-
          Attribute and direction to order items.
          One of the following fields:

          - `name`
          - `create_time`
          - `update_time`

          One of the following directions:
          - `asc`
          - `desc`
        required: false
        schema:
          type: string
      - name: page_size
        in: query
        description: Total number of items to return per page
        required: false
        example: 0
        schema:
          type: integer
          format: int32
          minimum: 1
          maximum: 1000
          exclusiveMinimum: false
          exclusiveMaximum: false
      - name: page_token
        in: query
        description: Page token
        required: false
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    post:
      tags:
      - Tags
      summary: Create Tag
      description: Creates a new Tag
      operationId: createTag
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUpdateTagRequest'
        description: tag
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/tags/categories:
    get:
      tags:
      - Tags
      summary: List Tag Categories
      description: |-
        Retrieves a list of defined Tag Categories
        To search for `null` or empty fields use `filter==NONE`
      operationId: listTagCategories
      parameters:
      - name: filter
        in: query
        description: Search filter to apply to results
        required: false
        schema:
          type: string
      - name: order_by
        in: query
        description: Attribute and direction to order items by. E.g. `given_name desc`
        required: false
        schema:
          type: string
      - name: page_size
        in: query
        description: Total number of items to return per page
        required: false
        example: 0
        schema:
          type: integer
          format: int32
          minimum: 1
          maximum: 1000
          exclusiveMinimum: false
          exclusiveMaximum: false
      - name: page_token
        in: query
        description: Page token
        required: false
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagCategoriesResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    post:
      tags:
      - Tags
      summary: Create Tag Category
      description: Creates a new Tag Category.
      operationId: createTagCategory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUpdateTagCategoryRequest'
        description: request
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/tags/categories/{tag_category_id}:
    get:
      tags:
      - Tags
      summary: Retrieve a Tag Category
      description: Returns information about the specified Tag Category
      operationId: getCategory
      parameters:
      - name: tag_category_id
        in: path
        description: tag_category_id
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTagCategoryResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    delete:
      tags:
      - Tags
      summary: Delete Tag Category
      description: Deletes the specified Tag Category
      operationId: deleteTagCategory
      parameters:
      - name: tag_category_id
        in: path
        description: tag_category_id
        required: true
        schema:
          type: string
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    patch:
      tags:
      - Tags
      summary: Update a Tag Category
      description: Updates a Tag Category with only the values provided in the request
      operationId: updateTagCategory
      parameters:
      - name: tag_category_id
        in: path
        description: tag_category_id
        required: true
        schema:
          type: string
      - name: update_mask
        in: query
        description: An optional list of properties to be updated. If set, only the
          provided properties will be updated and others will be skipped.
        required: false
        allowEmptyValue: false
        explode: true
        schema:
          type: array
          items:
            type: string
          enum:
          - name
          - description
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUpdateTagCategoryRequest'
        description: tagCategory
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateTagCategoryResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/tags/{tag_id}:
    get:
      tags:
      - Tags
      summary: Retrieve a Tag
      description: Retrieves information about the specified Tag
      operationId: getTag
      parameters:
      - name: tag_id
        in: path
        description: tag_id
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    delete:
      tags:
      - Tags
      summary: Delete Tag
      description: Deletes a Tag.
      operationId: deleteTag
      parameters:
      - name: tag_id
        in: path
        description: tag_id
        required: true
        schema:
          type: string
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    patch:
      tags:
      - Tags
      summary: Update a Tag
      description: Updates a Tag with only the values provided in the request
      operationId: updateTag
      parameters:
      - name: tag_id
        in: path
        description: tag_id
        required: true
        schema:
          type: string
      - name: update_mask
        in: query
        description: An optional list of properties to be updated. If set, only the
          provided properties will be updated and others will be skipped.
        required: false
        allowEmptyValue: false
        explode: true
        schema:
          type: array
          items:
            type: string
          enum:
          - name
          - description
          - category
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUpdateTagRequest'
        description: tag
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateTagResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/tags/{tag_id}/companies:
    get:
      tags:
      - Tags
      summary: List Tagged Companies
      description: |-
        Retrieves a list of Companies that have the given Tag applied.
        To search for `null` or empty fields use `filter==NONE`
      operationId: listCompaniesForTagId
      parameters:
      - name: filter
        in: query
        description: |
          Filter to apply, allowed fields are:
          - (String) `company_name`
          - (String) `email`
          - (String) `since_time`
          - (String) `until_time`
          You will need to apply the `==` operator to check the equality of one of the filters with your searched
          word, in the encoded form `%3D%3D`. For the filters listed above, here are some examples:
          - `filter=company_name%3D%3DCompany`
          - `filter=email%3D%3Dtest@gmail.com`
          - `filter=since_time%3D%3D2025-04-16T20:33:02.321Z;`
          - `filter=until_time%3D%3D2025-08-16T20:33:02.321Z;`
        required: false
        schema:
          type: string
      - name: order_by
        in: query
        description: |-
          Attribute and direction to order items.
          One of the following fields:
          - `id`
          - `create_time`
          - `name`
          - `email`

          One of the following directions:
          - `asc`
          - `desc`
        required: false
        schema:
          type: string
      - name: page_size
        in: query
        description: Total number of items to return per page
        required: false
        example: 0
        schema:
          type: integer
          format: int32
          minimum: 1
          maximum: 1000
          exclusiveMinimum: false
          exclusiveMaximum: false
      - name: page_token
        in: query
        description: Page token
        required: false
        schema:
          type: string
      - name: tag_id
        in: path
        description: tag_id
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTaggedCompaniesResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/tags/{tag_id}/contacts:
    get:
      tags:
      - Tags
      summary: List Tagged Contacts
      description: |-
        Retrieves a list of Contacts with the specified Tag
        To search for `null` or empty fields use `filter==NONE`
      operationId: listContactsWithTagId
      parameters:
      - name: filter
        in: query
        description: Search filter to apply to results
        required: false
        schema:
          type: string
      - name: order_by
        in: query
        description: Attribute and direction to order items by. E.g. `given_name desc`
        required: false
        schema:
          type: string
      - name: page_size
        in: query
        description: Total number of items to return per page
        required: false
        example: 0
        schema:
          type: integer
          format: int32
          minimum: 1
          maximum: 1000
          exclusiveMinimum: false
          exclusiveMaximum: false
      - name: page_token
        in: query
        description: Page token
        required: false
        schema:
          type: string
      - name: tag_id
        in: path
        description: tag_id
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTaggedContactsResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/tags/{tag_id}/contacts:applyTags:
    post:
      tags:
      - Tags
      summary: Apply Tag
      description: Applies a Tag to a list of Contacts.
      operationId: applyTags
      parameters:
      - name: tag_id
        in: path
        description: tag_id
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/ApplyRemoveTagRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplyTagsResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/tags/{tag_id}/contacts:removeTags:
    post:
      tags:
      - Tags
      summary: Remove Tags
      description: Removes a Tag from a list of Contacts.
      operationId: removeTags
      parameters:
      - name: tag_id
        in: path
        description: tag_id
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/ApplyRemoveTagRequest'
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/tasks:
    get:
      tags:
      - Task
      summary: List Tasks
      description: Retrieves a list of tasks based on the provided filter. Tasks which
        are not assigned to a User may be queried with user_id==UNASSIGNED.
      operationId: listTasks
      parameters:
      - name: filter
        in: query
        description: |
          Filter to apply, allowed fields are:
          - (String) `contact_id`
          - (String) `has_due_date`
          - (String) `is_completed`
          - (String) `user_id`
          - (String) `task_ids`
          - (String) `since_time`
          - (String) `until_time`
          You will need to apply the `==` operator to check the equality of one of the filters with your searched
          word, in the encoded form `%3D%3D`. For the filters listed above, here are some examples:
          - `filter=contact_id%3D%3D123`
          - `filter=has_due_date%3D%3Dtrue`
          - `filter=is_completed%3D%3Dtrue`
          - `filter=user_id%3D%3D321`
          - `filter=task_ids%3D%3D1,2,3`
          - `filter=since_time%3D%3D2025-04-16T20:33:02.321Z;`
          - `filter=until_time%3D%3D2025-08-16T20:33:02.321Z;`
        required: false
        schema:
          type: string
      - name: order_by
        in: query
        description: |-
          Attribute and direction to order items.
          One of the following fields:
          - `id`
          - `create_time`
          - `due_time`

          One of the following directions:
          - `asc`
          - `desc`
        required: false
        schema:
          type: string
      - name: page_size
        in: query
        description: Total number of items to return per page
        required: false
        example: 0
        schema:
          type: integer
          format: int32
          minimum: 1
          maximum: 1000
          exclusiveMinimum: false
          exclusiveMaximum: false
      - name: page_token
        in: query
        description: Page token
        required: false
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTasksResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    post:
      tags:
      - Task
      summary: Create a Task
      description: "Creates a new task as the authenticated user.  \nThis endpoint\
        \ does not currently support setting Custom Field values."
      operationId: createTask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTaskRequest'
        description: task
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/tasks/model:
    get:
      tags:
      - Task
      summary: Retrieve Task Model
      description: 'Get the custom fields for the Task object<br/>Note: Custom Fields
        for Tasks, Classic Appointments and Notes are combined.'
      operationId: retrieveTaskModel
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObjectModel'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/tasks/model/customFields:
    post:
      tags:
      - Task
      summary: Create a Custom Field
      description: 'Creates a custom field of the specified type and options to the
        Task object<br/>Note: Custom Fields for Tasks, Classic Appointments and Notes
        are combined.'
      operationId: createTaskCustomField
      requestBody:
        $ref: '#/components/requestBodies/CreateCustomFieldRequest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateCustomFieldResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/tasks/model/customFields/{custom_field_id}:
    delete:
      tags:
      - Task
      summary: Delete a Custom Field
      description: 'Deletes a Custom Field from the Task object<br/>Note: Custom Fields
        for Tasks, Classic Appointments and Notes are combined.'
      operationId: deleteTaskCustomField
      parameters:
      - name: custom_field_id
        in: path
        description: custom_field_id
        required: true
        schema:
          type: string
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    patch:
      tags:
      - Task
      summary: Update a Task's Custom Field
      description: 'Updates a custom field of the specified type and options to the
        Task object.<br/>Note: Custom Fields for Tasks, Classic Appointments and Notes
        are combined.'
      operationId: updateTaskCustomField
      parameters:
      - name: custom_field_id
        in: path
        description: custom_field_id
        required: true
        schema:
          type: string
      - name: update_mask
        in: query
        description: An optional list of properties to be updated. If set, only the
          provided properties will be updated and others will be skipped.
        required: false
        allowEmptyValue: false
        explode: true
        schema:
          type: array
          items:
            type: string
          enum:
          - group_id
          - label
          - options
      requestBody:
        $ref: '#/components/requestBodies/UpdateCustomFieldMetaDataRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomFieldMetaData'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/tasks/{task_id}:
    get:
      tags:
      - Task
      summary: Retrieve a Task
      description: Retrieves a single task
      operationId: getTask
      parameters:
      - name: task_id
        in: path
        description: task_id
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    delete:
      tags:
      - Task
      summary: Delete a Task
      description: Deletes a single task
      operationId: deleteTask
      parameters:
      - name: task_id
        in: path
        description: task_id
        required: true
        schema:
          type: string
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
    patch:
      tags:
      - Task
      summary: Update a Task
      description: "Updates a task with only the values provided in the request. \n\
        This endpoint does not currently support updating Custom Field values."
      operationId: updateTask
      parameters:
      - name: task_id
        in: path
        description: task_id
        required: true
        schema:
          type: string
      - name: update_mask
        in: query
        description: An optional list of properties to be updated. If set, only the
          provided properties will be updated and others will be skipped.
        required: false
        allowEmptyValue: false
        explode: true
        schema:
          type: array
          items:
            type: string
          enum:
          - id
          - title
          - description
          - type
          - priority
          - completion_time
          - due_time
          - remind_time_mins
          - assigned_to_user_id
          - contact_id
          - completed
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUpdateTaskRequest'
        description: task
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateTaskResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
  /v2/users:
    get:
      tags:
      - Users
      summary: List Users
      description: Retrieves a list of users
      operationId: listPaginatedUsers
      parameters:
      - name: filter
        in: query
        description: |
          Filter to apply, allowed fields are:
          - (String) `email`
          - (String) `given_name`
          - (Boolean) `include_inactive`
          - (Boolean) `include_partners`
          - (Set[String]) `user_ids`

          You will need to apply the `==` operator to check the equality of one of the filters with your searched
          word, in the encoded form `%3D%3D`.
          For the filters listed above, here are some examples:
          - `filter=given_name%3D%3DMary`
          - `filter=user_ids%3D%3D123%3Bgiven_name%3D%3DSmith`
        required: false
        schema:
          type: string
      - name: order_by
        in: query
        description: |-
          Attribute and direction to order items.
          One of the following fields:
          - `date_created`
          - `email`

          One of the following directions:
          - `asc`
          - `desc`
        required: false
        schema:
          type: string
      - name: page_size
        in: query
        description: Total number of items to return per page
        required: false
        example: 10
        schema:
          type: integer
          format: int32
          minimum: 1
          maximum: 100
          exclusiveMinimum: false
          exclusiveMaximum: false
      - name: page_token
        in: query
        description: Page token
        required: false
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListUsersPaginatedResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      deprecated: false
servers:
- url: https://api.keap.com/crm/rest
components:
  requestBodies:
    createImageFileUsingPOST:
      content:
        multipart/form-data:
          schema:
            type: object
            properties:
              file:
                description: File to upload
                type: string
                format: binary
            required:
            - file
      required: true
    CreateUpdateContactRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateUpdateContactRequest'
      description: contact
    LinkContactsRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LinkContactsRequest'
      description: linkContactsRequest
      required: true
    CreateCustomFieldRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateCustomFieldRequest'
      description: customField
      required: true
    UpdateCustomFieldMetaDataRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateCustomFieldMetaDataRequest'
      description: request
      required: true
    CreateOrUpdateAffiliateLinkRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateOrUpdateAffiliateLinkRequest'
      description: request
      required: true
    ApplyRemoveTagRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApplyRemoveTagRequest'
      description: applyRemoveTagRequest
      required: true
  securitySchemes:
    oauth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.infusionsoft.com/app/oauth/authorize
          tokenUrl: https://api.infusionsoft.com/token
          scopes: {
            }
  schemas:
    AddContactsToSequenceRequest:
      type: object
      properties:
        contact_ids:
          type: array
          items:
            type: string
      title: AddContactsToSequenceRequest
    AddContactsToSequenceResponse:
      type: object
      properties:
        add_to_sequence_results:
          type: object
          additionalProperties:
            type: string
      title: AddContactsToSequenceResponse
    AddProductInterestRequest:
      type: object
      required:
      - entity_id
      - price
      - type
      properties:
        discount_percent:
          type: integer
          format: int32
          description: Defaults to `0`.
        entity_id:
          type: string
          description: |
            The `product_id` (when the `type` is set to `PRODUCT`)
             or the `subscription_plan_id` (when the `type` is set to `SUBSCRIPTION_PLAN`).
        price:
          type: number
          format: double
        quantity:
          type: integer
          format: int32
          description: Defaults to `1`.
        type:
          type: string
          enum:
          - PRODUCT
          - SUBSCRIPTION_PLAN
      title: AddProductInterestRequest
    AddToAutomationSequenceRequest:
      type: object
      properties:
        contact_ids:
          type: array
          items:
            type: string
      title: AddToAutomationSequenceRequest
    AddToAutomationSequenceResponse:
      type: object
      properties:
        add_to_automation_sequence_results:
          type: object
          additionalProperties:
            type: string
      title: AddToAutomationSequenceResponse
    Address:
      type: object
      properties:
        country:
          type: string
          example: United States of America
          description: The long-name descriptive version of the Country Code
        country_code:
          type: string
          example: USA
          description: An ISO 3166-2 Country Code (https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3)
        field:
          type: string
          enum:
          - ADDRESS_FIELD_UNSPECIFIED
          - BILLING
          - SHIPPING
          - OTHER
        line1:
          type: string
        line2:
          type: string
        locality:
          type: string
          example: Phoenix
          description: The municipality to which the address belongs
        postal_code:
          type: string
        region:
          type: string
          example: Arizona
          description: The long-name descriptive version of the Region Code
        region_code:
          type: string
          example: US-AZ
          description: An ISO 3166-2 Province Code, such as one of the US States (https://en.wikipedia.org/wiki/ISO_3166-2:US)
        zip_code:
          type: string
        zip_four:
          type: string
      title: Address
    AddressInformation:
      type: object
      properties:
        company:
          type: string
        country_code:
          type: string
        first_name:
          type: string
        is_invoice_to_company:
          type: boolean
        last_name:
          type: string
        line1:
          type: string
        line2:
          type: string
        locality:
          type: string
        middle_name:
          type: string
        phone:
          type: string
        region:
          type: string
        zip_code:
          type: string
        zip_four:
          type: string
      title: AddressInformation
    AffiliateAddToProgramRequest:
      type: object
      properties:
        affiliate_program_id:
          type: string
      title: AffiliateAddToProgramRequest
    AffiliateCommission:
      type: object
      properties:
        aff_owed_id:
          type: integer
          format: int64
        amount_earned:
          type: number
          format: float
        contact_first_name:
          type: string
        contact_id:
          type: integer
          format: int64
        contact_last_name:
          type: string
        date_earned:
          type: string
          format: date-time
        description:
          type: string
        invoice_id:
          type: integer
          format: int64
        product_name:
          type: string
        sales_affiliate_id:
          type: integer
          format: int64
        sold_by_first_name:
          type: string
        sold_by_last_name:
          type: string
      title: AffiliateCommission
    AffiliateCommissionEarned:
      type: object
      properties:
        affiliate_commission_total:
          type: number
          format: double
        view_ledger_url:
          type: string
      title: AffiliateCommissionEarned
    AffiliateCommissionProgramResponse:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        notes:
          type: string
        priority:
          type: integer
          format: int32
      title: AffiliateCommissionProgramResponse
    AffiliateLink:
      type: object
      properties:
        affiliate_id:
          type: string
        date_created:
          type: string
        id:
          type: string
        local_url_code:
          type: string
        name:
          type: string
        program_ids:
          type: array
          items:
            type: string
        redirect_url:
          type: string
      title: AffiliateLink
    AffiliateProgramV2:
      type: object
      properties:
        affiliate_id:
          type: string
          example: 123
          description: The affiliate_Id for Affiliate commission program
        create_time:
          type: string
          example: '2019-08-24T14:15:22Z'
          description: The created time of affiliate commission program
        default_commission:
          $ref: '#/components/schemas/DefaultCommission'
        id:
          type: string
          example: 1
          description: The affiliate commission program name
        name:
          type: string
          example: commission program
          description: The affiliate commission program name
        notes:
          type: string
          example: notes for the commission program
          description: The affiliate commission program notes
        priority:
          type: string
          example: 0
          description: The Affiliate commission program priority
        product_commissions:
          type: array
          items:
            $ref: '#/components/schemas/ProductCommission'
        subscription_commissions:
          type: array
          items:
            $ref: '#/components/schemas/SubscriptionCommission'
      title: AffiliateProgramV2
    AffiliateRemoveFromProgramRequest:
      type: object
      properties:
        affiliate_program_id:
          type: string
      title: AffiliateRemoveFromProgramRequest
    AffiliateSummaryRecord:
      type: object
      properties:
        affiliateId:
          type: integer
          format: int64
        amountEarned:
          type: number
          format: double
        balance:
          type: number
          format: double
        clawbacks:
          type: number
          format: double
      title: AffiliateSummaryRecord
    ApplicationCompany:
      type: object
      properties:
        caller_id_number:
          type: string
        city:
          type: string
        country:
          type: string
        email:
          type: string
        name:
          type: string
        phone:
          type: string
        phone_ext:
          type: string
        state:
          type: string
        street_address_1:
          type: string
        street_address_2:
          type: string
        web_logo_url:
          type: string
        website:
          type: string
        zip:
          type: string
      title: ApplicationCompany
    ApplicationConfigurationModuleAffiliate:
      type: object
      properties:
        choose_affiliate:
          type: boolean
        commission:
          $ref: '#/components/schemas/ApplicationConfigurationModuleAffiliateCommission'
        custom_affiliate_url:
          type: string
        display_affiliate_ip_address:
          type: boolean
        do_not_notify_affiliate:
          type: boolean
        skip_pay_if_unused:
          type: boolean
        use_referral_history_if_no_tracking_cookie:
          type: boolean
      title: ApplicationConfigurationModuleAffiliate
    ApplicationConfigurationModuleAffiliateCommission:
      type: object
      properties:
        calculation_type:
          type: string
        levels:
          type: integer
          format: int32
        participant_types:
          type: string
      title: ApplicationConfigurationModuleAffiliateCommission
    ApplicationConfigurationModuleApplication:
      type: object
      properties:
        company:
          $ref: '#/components/schemas/ApplicationCompany'
        default_view_locale:
          type: string
        features_enabled:
          $ref: '#/components/schemas/ApplicationFeaturesEnabled'
        time_zone:
          type: string
      title: ApplicationConfigurationModuleApplication
    ApplicationConfigurationModuleAppointment:
      type: object
      properties:
        appointment_types:
          type: string
        share_opportunity_with_related_user:
          type: boolean
      title: ApplicationConfigurationModuleAppointment
    ApplicationConfigurationModuleContact:
      type: object
      properties:
        address_labels:
          $ref: '#/components/schemas/ApplicationConfigurationModuleContactAddressLabels'
        contact_types:
          type: string
        default_new_contact_form:
          type: string
        disable_contact_edit_in_client_login:
          type: boolean
        fax_types:
          type: string
        phone_types:
          type: string
        suffix_types:
          type: string
        title_types:
          type: string
      title: ApplicationConfigurationModuleContact
    ApplicationConfigurationModuleContactAddressLabels:
      type: object
      properties:
        line_1:
          type: string
        line_2:
          type: string
        line_3:
          type: string
      title: ApplicationConfigurationModuleContactAddressLabels
    ApplicationConfigurationModuleEcommerce:
      type: object
      properties:
        credit_card_types:
          type: string
        currency:
          type: string
        default_charge_max_retry_attempts:
          type: integer
          format: int32
        default_country:
          type: string
        default_merchant:
          type: string
        default_number_of_days_between_charge_attempts:
          type: integer
          format: int32
        default_tax:
          type: string
        default_to_auto_charge:
          type: boolean
        merchant_account_max_retry_attempts:
          type: integer
          format: int32
        payment_types:
          type: string
        promo_codes:
          type: string
        track_cost_per_unit:
          type: boolean
        track_inventory:
          type: boolean
      title: ApplicationConfigurationModuleEcommerce
    ApplicationConfigurationModuleEmail:
      type: object
      properties:
        append_contact_key_to_links:
          type: boolean
        default_opt_in_link:
          type: string
        default_opt_out_link:
          type: string
        hide_emails_to_and_from_domains:
          type: string
        whitelisted_domains:
          type: string
      title: ApplicationConfigurationModuleEmail
    ApplicationConfigurationModuleForms:
      type: object
      properties:
        spam_filters_enabled:
          type: boolean
      title: ApplicationConfigurationModuleForms
    ApplicationConfigurationModuleFulfillment:
      type: object
      properties:
        default_message_fields:
          type: string
        default_message_to:
          type: string
      title: ApplicationConfigurationModuleFulfillment
    ApplicationConfigurationModuleInvoice:
      type: object
      properties:
        tax_label:
          type: string
      title: ApplicationConfigurationModuleInvoice
    ApplicationConfigurationModuleNote:
      type: object
      properties:
        appointment_types:
          type: string
        share_opportunity_with_related_user:
          type: boolean
      title: ApplicationConfigurationModuleNote
    ApplicationConfigurationModuleOpportunity:
      type: object
      properties:
        default_stage:
          type: string
        states:
          $ref: '#/components/schemas/ApplicationConfigurationModuleOpportunityStates'
      title: ApplicationConfigurationModuleOpportunity
    ApplicationConfigurationModuleOpportunityStates:
      type: object
      properties:
        active:
          $ref: '#/components/schemas/ApplicationConfigurationModuleOpportunityStatesActive'
        loss:
          $ref: '#/components/schemas/ApplicationConfigurationModuleOpportunityStatesLoss'
        win:
          $ref: '#/components/schemas/ApplicationConfigurationModuleOpportunityStatesWin'
      title: ApplicationConfigurationModuleOpportunityStates
    ApplicationConfigurationModuleOpportunityStatesActive:
      type: object
      properties:
        stages:
          type: string
      title: ApplicationConfigurationModuleOpportunityStatesActive
    ApplicationConfigurationModuleOpportunityStatesLoss:
      type: object
      properties:
        reasons:
          type: string
        stage:
          type: string
      title: ApplicationConfigurationModuleOpportunityStatesLoss
    ApplicationConfigurationModuleOpportunityStatesWin:
      type: object
      properties:
        reasons:
          type: string
        stage:
          type: string
      title: ApplicationConfigurationModuleOpportunityStatesWin
    ApplicationConfigurationModuleTask:
      type: object
      properties:
        appointment_types:
          type: string
        share_opportunity_with_related_user:
          type: boolean
      title: ApplicationConfigurationModuleTask
    ApplicationConfigurationModuleTemplate:
      type: object
      properties:
        default_country_code:
          type: integer
          format: int32
        default_user_id:
          type: string
      title: ApplicationConfigurationModuleTemplate
    ApplicationFeaturesEnabled:
      type: object
      properties:
        marketing:
          type: boolean
      title: ApplicationFeaturesEnabled
    ApplyRemoveTagRequest:
      type: object
      required:
      - contact_ids
      properties:
        contact_ids:
          type: array
          items:
            type: string
      title: ApplyRemoveTagRequest
    ApplyTagsResponse:
      type: object
      properties:
        results:
          type: object
          additionalProperties:
            type: string
      title: ApplyTagsResponse
    AssignAutomationCategoryRequest:
      type: object
      properties:
        apply_category:
          type: boolean
        automation_ids:
          type: array
          items:
            type: string
        category_ids:
          type: array
          items:
            type: string
      title: AssignAutomationCategoryRequest
    AssignProductsRequest:
      type: object
      required:
      - product_ids
      properties:
        product_ids:
          type: array
          items:
            type: string
      title: AssignProductsRequest
    Automation:
      type: object
      properties:
        active_contacts:
          type: integer
          format: int32
        categories:
          type: array
          items:
            type: string
        current_edit_lock_status:
          $ref: '#/components/schemas/AutomationLockStatus'
        error_message:
          type: string
        id:
          type: string
        locked:
          type: boolean
        published_by:
          type: string
        published_date:
          type: string
        published_timezone:
          type: string
        status:
          type: string
        title:
          type: string
      title: Automation
    AutomationCategory:
      type: object
      properties:
        automation_count:
          type: integer
          format: int64
        id:
          type: string
        name:
          type: string
      title: AutomationCategory
    AutomationLockStatus:
      type: object
      properties:
        locked:
          type: boolean
        user_firstname:
          type: string
        user_id:
          type: string
        user_name:
          type: string
      title: AutomationLockStatus
    BasicCompany:
      type: object
      properties:
        company_name:
          type: string
        id:
          type: string
      title: BasicCompany
    BasicContact:
      type: object
      properties:
        email:
          type: string
        family_name:
          type: string
        given_name:
          type: string
        id:
          type: string
      title: BasicContact
    BasicUser:
      type: object
      properties:
        email_address:
          type: string
        family_name:
          type: string
        given_name:
          type: string
        id:
          type: string
      title: BasicUser
    BusinessProfileAddressRequest:
      type: object
      required:
      - country_code
      - line1
      - line2
      - locality
      - postal_code
      - region
      properties:
        country_code:
          type: string
          example: USA
          description: An ISO 3166-1 Country Code (https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3)
        line1:
          type: string
        line2:
          type: string
        locality:
          type: string
          example: Phoenix
          description: The municipality to which the address belongs
        postal_code:
          type: string
        region:
          type: string
          example: Arizona
          description: The long-name descriptive version of the Region Code
      title: BusinessProfileAddressRequest
    BusinessProfileAddressResponse:
      type: object
      properties:
        country_code:
          type: string
          example: USA
          description: An ISO 3166-1 Country Code (https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3)
        line1:
          type: string
        line2:
          type: string
        locality:
          type: string
          example: Phoenix
          description: The municipality to which the address belongs
        postal_code:
          type: string
        region:
          type: string
          example: Arizona
          description: The long-name descriptive version of the Region Code
      title: BusinessProfileAddressResponse
    Campaign:
      type: object
      properties:
        active_contact_count:
          type: integer
          format: int32
        completed_contact_count:
          type: integer
          format: int32
        created_by_global_id:
          type: string
        date_created:
          type: string
        error_message:
          type: string
        goals:
          type: array
          items:
            $ref: '#/components/schemas/Goal'
        id:
          type: string
        locked:
          type: boolean
        name:
          type: string
        published_date:
          type: string
        published_status:
          type: boolean
        published_time_zone:
          type: string
        sequences:
          type: array
          items:
            $ref: '#/components/schemas/Sequence'
        time_zone:
          type: string
      title: Campaign
    CancelSubscriptionRequest:
      type: object
      properties:
        reason:
          type: string
      title: CancelSubscriptionRequest
    CardInfo:
      type: object
      properties:
        brand:
          type: string
        card_type:
          type: string
          enum:
          - CREDIT
          - DEBIT
          - PREPAID
          - ACH
        expiration_month:
          type: string
        expiration_year:
          type: string
        last_four:
          type: string
      title: CardInfo
    CategoryDiscount:
      type: object
      properties:
        apply_to_commissions:
          type: boolean
        criteria:
          type: array
          items:
            $ref: '#/components/schemas/DiscountCriteria'
        description:
          type: string
        discount_percent:
          type: number
          format: double
        id:
          type: string
        name:
          type: string
        product_categories:
          type: array
          items:
            type: string
      title: CategoryDiscount
    CategoryReference:
      type: object
      required:
      - id
      properties:
        id:
          type: string
          description: The unique identifier for the tag category
      title: CategoryReference
    CheckListItemDetails:
      type: object
      properties:
        description:
          type: string
        done_date:
          type: string
          format: date-time
        id:
          type: integer
          format: int64
        instance_id:
          type: integer
          format: int64
        item_order:
          type: integer
          format: int32
        required:
          type: boolean
      title: CheckListItemDetails
    ChecklistItem:
      type: object
      properties:
        description:
          type: string
        id:
          type: string
        order:
          type: integer
          format: int32
        required:
          type: boolean
      title: ChecklistItem
    Company:
      type: object
      properties:
        address:
          $ref: '#/components/schemas/Address'
        company_name:
          type: string
        create_time:
          type: string
        custom_fields:
          type: array
          items:
            $ref: '#/components/schemas/CustomFieldValue'
        email_address:
          $ref: '#/components/schemas/EmailAddress'
        fax_number:
          $ref: '#/components/schemas/FaxNumber'
        id:
          type: string
        notes:
          type: string
        phone_number:
          $ref: '#/components/schemas/PhoneNumber'
        update_time:
          type: string
        website:
          type: string
      title: Company
    Contact:
      type: object
      properties:
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/Address'
        anniversary_date:
          type: string
        birth_date:
          type: string
        company:
          $ref: '#/components/schemas/BasicCompany'
        contact_type:
          type: string
        create_time:
          type: string
        custom_fields:
          type: array
          items:
            $ref: '#/components/schemas/CustomFieldValue'
        email_addresses:
          type: array
          items:
            $ref: '#/components/schemas/EmailAddress'
        family_name:
          type: string
        fax_numbers:
          type: array
          items:
            $ref: '#/components/schemas/FaxNumber'
        given_name:
          type: string
        id:
          type: string
        job_title:
          type: string
        leadsource_id:
          type: string
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
        middle_name:
          type: string
        origin:
          $ref: '#/components/schemas/Origin'
        owner_id:
          type: string
        phone_numbers:
          type: array
          items:
            $ref: '#/components/schemas/PhoneNumber'
        preferred_locale:
          type: string
          example: en_US
        preferred_name:
          type: string
        prefix:
          type: string
        referral_code:
          type: string
        score_value:
          type: string
        social_accounts:
          type: array
          items:
            $ref: '#/components/schemas/SocialAccount'
        source_type:
          type: string
          enum:
          - SOURCE_TYPE_UNSPECIFIED
          - API
          - APPOINTMENT
          - FORM_API_HOSTED
          - FORM_API_INTERNAL
          - IMPORT
          - INTERNAL_FORM
          - LANDING_PAGE
          - MANUAL
          - OTHER
          - UNKNOWN
          - WEBFORM
        spouse_name:
          type: string
        suffix:
          type: string
        tag_ids:
          type: array
          items:
            type: string
        time_zone:
          type: string
        update_time:
          type: string
        utm_parameters:
          type: array
          items:
            $ref: '#/components/schemas/ContactUtmResponse'
        website:
          type: string
      title: Contact
    ContactLink:
      type: object
      properties:
        contact1_id:
          type: string
        contact2_id:
          type: string
        link_type_id:
          type: string
        link_type_name:
          type: string
      title: ContactLink
    ContactLinkType:
      type: object
      properties:
        create_time:
          type: string
        id:
          type: string
        max_links:
          type: integer
          format: int64
        name:
          type: string
      title: ContactLinkType
    ContactUtmResponse:
      type: object
      properties:
        dateCreated:
          type: string
          format: date-time
        firstTouch:
          type: boolean
        id:
          type: integer
          format: int64
        keapSourceId:
          type: string
        lastTouch:
          type: boolean
        utmCampaign:
          type: string
        utmContent:
          type: string
        utmMedium:
          type: string
        utmSource:
          type: string
        utmTerm:
          type: string
      title: ContactUtmResponse
    Country:
      type: object
      properties:
        codes:
          $ref: '#/components/schemas/CountryCodes'
        name:
          type: string
      title: Country
    CountryCodes:
      type: object
      properties:
        alpha2:
          type: string
        alpha3:
          type: string
      title: CountryCodes
    CreateAffiliateRequest:
      type: object
      required:
      - code
      - contact_id
      - status
      properties:
        code:
          type: string
          example: M123
          description: |-
            The Affiliate code which have some validations.
            1. The code should not have white spaces
            2. The code should starts with letters
            3. The code minimum 4 characters length
        contact_id:
          type: string
          example: 1
          description: The contactId identifier , Must be a positive number
        name:
          type: string
          example: Affiliate Name
          description: |-
            The Affiliate name will be derived from the Contact,
            when not explicitly provided
        status:
          type: string
          example: active
          description: The Affiliate Status
          enum:
          - ACTIVE
          - INACTIVE
      title: CreateAffiliateRequest
    CreateAutomationCategoryRequest:
      type: object
      properties:
        name:
          type: string
      title: CreateAutomationCategoryRequest
    CreateCategoryDiscountRequest:
      type: object
      required:
      - apply_to_commissions
      - discount_percent
      - name
      - product_category_ids
      properties:
        apply_to_commissions:
          type: boolean
        criteria:
          type: array
          items:
            $ref: '#/components/schemas/DiscountCriteria'
        description:
          type: string
        discount_percent:
          type: number
          format: double
          description: The discount percent. Must be greater than or equal to 0.
        name:
          type: string
        product_category_ids:
          type: array
          items:
            type: string
      title: CreateCategoryDiscountRequest
    CreateCommissionProgramRequest:
      type: object
      required:
      - name
      properties:
        name:
          type: string
          example: Fitness program
          description: The name of the Commission Program
        notes:
          type: string
          example: 20% default commission
          description: The notes of the Commission Program
        priority:
          type: integer
          format: int32
          example: 100
          description: The priority of the Commission Program
      title: CreateCommissionProgramRequest
    CreateCompanyRequest:
      type: object
      required:
      - company_name
      properties:
        address:
          $ref: '#/components/schemas/Address'
        company_name:
          type: string
        custom_fields:
          type: array
          items:
            $ref: '#/components/schemas/CustomFieldValue'
        email_address:
          $ref: '#/components/schemas/EmailAddress'
        fax_number:
          $ref: '#/components/schemas/FaxNumber'
        notes:
          type: string
        phone_number:
          $ref: '#/components/schemas/PhoneNumber'
        website:
          type: string
      title: CreateCompanyRequest
    CreateContactLinkTypeRequest:
      type: object
      properties:
        max_links:
          type: integer
          format: int64
        name:
          type: string
      title: CreateContactLinkTypeRequest
    CreateContactUtmPropertiesRequest:
      type: object
      required:
      - keap_source_id
      properties:
        keap_source_id:
          type: string
          example: 6088383224687662
          description: The formId
        utm_campaign:
          type: string
          example: spring_sale
          description: UTM campaign information
        utm_content:
          type: string
          example: textlink
          description: UTM content information
        utm_medium:
          type: string
          example: cpc
          description: UTM medium information
        utm_source:
          type: string
          example: google
          description: UTM source information
        utm_term:
          type: string
          example: financial_consulting
          description: UTM term information
      title: CreateContactUtmPropertiesRequest
    CreateCustomFieldOptionRequest:
      type: object
      properties:
        label:
          type: string
        options:
          type: array
          items:
            $ref: '#/components/schemas/CreateCustomFieldOptionRequest'
      title: CreateCustomFieldOptionRequest
    CreateCustomFieldRequest:
      type: object
      required:
      - field_type
      - label
      properties:
        field_type:
          type: string
          enum:
          - CURRENCY
          - DATE
          - DATE_TIME
          - DAY_OF_WEEK
          - DECIMAL_NUMBER
          - DRILLDOWN
          - DROPDOWN
          - EMAIL
          - LIST_BOX
          - MONTH
          - NAME
          - PERCENT
          - PHONE_NUMBER
          - RADIO
          - SOCIAL_SECURITY_NUMBER
          - STATE
          - TEXT
          - TEXT_AREA
          - USER
          - USER_LIST_BOX
          - WEBSITE
          - WHOLE_NUMBER
          - YEAR
          - YES_NO
        group_id:
          type: string
          description: An optional tab group to place the field under in the interface.  If
            not specified, will default to the 'Custom Fields' tab.
        label:
          type: string
        options:
          type: array
          items:
            $ref: '#/components/schemas/CreateCustomFieldOptionRequest'
        user_group_id:
          type: string
          description: An optional user group to choose from when selecting values
            for User or UserListBox fields.
      title: CreateCustomFieldRequest
    CreateCustomFieldResponse:
      type: object
      properties:
        custom_field:
          $ref: '#/components/schemas/CustomFieldMetaData'
      title: CreateCustomFieldResponse
    CreateDefaultCommissionProgramRequest:
      type: object
      properties:
        dollar_amount:
          type: string
        percentage:
          type: string
      title: CreateDefaultCommissionProgramRequest
    CreateEmailSentRequest:
      type: object
      required:
      - sent_to_address
      properties:
        clicked_time:
          type: string
        contact_id:
          type: string
        headers:
          type: string
        html_content:
          type: string
          description: Base64 encoded HTML
        opened_time:
          type: string
        original_provider:
          type: string
          description: Provider that sent the email, defaults to UNKNOWN
          enum:
          - UNKNOWN
          - INFUSIONSOFT
          - MICROSOFT
          - GOOGLE
        original_provider_id:
          type: string
          description: Provider id that sent the email, must be unique when combined
            with provider.  If omitted a UUID without dashes is autogenerated for
            the record.
        plain_content:
          type: string
          description: Base64 encoded text
        provider_source_id:
          type: string
          description: The email address of the synced email account that generated
            this message.
        received_time:
          type: string
        sent_from_address:
          type: string
        sent_from_reply_address:
          type: string
        sent_time:
          type: string
        sent_to_address:
          type: string
        sent_to_bcc_address_list:
          type: array
          items:
            type: string
        sent_to_cc_address_list:
          type: array
          items:
            type: string
        subject:
          type: string
      title: CreateEmailSentRequest
    CreateEmailsSentRequest:
      type: object
      properties:
        emails:
          type: array
          items:
            $ref: '#/components/schemas/CreateEmailSentRequest'
      title: CreateEmailsSentRequest
    CreateFreeTrialDiscountRequest:
      type: object
      required:
      - name
      - subscription_plan_id
      properties:
        criteria:
          type: array
          items:
            $ref: '#/components/schemas/DiscountCriteria'
        description:
          type: string
        free_trial_days:
          type: integer
          format: int32
          description: The number of free trial days. Must be a positive number. Defaults
            to 0.
        hide_price:
          type: boolean
        name:
          type: string
        subscription_plan_id:
          type: string
      title: CreateFreeTrialDiscountRequest
    CreateFunnelIntegrationRequest:
      type: object
      properties:
        base_url:
          type: string
          description: The base URL of the integration, that will be used to call
            the integration related REST endpoints.
        context:
          type: string
          description: The context of the integration, that will be used internally
            to identify the integration.
        enabled:
          type: boolean
          description: The flag to enable or disable the integration.
        funnel_integration_actions:
          type: array
          description: The list of actions that will be installed with the integration.
          items:
            $ref: '#/components/schemas/FunnelIntegrationAction'
        funnel_integration_triggers:
          type: array
          description: The list of triggers that will be installed with the integration.
          items:
            $ref: '#/components/schemas/FunnelIntegrationAction'
        name:
          type: string
          example: My Integration, MyIntegration, My 1 New Very Exciting Integration
          description: The name of the integration, that will be used internally to
            identify the integration.
      title: CreateFunnelIntegrationRequest
    CreateFunnelIntegrationTriggerEvents:
      type: object
      properties:
        funnel_integration_trigger_events:
          type: array
          description: A list of trigger events to be created.
          items:
            $ref: '#/components/schemas/FunnelIntegrationTriggerEventDTO'
      title: CreateFunnelIntegrationTriggerEvents
    CreateLeadSourceExpenseRequest:
      type: object
      properties:
        amount:
          type: integer
          format: int64
          description: The monthly cost of the lead source recurring expense. The
            value should be in the smallest unit of currency for your currency locale.
            For example, if your currency locale is USD, then the smallest unit of
            currency is in cents, $225.50 would be provided in the request as 22550.
        incurred_time:
          type: string
          description: The time that the lead source expense was incurred.
        notes:
          type: string
          description: The notes for the lead source expense
        title:
          type: string
          description: The title of the lead source expense
      title: CreateLeadSourceExpenseRequest
    CreateLeadSourceRecurringExpenseRequest:
      type: object
      properties:
        amount:
          type: integer
          format: int64
          description: The monthly cost of the lead source recurring expense. The
            value should be in the smallest unit of currency for your currency locale.
            For example, if your currency locale is USD, then the smallest unit of
            currency is in cents, $225.50 would be provided in the request as 22550.
        end_time:
          type: string
          description: The time the lead source recurring expense ends
        notes:
          type: string
          description: The notes for the lead source recurring expense
        start_time:
          type: string
          description: The time the lead source recurring expense starts
        title:
          type: string
          description: The title of the lead source recurring expense
      title: CreateLeadSourceRecurringExpenseRequest
    CreateLeadSourceRequest:
      type: object
      properties:
        description:
          type: string
          description: A description of the lead source
        end_time:
          type: string
          description: When the lead source ends
        lead_source_category_id:
          type: string
          description: The lead source category that the lead source belongs to
        medium:
          type: string
          description: The medium of the lead source
        message:
          type: string
          description: A message on the lead source
        name:
          type: string
          description: The name of the lead source
        start_time:
          type: string
          description: When the lead source starts
        status:
          type: string
          description: The status of the lead source
        vendor:
          type: string
          description: The vendor of the lead source
      title: CreateLeadSourceRequest
    CreateNoteRequest:
      type: object
      required:
      - user_id
      properties:
        is_pinned:
          type: boolean
        text:
          type: string
        title:
          type: string
          description: A value for either `title` or `type` is required.
        type:
          type: string
          description: A value for either `title` or `type` is required. The value
            may be one of `Appointment`, `Call`, `Email`, `Fax`, `Letter` or `Other`
            in Keap Max/Pro, or an admin-configured value in Classic.
        user_id:
          type: string
      title: CreateNoteRequest
    CreateOpportunityRequest:
      type: object
      required:
      - opportunity_title
      properties:
        affiliate_id:
          type: string
        contact_id:
          type: string
        custom_fields:
          type: array
          items:
            $ref: '#/components/schemas/CustomField'
        estimated_close_time:
          type: string
        include_in_forecast:
          type: boolean
        next_action_notes:
          type: string
        next_action_time:
          type: string
        opportunity_notes:
          type: string
        opportunity_title:
          type: string
        projected_revenue_high:
          type: number
          format: double
        projected_revenue_low:
          type: number
          format: double
        stage_id:
          type: string
        user_id:
          type: string
      title: CreateOpportunityRequest
    CreateOpportunityStageChecklistItem:
      type: object
      required:
      - description
      - order
      - required
      properties:
        description:
          type: string
        order:
          type: integer
          format: int32
          example: Must be Numeric could be negative values as well for ordering
        required:
          type: boolean
          example: false
      title: CreateOpportunityStageChecklistItem
    CreateOpportunityStageRequest:
      type: object
      required:
      - name
      - order
      - probability
      - target_number_days
      properties:
        checklist_items:
          type: array
          items:
            $ref: '#/components/schemas/CreateOpportunityStageChecklistItem'
        name:
          type: string
          example: Won
        order:
          type: integer
          format: int32
          example: must be Numeric
        probability:
          type: integer
          format: int32
          example: must be integer between 0 and 100
        target_number_days:
          type: integer
          format: int32
          example: value should be >=0
      title: CreateOpportunityStageRequest
    CreateOrUpdateAffiliateLinkRequest:
      type: object
      properties:
        affiliate_id:
          type: string
          example: 1
          description: The AffiliateId
        code:
          type: string
          example: fP100
          description: Code
        name:
          type: string
          example: Fitness Program
          description: The Affiliate Link Name
        program_ids:
          type: array
          items:
            type: string
        website_address:
          type: string
          example: www.fitnessProgram.com
          description: Website Address
      title: CreateOrUpdateAffiliateLinkRequest
    CreateOrderItemRequest:
      type: object
      required:
      - product_id
      - quantity
      properties:
        cost_per_unit:
          type: number
          format: double
          description: The cost per unit. Must be greater than or equal to 0.
        description:
          type: string
          description: The description of the order item. Must not be whitespace.
        item_type:
          type: string
          description: The type of this order item. For now only [PRODUCT] is supported.
            Will default to [PRODUCT] if omitted.
          enum:
          - UNKNOWN
          - SHIPPING
          - TAX
          - SERVICE
          - PRODUCT
          - UPSELL
          - FINANCE_CHARGE
          - DISCOUNT
          - PROGRAM
          - SUBSCRIPTION
          - DISCOUNT_FREE_TRIAL
          - DISCOUNT_ORDER_TOTAL
          - DISCOUNT_PRODUCT
          - DISCOUNT_PRODUCT_CATEGORY
          - DISCOUNT_SHIPPING
          - TIP
          - OTHER
        name:
          type: string
          description: The name of the order item. Must not be whitespace. If not
            specified, the product name will be used.
        notes:
          type: string
          description: The notes for the order item. Must not be whitespace.
        price_per_unit:
          type: number
          format: double
          description: The price per unit. Must be greater than or equal to 0. If
            not specified, the product price will be used.
        product_id:
          type: string
          description: The id of the product to be added to the order. Must be a valid
            product id.
        quantity:
          type: integer
          format: int32
          description: The quantity. Must be greater than or equal to 1.
      title: CreateOrderItemRequest
    CreateOrderTotalDiscountRequest:
      type: object
      required:
      - discount_type
      - discount_value
      - name
      properties:
        apply_to_commissions:
          type: boolean
        criteria:
          type: array
          items:
            $ref: '#/components/schemas/DiscountCriteria'
        description:
          type: string
        discount_strategy:
          type: string
          enum:
          - GROSS
          - NET
        discount_type:
          type: string
          enum:
          - AMOUNT
          - PERCENT
        discount_value:
          type: number
          format: double
        name:
          type: string
      title: CreateOrderTotalDiscountRequest
    CreatePaymentMethodConfigRequest:
      type: object
      properties:
        contact_id:
          type: string
      title: CreatePaymentMethodConfigRequest
    CreatePaymentRequest:
      type: object
      required:
      - apply_to_commissions
      - payment_amount
      properties:
        apply_to_commissions:
          type: boolean
        notes:
          type: string
        payment_amount:
          type: number
          format: double
        payment_method_id:
          type: string
        payment_method_type:
          type: string
        payment_time:
          type: string
      title: CreatePaymentRequest
    CreateProductCategoryRequest:
      type: object
      required:
      - name
      properties:
        display_order_index:
          type: integer
          format: int32
        name:
          type: string
        parent_category_id:
          type: string
      title: CreateProductCategoryRequest
    CreateProductCommissionProgramRequest:
      type: object
      properties:
        dollar_amount:
          type: string
        percentage:
          type: string
        product_id:
          type: string
      title: CreateProductCommissionProgramRequest
    CreateProductDiscountRequest:
      type: object
      required:
      - discount_type
      - discount_value
      - name
      - product_id
      properties:
        apply_to_commissions:
          type: boolean
        criteria:
          type: array
          items:
            $ref: '#/components/schemas/DiscountCriteria'
        description:
          type: string
        discount_type:
          type: string
          enum:
          - AMOUNT
          - PERCENT
        discount_value:
          type: number
          format: double
        name:
          type: string
        product_id:
          type: string
      title: CreateProductDiscountRequest
    CreateProductInterestBundleRequest:
      type: object
      required:
      - description
      - name
      properties:
        description:
          type: string
          description: Product interest bundle description
        name:
          type: string
          description: Product interest bundle name
      title: CreateProductInterestBundleRequest
    CreateProductRequest:
      type: object
      required:
      - name
      - price
      - short_description
      properties:
        active:
          type: boolean
          description: True means active, False means inactive
        city_taxable:
          type: boolean
          description: If city-based taxes should be applied to this product
        country_taxable:
          type: boolean
          description: If country-based taxes should be applied to this product
        description:
          type: string
          description: Product long description
        inventory:
          $ref: '#/components/schemas/ProductInventory'
        name:
          type: string
          description: Product name
        price:
          type: integer
          format: int64
          description: The product price. The value is in the currency’s smallest
            unit. e.g. $12.50 is 1250. Must be greater than or equal to 0.
        shippable:
          type: boolean
          description: If the product requires shipping
        short_description:
          type: string
          description: Product short description
        sku:
          type: string
          description: Product SKU
        state_taxable:
          type: boolean
          description: If state-based taxes should be applied to this product
        storefront_hidden:
          type: boolean
          description: If the product should not be shown in the storefront
        subscription_only:
          type: boolean
          description: If the product is a subscription-only product
        taxable:
          type: boolean
          description: Whether or not the product should be taxed
        weight:
          type: number
          format: double
          description: The product weight. Must be greater than or equal to 0.
      title: CreateProductRequest
    CreateReferralRequest:
      type: object
      properties:
        contact_id:
          type: string
        description:
          type: string
        expiration_time:
          type: string
        ip_address:
          type: string
        referral_partner_id:
          type: string
        referral_time:
          type: string
        referral_type:
          type: string
          enum:
          - COOKIE
          - PERMANENT
          - MANUAL
        source:
          type: string
      title: CreateReferralRequest
    CreateShippingDiscountRequest:
      type: object
      required:
      - discount_type
      - discount_value
      - name
      properties:
        criteria:
          type: array
          items:
            $ref: '#/components/schemas/DiscountCriteria'
        description:
          type: string
        discount_type:
          type: string
          enum:
          - AMOUNT
          - PERCENT
        discount_value:
          type: number
          format: double
        name:
          type: string
      title: CreateShippingDiscountRequest
    CreateSubscriptionCommissionProgramRequest:
      type: object
      properties:
        dollar_amount:
          type: string
        percentage:
          type: string
        subscription_id:
          type: string
      title: CreateSubscriptionCommissionProgramRequest
    CreateSubscriptionPlanRequest:
      type: object
      required:
      - cycle_type
      - plan_price
      properties:
        active:
          type: boolean
          description: Whether the subscription plan is active.
        allow_prorating:
          type: boolean
          description: Allow prorating of the subscription plan.
        cycle_type:
          type: string
          description: The cycle type of the subscription plan.
          enum:
          - DAILY
          - WEEKLY
          - MONTHLY
          - YEARLY
        display_order_index:
          type: integer
          format: int32
          description: The order that this plan will be displayed to the user.
        frequency:
          type: integer
          format: int32
          description: The frequency of the subscription plan. Must be greater than
            0. Default is 1.
        plan_price:
          type: number
          format: double
          description: The price of the subscription plan in the smallest currency
            unit. Must be greater than or equal to 0.
        total_cycles:
          type: integer
          format: int32
          description: How many cycles the subscription plan will have.  0 means infinite.
      title: CreateSubscriptionPlanRequest
    CreateSubscriptionRequest:
      type: object
      required:
      - contact_id
      - subscription_plan_id
      properties:
        active:
          type: boolean
          description: If the subscription is active or not. Default is true
        allow_duplicate:
          type: boolean
          description: If true, it will disable the check to see if there is already
            an identical subscription for the contact. Default is false.
        allow_tax:
          type: boolean
          description: Only works if the product associated with the product subscription
            is taxable. Default is false.
        auto_charge:
          type: boolean
          description: If the subscription should auto charge on the next billing
            date. Default is true.
        billing_amount:
          type: number
          format: double
          description: The billing amount. Must be 0 or greater. Default is the price
            in the product subscription plan.
        contact_id:
          type: string
          description: Id of the contact to create the subscription for.
        days_between_retries:
          type: integer
          format: int32
          description: Number of days between charge attempts. Must be 1 or greater.
            Default is the configured [Num Days Between Retries] value.
        lead_affiliate_id:
          type: string
          description: The affiliate id for the lead of the subscription. Default
            is 0.
        max_charge_attempts:
          type: integer
          format: int32
          description: Maximum number of charge attempts. Must be 1 or greater. Default
            is the configured [Max Retries] value.
        payment_method_id:
          type: string
          description: Id associated with the payment method. Default is the contact's
            most recently used card, if auto charge is true. Default is 0 otherwise.
        quantity:
          type: integer
          format: int32
          description: The subscription quantity. Must be 1 or greater. Default is
            1.
        sale_affiliate_id:
          type: string
          description: The affiliate id for the sale of the subscription. Default
            is 0.
        shipping_address:
          $ref: '#/components/schemas/Address'
        start_date:
          type: string
          description: The first day the subscription will bill. Must not be in the
            past. Default is today.
        subscription_plan_id:
          type: string
          description: Id of the product subscription plan.
      title: CreateSubscriptionRequest
    CreateTaskRequest:
      type: object
      required:
      - assigned_to_user_id
      properties:
        assigned_to_user_id:
          type: string
        completed:
          type: boolean
        completion_time:
          type: string
        contact_id:
          type: string
        description:
          type: string
        due_time:
          type: string
        priority:
          type: string
          enum:
          - CRITICAL
          - ESSENTIAL
          - NONESSENTIAL
        remind_time_mins:
          type: integer
          format: int32
          description: Value in minutes before start_date to show pop-up reminder.  Acceptable
            values are [5,10,15,30,60,120,240,480,1440,2880]
        title:
          type: string
        type:
          type: string
      title: CreateTaskRequest
    CreateUpdateContactRequest:
      type: object
      properties:
        addresses:
          type: array
          description: Any address not listed here will be removed if it already exists.
            If an empty array is specified, all existing values will be removed.
          items:
            $ref: '#/components/schemas/Address'
        anniversary_date:
          type: string
        birth_date:
          type: string
        company:
          $ref: '#/components/schemas/BasicCompany'
        contact_type:
          type: string
        custom_fields:
          type: array
          description: Any address not listed here will be removed if it already exists.
            If an empty array is specified, all existing values will be removed.
          items:
            $ref: '#/components/schemas/CustomFieldValue'
        email_addresses:
          type: array
          description: Any address not listed here will be removed if it already exists.
            If an empty array is specified, all existing values will be removed.
          items:
            $ref: '#/components/schemas/EmailAddressRequest'
        family_name:
          type: string
        fax_numbers:
          type: array
          description: Any address not listed here will be removed if it already exists.
            If an empty array is specified, all existing values will be removed.
          items:
            $ref: '#/components/schemas/FaxNumber'
        given_name:
          type: string
        job_title:
          type: string
        leadsource_id:
          type: string
        middle_name:
          type: string
        origin:
          $ref: '#/components/schemas/OriginRequest'
        owner_id:
          type: string
        phone_numbers:
          type: array
          description: Any address not listed here will be removed if it already exists.
            If an empty array is specified, all existing values will be removed.
          items:
            $ref: '#/components/schemas/PhoneNumber'
        preferred_locale:
          type: string
          example: en_US
        preferred_name:
          type: string
        prefix:
          type: string
        referral_code:
          type: string
        social_accounts:
          type: array
          description: Any address not listed here will be removed if it already exists.
            If an empty array is specified, all existing values will be removed.
          items:
            $ref: '#/components/schemas/SocialAccount'
        source_type:
          type: string
          enum:
          - SOURCE_TYPE_UNSPECIFIED
          - API
          - APPOINTMENT
          - FORM_API_HOSTED
          - FORM_API_INTERNAL
          - IMPORT
          - INTERNAL_FORM
          - LANDING_PAGE
          - MANUAL
          - OTHER
          - UNKNOWN
          - WEBFORM
        spouse_name:
          type: string
        suffix:
          type: string
        time_zone:
          type: string
        utm_parameters:
          $ref: '#/components/schemas/CreateContactUtmPropertiesRequest'
        website:
          type: string
      title: CreateUpdateContactRequest
    CreateUpdateLeadSourceCategoryRequest:
      type: object
      properties:
        description:
          type: string
          description: The description of the category
        name:
          type: string
          description: The name of the category, must be unique
      title: CreateUpdateLeadSourceCategoryRequest
    CreateUpdateTagCategoryRequest:
      type: object
      properties:
        description:
          type: string
        name:
          type: string
      title: CreateUpdateTagCategoryRequest
    CreateUpdateTagRequest:
      type: object
      properties:
        category:
          $ref: '#/components/schemas/CategoryReference'
        description:
          type: string
        name:
          type: string
      title: CreateUpdateTagRequest
    CreateUpdateTaskRequest:
      type: object
      properties:
        assigned_to_user_id:
          type: string
        completed:
          type: boolean
        completion_time:
          type: string
        contact_id:
          type: string
        description:
          type: string
        due_time:
          type: string
        priority:
          type: string
          enum:
          - CRITICAL
          - ESSENTIAL
          - NONESSENTIAL
        remind_time_mins:
          type: integer
          format: int32
          description: Value in minutes before start_date to show pop-up reminder.  Acceptable
            values are [5,10,15,30,60,120,240,480,1440,2880]
        title:
          type: string
        type:
          type: string
      title: CreateUpdateTaskRequest
    CreateUserRequestV2:
      type: object
      required:
      - email_address
      - given_name
      properties:
        admin:
          type: boolean
        email_address:
          $ref: '#/components/schemas/EmailAddressRequest'
        given_name:
          type: string
        partner:
          type: boolean
      title: CreateUserRequestV2
    CurrencyValue:
      type: object
      properties:
        amount:
          type: integer
          format: int64
          description: The price amount in the smallest currency unit
        currency_code:
          type: string
          description: Three-letter ISO currency code
        formatted_amount:
          type: string
          description: The product amount formatted using the tenant's currency locale
      title: CurrencyValue
    CustomField:
      type: object
      properties:
        content:
          type: object
        id:
          type: string
      title: CustomField
    CustomFieldMetaData:
      type: object
      properties:
        default_value:
          type: string
        field_name:
          type: string
        field_type:
          type: string
          enum:
          - CURRENCY
          - DATE
          - DATE_TIME
          - DAY_OF_WEEK
          - DECIMAL_NUMBER
          - DRILLDOWN
          - DROPDOWN
          - EMAIL
          - LIST_BOX
          - MONTH
          - NAME
          - PERCENT
          - PHONE_NUMBER
          - RADIO
          - SOCIAL_SECURITY_NUMBER
          - STATE
          - TEXT
          - TEXT_AREA
          - USER
          - USER_LIST_BOX
          - WEBSITE
          - WHOLE_NUMBER
          - YEAR
          - YES_NO
        group_id:
          type: string
        id:
          type: string
        label:
          type: string
        options:
          type: array
          items:
            $ref: '#/components/schemas/CustomFieldOption'
        record_type:
          type: string
          enum:
          - CONTACT
          - REFERRAL_PARTNER
          - OPPORTUNITY
          - TASK_NOTE_APPOINTMENT
          - COMPANY
          - ORDER
          - SUBSCRIPTION
      title: CustomFieldMetaData
    CustomFieldOption:
      type: object
      properties:
        id:
          type: string
        label:
          type: string
        options:
          type: array
          items:
            $ref: '#/components/schemas/CustomFieldOption'
      title: CustomFieldOption
    CustomFieldValue:
      type: object
      properties:
        content:
          type: object
        id:
          type: string
      title: CustomFieldValue
    DefaultCommission:
      type: object
      properties:
        dollar_amount:
          type: number
          format: double
        percentage:
          type: number
          format: double
      title: DefaultCommission
    DeleteEmailsRequest:
      type: object
      properties:
        email_ids:
          type: array
          items:
            type: string
      title: DeleteEmailsRequest
    DeleteEmailsResponse:
      type: object
      properties:
        results:
          type: object
          additionalProperties:
            type: string
      title: DeleteEmailsResponse
    DeleteFunnelIntegrationRequest:
      type: object
      properties:
        action_names:
          type: array
          description: The name of the actions, that will be looked for and uninstalled.
          items:
            type: string
        integration_names:
          type: array
          description: The name of the integrations, that will be looked for and uninstalled.
            This will uninstall all triggers and actions related to this automation.
          items:
            type: string
        trigger_names:
          type: array
          description: The name of the triggers, that will be looked for and uninstalled.
          items:
            type: string
      title: DeleteFunnelIntegrationRequest
    DeleteProgramCommissionRequest:
      type: object
      properties:
        product_id:
          type: string
      title: DeleteProgramCommissionRequest
    DeleteSubscriptionPlanCommissionRequest:
      type: object
      properties:
        product_id:
          type: string
        subscription_plan_id:
          type: string
      title: DeleteSubscriptionPlanCommissionRequest
    Discount:
      type: object
      required:
      - amount
      - discount_method
      - special_item_id
      properties:
        amount:
          type: number
          format: double
        discount_method:
          type: string
          enum:
          - AMOUNT
          - PERCENT
        line_item_id:
          type: string
        special_item_id:
          type: string
      title: Discount
    DiscountCriteria:
      type: object
      properties:
        code:
          type: string
        criteria_id:
          type: string
        operator:
          type: string
          enum:
          - LESS_THAN
          - GREATER_THAN
        plan_id:
          type: string
        product_id:
          type: string
        product_quantity_max:
          type: integer
          format: int32
        product_quantity_min:
          type: integer
          format: int32
        range_end_time:
          type: string
        range_start_time:
          type: string
        subscription_quantity:
          type: integer
          format: int32
        total_amount:
          type: number
          format: double
        type:
          type: string
          enum:
          - DATE_RANGE
          - PROMO_CODE
          - PRODUCT
          - SUBSCRIPTION_PLAN
          - ORDER_TOTAL
      title: DiscountCriteria
    EmailAddress:
      type: object
      properties:
        email:
          type: string
        email_opt_status:
          type: string
          enum:
          - UNENGAGED_MARKETABLE
          - SINGLE_OPT_IN
          - DOUBLE_OPT_IN
          - CONFIRMED
          - UNENGAGED_NON_MARKETABLE
          - NON_MARKETABLE
          - LOCKDOWN
          - BOUNCE
          - HARD_BOUNCE
          - MANUAL
          - ADMIN
          - SYSTEM
          - LIST_UNSUBSCRIBE
          - FEEDBACK
          - SPAM
          - INVALID
          - DEACTIVATED
        field:
          type: string
          enum:
          - EMAIL_FIELD_UNSPECIFIED
          - EMAIL1
          - EMAIL2
          - EMAIL3
        is_opt_in:
          type: boolean
        opt_in_reason:
          type: string
      title: EmailAddress
    EmailAddressRequest:
      type: object
      properties:
        email:
          type: string
        field:
          type: string
          enum:
          - EMAIL_FIELD_UNSPECIFIED
          - EMAIL1
          - EMAIL2
          - EMAIL3
        opt_in_reason:
          type: string
      title: EmailAddressRequest
    EmailAddressStatus:
      type: object
      required:
      - email
      - opted_in
      - status
      properties:
        email:
          type: string
        opted_in:
          type: boolean
        status:
          type: string
          enum:
          - UNENGAGED_MARKETABLE
          - SINGLE_OPT_IN
          - DOUBLE_OPT_IN
          - CONFIRMED
          - UNENGAGED_NON_MARKETABLE
          - NON_MARKETABLE
          - LOCKDOWN
          - BOUNCE
          - HARD_BOUNCE
          - MANUAL
          - ADMIN
          - SYSTEM
          - LIST_UNSUBSCRIBE
          - FEEDBACK
          - SPAM
          - INVALID
          - DEACTIVATED
      title: EmailAddressStatus
    EmailSendRequest:
      type: object
      required:
      - contacts
      - subject
      - user_id
      properties:
        address_field:
          type: string
          description: Email field of each Contact record to address the email to,
            such as 'Email', 'EmailAddress2', 'EmailAddress3' or '_CustomFieldName',
            defaulting to the contact's primary email
        attachments:
          type: array
          description: Attachments to be sent with each copy of the email, maximum
            of 10 with size of 1MB each
          items:
            $ref: '#/components/schemas/EmailSendRequestAttachment'
        contacts:
          type: array
          description: An array of Contact Ids to receive the email
          items:
            type: string
        html_content:
          type: string
          description: The HTML-formatted content of the email, encoded in Base64
        plain_content:
          type: string
          description: The plain-text content of the email, encoded in Base64
        subject:
          type: string
          description: The subject line of the email
        user_id:
          type: string
          description: The infusionsoft user to send the email on behalf of
      title: EmailSendRequest
    EmailSendRequestAttachment:
      type: object
      properties:
        file_data:
          type: string
          description: The content of the attachment, encoded in Base64
        file_name:
          type: string
          description: The filename of the attached file, including extension
      title: EmailSendRequestAttachment
    EmailSendTemplateRequest:
      type: object
      properties:
        address_field:
          type: string
          description: Email field of each Contact record to address the email to,
            such as 'Email', 'EmailAddress2', 'EmailAddress3' or '_CustomFieldName',
            defaulting to the contact's primary email
        contact_ids:
          type: array
          description: List of contacts to send
          items:
            type: string
        template_id:
          type: string
          description: Template ID
        user_id:
          type: string
          description: user id sending the email
      title: EmailSendTemplateRequest
    EmailSent:
      type: object
      properties:
        clicked_time:
          type: string
        contact_id:
          type: string
        headers:
          type: string
        id:
          type: string
        opened_time:
          type: string
        original_provider:
          type: string
          enum:
          - UNKNOWN
          - INFUSIONSOFT
          - MICROSOFT
          - GOOGLE
        original_provider_id:
          type: string
        provider_source_id:
          type: string
        received_time:
          type: string
        sent_from_address:
          type: string
        sent_from_reply_address:
          type: string
        sent_time:
          type: string
        sent_to_address:
          type: string
        sent_to_bcc_address_list:
          type: array
          items:
            type: string
        sent_to_cc_address_list:
          type: array
          items:
            type: string
        subject:
          type: string
      title: EmailSent
    EmailSentCreateError:
      type: object
      properties:
        email:
          $ref: '#/components/schemas/CreateEmailSentRequest'
        error_message:
          type: string
      title: EmailSentCreateError
    EmailSentWithContent:
      type: object
      properties:
        clicked_time:
          type: string
        contact_id:
          type: string
        headers:
          type: string
        html_content:
          type: string
          description: Base64 encoded HTML
        id:
          type: string
        opened_time:
          type: string
        original_provider:
          type: string
          enum:
          - UNKNOWN
          - INFUSIONSOFT
          - MICROSOFT
          - GOOGLE
        original_provider_id:
          type: string
        plain_content:
          type: string
          description: Base64 encoded plain text
        provider_source_id:
          type: string
        received_time:
          type: string
        sent_from_address:
          type: string
        sent_from_reply_address:
          type: string
        sent_time:
          type: string
        sent_to_address:
          type: string
        sent_to_bcc_address_list:
          type: array
          items:
            type: string
        sent_to_cc_address_list:
          type: array
          items:
            type: string
        subject:
          type: string
      title: EmailSentWithContent
    EmailTemplate:
      type: object
      properties:
        bcc_address:
          type: string
          description: The bcc address of the email
        categories:
          type: array
          description: The categories associated with the email
          items:
            type: string
        cc_address:
          type: string
          description: The cc address of the email
        content_type:
          type: string
          description: The content type of the email
          enum:
          - TEXT
          - HTML
          - MULTIPART
        from_address:
          type: string
          description: The from address of the email
        html_body:
          type: string
          description: The HTML body of the email
        merge_context:
          type: string
          description: The merge context of the email
        piece_title:
          type: string
          description: The title of the piece
        subject:
          type: string
          description: The subject of the email
        text_body:
          type: string
          description: The text body of the email
        to_address:
          type: string
          description: The to address of the email
      title: EmailTemplate
    EmailsSentList:
      type: object
      properties:
        emails:
          type: array
          items:
            $ref: '#/components/schemas/EmailSentWithContent'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/EmailSentCreateError'
      title: EmailsSentList
    Error:
      type: object
      properties:
        cause:
          $ref: '#/components/schemas/Throwable'
        localizedMessage:
          type: string
        message:
          type: string
        stackTrace:
          type: array
          items:
            $ref: '#/components/schemas/StackTraceElement'
        suppressed:
          type: array
          items:
            $ref: '#/components/schemas/Throwable'
      title: Error
    ErrorDetails:
      type: object
      properties:
        domain:
          type: string
        resource:
          type: string
      title: ErrorDetails
    FaxNumber:
      type: object
      properties:
        field:
          type: string
          enum:
          - FAX_NUMBER_FIELD_UNSPECIFIED
          - FAX1
          - FAX2
        number:
          type: string
        type:
          type: string
      title: FaxNumber
    File:
      type: object
      properties:
        absolute:
          type: boolean
        absoluteFile:
          $ref: '#/components/schemas/File'
        absolutePath:
          type: string
        canonicalFile:
          $ref: '#/components/schemas/File'
        canonicalPath:
          type: string
        directory:
          type: boolean
        executable:
          type: boolean
        file:
          type: boolean
        freeSpace:
          type: integer
          format: int64
        hidden:
          type: boolean
        lastModified:
          type: integer
          format: int64
        name:
          type: string
        parent:
          type: string
        parentFile:
          $ref: '#/components/schemas/File'
        path:
          type: string
        readable:
          type: boolean
        totalSpace:
          type: integer
          format: int64
        usableSpace:
          type: integer
          format: int64
        writable:
          type: boolean
      title: File
    FileMetadata:
      type: object
      properties:
        category:
          type: string
          enum:
          - ATTACHMENTS
          - CART
          - DOCUMENTS
          - HIDDEN
          - INVOICE
          - LOGO
          - TICKETS
          - WEB_FORM
          - FUNNEL
        contact_id:
          type: string
        created_by_id:
          type: string
        created_time:
          type: string
        file_box_type:
          type: string
          enum:
          - APPLICATION
          - IMAGE
          - FAX
          - ATTACHMENT
          - TICKET
          - CONTACT
          - DIGITAL_PRODUCT
          - IMPORT
          - HIDDEN
          - WEB_FORM
          - STYLED_CART
          - RESAMPLED_IMAGE
          - TEMPLATE_THUMBNAIL
          - FUNNEL
          - LOGO_THUMBNAIL
          - UNLAYER
          - BRANDING_CENTER_LOGO
        file_name:
          type: string
        file_size:
          type: integer
          format: int64
        id:
          type: string
        is_public:
          type: boolean
        remote_file_key:
          type: string
        updated_time:
          type: string
      title: FileMetadata
    FileOperationRequest:
      type: object
      required:
      - file_id
      properties:
        file_id:
          type: string
      title: FileOperationRequest
    FreeTrialDiscount:
      type: object
      properties:
        criteria:
          type: array
          items:
            $ref: '#/components/schemas/DiscountCriteria'
        description:
          type: string
        free_trial_days:
          type: integer
          format: int32
        hide_price:
          type: boolean
        id:
          type: string
        name:
          type: string
        subscription_plan_id:
          type: string
      title: FreeTrialDiscount
    FunnelIntegrationAction:
      type: object
      properties:
        base_url:
          type: string
          description: The base URL of the trigger, that will be used to call the
            integration related REST endpoints.
        context:
          type: string
          description: The context of the trigger, that will be used internally to
            identify the integration.
        enabled:
          type: boolean
          description: The flag to enable or disable the integration trigger.
        icon_url:
          type: string
          description: The icon URL of the trigger, that will be used to display the
            icon of this specific integration trigger.
        name:
          type: string
          example: My Trigger, MyTrigger, My 1 New Very Exciting Trigger
          description: The name of the trigger, that will be used internally to identify
            and initiate the trigger.
        schema_fields:
          type: array
          example: |-
            "schema_fields": [
                            {
                                "name": "my_schema_field",
                                "type": "String",
                                "label": "My Schema Field"
                            },
                            {
                                "name": "num_sales",
                                "type": "Integer",
                                "label": "Number of Sales"
                            }

                        ],
          description: The schema for this trigger that can be used in the builder
            context, and populated when a trigger is initiated.
          items:
            $ref: '#/components/schemas/FunnelIntegrationSchemaField'
      title: FunnelIntegrationAction
    FunnelIntegrationHttpRequest:
      type: object
      properties:
        body:
          type: string
          example:
            contact_id: '123'
          description: The body of the HTTP request that will be made when this action
            is processed in the builder(s).
        call_type:
          type: string
          example: POST
          description: The type of HTTP request that will be made when this action
            is processed in the builder(s).
        header_parameters:
          type: object
          example:
            header1: value1
            contact_name: ~Contact.FirstName~
          description: A map of the header parameters of the HTTP request that will
            be made when this action is processed in the builder(s).
          additionalProperties:
            type: string
        query_parameters:
          type: object
          example:
            param1: value1
            contact_name: ~Contact.FirstName~
          description: A map of the query parameters of the HTTP request that will
            be made when this action is processed in the builder(s).
          additionalProperties:
            type: string
        url:
          type: string
          example: https://api.example.com
          description: The URL of the HTTP request that will be made when this action
            is processed in the builder(s).
      title: FunnelIntegrationHttpRequest
    FunnelIntegrationSchemaField:
      type: object
      properties:
        label:
          type: string
          example: My Integration Field
          description: The label that will be used to show the name of the field in
            the UI.
        name:
          type: string
          example: my_integration_field
          description: The name of the schema field. Will be the defauly label, if
            no label is provided.
        type:
          type: string
          example: String
          description: The data type of the field.
      title: FunnelIntegrationSchemaField
    FunnelIntegrationTriggerEventDTO:
      type: object
      properties:
        contact_id:
          type: integer
          format: int64
        oracle_id:
          type: string
        schema_data:
          type: string
      title: FunnelIntegrationTriggerEventDTO
    FunnelIntegrationTriggerResultDTO:
      type: object
      properties:
        automation_id:
          type: integer
          format: int64
        goal_id:
          type: integer
          format: int64
        message:
          type: string
        schema_data:
          type: string
        success:
          type: boolean
      title: FunnelIntegrationTriggerResultDTO
    GetApplicationEnabledStatusResponse:
      type: object
      properties:
        enabled:
          type: boolean
      title: GetApplicationEnabledStatusResponse
    GetBusinessProfileResponse:
      type: object
      properties:
        address:
          $ref: '#/components/schemas/BusinessProfileAddressResponse'
        business_goals:
          type: array
          description: The goals of this business, ie. Grow Business, Convert more
            leads
          items:
            type: string
        business_primary_color:
          type: string
        business_secondary_color:
          type: string
        business_type:
          type: string
          description: The type of business
        currency_code:
          type: string
          example: USD
          description: ISO 4217 Currency Code
        email:
          type: string
        language_tag:
          type: string
        logo_url:
          type: string
        name:
          type: string
        phone:
          type: string
        time_zone:
          type: string
        website:
          type: string
      title: GetBusinessProfileResponse
      description: Profile information about the business that owns/uses this account
    GetContactOptionTypesResponse:
      type: object
      properties:
        option_types:
          type: array
          items:
            type: string
      title: GetContactOptionTypesResponse
    GetNoteResponse:
      type: object
      properties:
        assigned_to_user:
          $ref: '#/components/schemas/BasicUser'
        contact_id:
          type: string
        create_time:
          type: string
        created_by_user_id:
          type: string
        id:
          type: string
        last_updated_by_user_id:
          type: string
        pinned_at:
          type: string
        text:
          type: string
        title:
          type: string
        type:
          type: string
        update_time:
          type: string
      title: GetNoteResponse
    GetSettingsResponse:
      type: object
      properties:
        affiliate:
          $ref: '#/components/schemas/ApplicationConfigurationModuleAffiliate'
        application:
          $ref: '#/components/schemas/ApplicationConfigurationModuleApplication'
        appointment:
          $ref: '#/components/schemas/ApplicationConfigurationModuleAppointment'
        contact:
          $ref: '#/components/schemas/ApplicationConfigurationModuleContact'
        ecommerce:
          $ref: '#/components/schemas/ApplicationConfigurationModuleEcommerce'
        email:
          $ref: '#/components/schemas/ApplicationConfigurationModuleEmail'
        forms:
          $ref: '#/components/schemas/ApplicationConfigurationModuleForms'
        fulfillment:
          $ref: '#/components/schemas/ApplicationConfigurationModuleFulfillment'
        invoice:
          $ref: '#/components/schemas/ApplicationConfigurationModuleInvoice'
        note:
          $ref: '#/components/schemas/ApplicationConfigurationModuleNote'
        opportunity:
          $ref: '#/components/schemas/ApplicationConfigurationModuleOpportunity'
        task:
          $ref: '#/components/schemas/ApplicationConfigurationModuleTask'
        template:
          $ref: '#/components/schemas/ApplicationConfigurationModuleTemplate'
      title: GetSettingsResponse
    GetTagCategoryResponse:
      type: object
      properties:
        description:
          type: string
        id:
          type: string
        name:
          type: string
      title: GetTagCategoryResponse
    GetUserInfoResponse:
      type: object
      properties:
        email:
          type: string
        family_name:
          type: string
        given_name:
          type: string
        id:
          type: string
        is_admin:
          type: boolean
        keap_id:
          type: string
        middle_name:
          type: string
        preferred_name:
          type: string
        sub:
          type: string
      title: GetUserInfoResponse
    Goal:
      type: object
      properties:
        historical_contact_counts:
          $ref: '#/components/schemas/HistoricalCounts'
        id:
          type: string
        name:
          type: string
        next_sequence_ids:
          type: array
          items:
            type: string
        previous_sequence_ids:
          type: array
          items:
            type: string
        type:
          type: string
          enum:
          - WebForm
          - LandingPage
          - Survey
          - LinkClick
          - EmailOpened
          - Score
          - Purchase
          - FailedPurchase
          - Quote
          - WebsiteTrigger
          - InternalForm
          - SmartForm
          - AppointmentEvent
          - Task
          - StageMove
          - Note
          - Tag
          - PipelineStageMove
          - UnlayerLandingPage
          - GroSocial
          - TwitterForm
          - API
          - WordPress
          - NewLandingPage
          - IntegrationTrigger
      title: Goal
    HistoricalCounts:
      type: object
      properties:
        24_hours:
          type: integer
          format: int32
        30_days:
          type: integer
          format: int32
      title: HistoricalCounts
    InputStream:
      type: object
      title: InputStream
    InvoiceFile:
      type: object
      properties:
        file_id:
          type: string
      title: InvoiceFile
    InvoiceOrderPayment:
      type: object
      properties:
        amount:
          type: number
        id:
          type: string
        invoice_id:
          type: string
        last_updated_time:
          type: string
        note:
          type: string
        pay_status:
          type: string
          enum:
          - MANUAL_PAID
          - REFUNDED
          - VOIDED
          - PAYPAL_PAID
          - APPROVED
          - FAILED
          - ERROR
          - PENDING
        pay_time:
          type: string
        payment_id:
          type: string
        refund_invoice_payment_id:
          type: string
        skip_commission:
          type: boolean
      title: InvoiceOrderPayment
    Item:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        next_item_id:
          type: string
        previous_item_id:
          type: string
        type:
          type: string
          enum:
          - 'NULL'
          - Start
          - Wait
          - DelayTimer
          - ContactTimer
          - DateTimer
          - AppointmentTimer
          - Email
          - BardEmail
          - UnlayerEmail
          - EmailConfirm
          - Voice
          - Fax
          - Letter
          - AutomatedSms
          - Tag
          - Opportunity
          - Note
          - Task
          - CompleteTasks
          - Appointment
          - AssignOwner
          - FieldValue
          - Fulfillment
          - CreateOrder
          - Deal
          - AddToSequence
          - CancelSubscription
          - MoveOpportunity
          - Http
          - CustomerHub
          - HttpRequest
          - IntegrationAction
          - ActionSet
      title: Item
    LandingPage:
      type: object
      properties:
        html_preview_url:
          type: string
        html_url:
          type: string
        id:
          type: string
        template_group_status:
          type: string
        title:
          type: string
      title: LandingPage
    LeadScore:
      type: object
      properties:
        last_updated:
          type: string
        score:
          type: string
      title: LeadScore
    LeadSource:
      type: object
      properties:
        create_time:
          type: string
          description: The time that this lead source was created
        description:
          type: string
          description: The description of the lead source
        end_time:
          type: string
          description: The time that this lead source will end
        id:
          type: string
          description: The unique identifier for this lead source
        lead_source_category_id:
          type: string
          description: The ID of the category that the lead source belongs to
        medium:
          type: string
          description: The medium of the lead source
        message:
          type: string
          description: The message/content of the lead source
        name:
          type: string
          description: The name of the lead source
        start_time:
          type: string
          description: The time that this lead source started
        status:
          type: string
          description: The status of the lead source
          enum:
          - ACTIVE
          - INACTIVE
        update_time:
          type: string
          description: The time that this lead source was last updated
        vendor:
          type: string
          description: The vendor of the lead source
      title: LeadSource
    LeadSourceCategory:
      type: object
      properties:
        create_time:
          type: string
          description: The date the category was created
        description:
          type: string
          description: The description of the category
        id:
          type: string
          description: The unique identifier for the category
        name:
          type: string
          description: The name of the category
        update_time:
          type: string
          description: The date the category was last updated
      title: LeadSourceCategory
    LeadSourceExpense:
      type: object
      properties:
        amount:
          $ref: '#/components/schemas/CurrencyValue'
        create_time:
          type: string
          description: The date the expense was created
        id:
          type: string
          description: The unique identifier for the expense
        incurred_time:
          type: string
          description: The date the expense was incurred
        lead_source_id:
          type: string
          description: The ID of the lead source this expense belongs to
        lead_source_recurring_expense_id:
          type: string
          description: If this expense was incurred from a recurring expense, this
            is the ID of that recurring expense
        notes:
          type: string
          description: The notes for the expense
        title:
          type: string
          description: The title of the expense
        update_time:
          type: string
          description: The date the expense was last updated
      title: LeadSourceExpense
    LeadSourceRecurringExpense:
      type: object
      properties:
        amount:
          $ref: '#/components/schemas/CurrencyValue'
        create_time:
          type: string
          description: The time this lead source recurring expense was created
        end_time:
          type: string
          description: The time this lead source recurring expense end
        id:
          type: string
          description: The ID of the lead source recurring expense
        lead_source_id:
          type: string
          description: The ID of the lead source the recurring expense belongs to
        next_expense_time:
          type: string
          description: The time this lead source recurring expense will incur a new
            expense
        notes:
          type: string
          description: The notes for the lead source recurring expense
        start_time:
          type: string
          description: The time this lead source recurring expense starts
        title:
          type: string
          description: The title of the lead source recurring expense
        update_time:
          type: string
          description: The time this lead source recurring expense was last updated
      title: LeadSourceRecurringExpense
    LeadSourceRecurringExpenseUpdateRequest:
      type: object
      properties:
        amount:
          type: integer
          format: int64
          description: |-
            The monthly cost of the lead source recurring expense.
             The value should be in the smallest unit of currency for your currency locale.
             For example, if your currency locale is USD, then the smallest unit of currency is
             in cents, $225.50 would be provided in the request as 22550.
        end_time:
          type: string
          description: The time the lead source recurring expense ends
        notes:
          type: string
          description: The notes for the lead source recurring expense
        start_time:
          type: string
          description: The time the lead source recurring expense starts
        title:
          type: string
          description: The title of the lead source recurring expense
      title: LeadSourceRecurringExpenseUpdateRequest
    Link:
      type: object
      properties:
        id:
          type: string
        link_type_id:
          type: string
        link_type_name:
          type: string
        linked_contact_id:
          type: string
      title: Link
    LinkContactsRequest:
      type: object
      properties:
        contact1_id:
          type: string
        contact2_id:
          type: string
        link_type_id:
          type: string
      title: LinkContactsRequest
    ListAffiliateCommissionProgramsResponse:
      type: object
      properties:
        commission_programs:
          type: array
          items:
            $ref: '#/components/schemas/AffiliateProgramV2'
        next_page_token:
          type: string
      title: ListAffiliateCommissionProgramsResponse
    ListAffiliateCommissionsResponse:
      type: object
      properties:
        affiliate_commissions:
          type: array
          items:
            $ref: '#/components/schemas/AffiliateCommission'
        next_page_token:
          type: string
        total_aff_comm_earned:
          type: number
          format: double
        total_claw_back:
          type: number
          format: double
        total_comm_earned:
          type: number
          format: double
      title: ListAffiliateCommissionsResponse
    ListAffiliateLinksResponse:
      type: object
      properties:
        affiliate_links:
          type: array
          items:
            $ref: '#/components/schemas/AffiliateLink'
        next_page_token:
          type: string
      title: ListAffiliateLinksResponse
    ListAffiliatePaymentsResponse:
      type: object
      properties:
        affiliate_payments:
          type: array
          items:
            $ref: '#/components/schemas/RestAffiliatePayment'
        next_page_token:
          type: string
      title: ListAffiliatePaymentsResponse
    ListAffiliateSummariesResponse:
      type: object
      properties:
        affiliate_summaries:
          type: array
          items:
            $ref: '#/components/schemas/AffiliateSummaryRecord'
        next_page_token:
          type: string
      title: ListAffiliateSummariesResponse
    ListAffiliatesResponse:
      type: object
      properties:
        affiliates:
          type: array
          items:
            $ref: '#/components/schemas/RestAffiliate'
        next_page_token:
          type: string
      title: ListAffiliatesResponse
    ListAutomationCategoryResponse:
      type: object
      properties:
        automation_categories:
          type: array
          items:
            $ref: '#/components/schemas/AutomationCategory'
        next_page_token:
          type: string
      title: ListAutomationCategoryResponse
    ListAutomationIdsResponse:
      type: object
      properties:
        automation_ids:
          type: array
          items:
            type: string
        locked_automation_ids:
          type: array
          items:
            type: string
        next_page_token:
          type: string
      title: ListAutomationIdsResponse
    ListAutomationResponse:
      type: object
      properties:
        automation_count:
          type: integer
          format: int32
        automations:
          type: array
          items:
            $ref: '#/components/schemas/Automation'
        next_page_token:
          type: string
      title: ListAutomationResponse
    ListCampaignsResponse:
      type: object
      properties:
        campaigns:
          type: array
          items:
            $ref: '#/components/schemas/Campaign'
        next_page_token:
          type: string
      title: ListCampaignsResponse
    ListCategoryDiscountsResponse:
      type: object
      properties:
        discounts:
          type: array
          items:
            $ref: '#/components/schemas/CategoryDiscount'
        next_page_token:
          type: string
      title: ListCategoryDiscountsResponse
    ListCompaniesResponse:
      type: object
      properties:
        companies:
          type: array
          items:
            $ref: '#/components/schemas/Company'
        next_page_token:
          type: string
      title: ListCompaniesResponse
    ListContactLinkTypesResponse:
      type: object
      properties:
        contact_link_types:
          type: array
          items:
            $ref: '#/components/schemas/ContactLinkType'
        next_page_token:
          type: string
      title: ListContactLinkTypesResponse
    ListContactLinksResponse:
      type: object
      properties:
        links:
          type: array
          items:
            $ref: '#/components/schemas/ContactLink'
        next_page_token:
          type: string
      title: ListContactLinksResponse
    ListContactsResponse:
      type: object
      properties:
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/Contact'
        next_page_token:
          type: string
      title: ListContactsResponse
    ListCountriesResponse:
      type: object
      required:
      - countries
      properties:
        countries:
          type: array
          description: A key-value pair of country code and country name.
          items:
            $ref: '#/components/schemas/Country'
        next_page_token:
          type: string
      title: ListCountriesResponse
    ListEmailsSentResponse:
      type: object
      properties:
        emails:
          type: array
          items:
            $ref: '#/components/schemas/EmailSent'
        next_page_token:
          type: string
      title: ListEmailsSentResponse
    ListFilesResponse:
      type: object
      properties:
        files:
          type: array
          items:
            $ref: '#/components/schemas/FileMetadata'
        next_page_token:
          type: string
      title: ListFilesResponse
    ListFreeTrialDiscountsResponse:
      type: object
      properties:
        discounts:
          type: array
          items:
            $ref: '#/components/schemas/FreeTrialDiscount'
        next_page_token:
          type: string
      title: ListFreeTrialDiscountsResponse
    ListLandingPagesResponse:
      type: object
      properties:
        landingpages:
          type: array
          items:
            $ref: '#/components/schemas/LandingPage'
        next_page_token:
          type: string
        page_size:
          type: string
        pages:
          type: string
      title: ListLandingPagesResponse
    ListLeadSourceCategoriesResponse:
      type: object
      properties:
        lead_source_categories:
          type: array
          description: The lead source categories in the current page
          items:
            $ref: '#/components/schemas/LeadSourceCategory'
        next_page_token:
          type: string
      title: ListLeadSourceCategoriesResponse
    ListLeadSourceExpensesResponse:
      type: object
      properties:
        lead_source_expenses:
          type: array
          description: The lead source expenses in the current page
          items:
            $ref: '#/components/schemas/LeadSourceExpense'
        next_page_token:
          type: string
      title: ListLeadSourceExpensesResponse
    ListLeadSourceRecurringExpensesResponse:
      type: object
      properties:
        lead_source_recurring_expenses:
          type: array
          description: The lead source recurring expenses in the current page
          items:
            $ref: '#/components/schemas/LeadSourceRecurringExpense'
        next_page_token:
          type: string
      title: ListLeadSourceRecurringExpensesResponse
    ListLeadSourcesResponse:
      type: object
      properties:
        lead_sources:
          type: array
          description: The lead sources in the current page
          items:
            $ref: '#/components/schemas/LeadSource'
        next_page_token:
          type: string
      title: ListLeadSourcesResponse
    ListMerchantAccountResponse:
      type: object
      properties:
        id:
          type: string
        is_test:
          type: boolean
        name:
          type: string
        type:
          type: string
          enum:
          - PAYPAL
          - UNSUPPORTED
          - AUTHORIZE
          - EWAY
          - WEPAY
          - STRIPE
          - KEAP_PAY
      title: ListMerchantAccountResponse
    ListMerchantsResponse:
      type: object
      properties:
        default_merchant_account_id:
          type: string
        merchant_accounts:
          type: array
          items:
            $ref: '#/components/schemas/ListMerchantAccountResponse'
        next_page_token:
          type: string
      title: ListMerchantsResponse
    ListNoteTemplateResponse:
      type: object
      properties:
        next_page_token:
          type: string
        note_templates:
          type: array
          items:
            $ref: '#/components/schemas/NoteTemplate'
      title: ListNoteTemplateResponse
    ListNotesResponse:
      type: object
      properties:
        next_page_token:
          type: string
        notes:
          type: array
          items:
            $ref: '#/components/schemas/Note'
      title: ListNotesResponse
    ListOpportunitiesResponse:
      type: object
      properties:
        next_page_token:
          type: string
        opportunities:
          type: array
          items:
            $ref: '#/components/schemas/RestV2Opportunity'
      title: ListOpportunitiesResponse
    ListOpportunityStagesResponse:
      type: object
      properties:
        next_page_token:
          type: string
        stages:
          type: array
          items:
            $ref: '#/components/schemas/RestOpportunityStage'
      title: ListOpportunityStagesResponse
    ListOrderPaymentsResponse:
      type: object
      properties:
        invoice_order_payments:
          type: array
          items:
            $ref: '#/components/schemas/InvoiceOrderPayment'
        next_page_token:
          type: string
      title: ListOrderPaymentsResponse
    ListOrderTotalDiscountsResponse:
      type: object
      properties:
        discounts:
          type: array
          items:
            $ref: '#/components/schemas/OrderTotalDiscount'
        next_page_token:
          type: string
      title: ListOrderTotalDiscountsResponse
    ListOrders:
      type: object
      properties:
        next_page_token:
          type: string
        orders:
          type: array
          items:
            $ref: '#/components/schemas/RestV2Order'
      title: ListOrders
    ListPaymentMethodsResponse:
      type: object
      properties:
        next_page_token:
          type: string
        records:
          type: array
          items:
            $ref: '#/components/schemas/PaymentMethod'
      title: ListPaymentMethodsResponse
    ListProductCategoriesResponse:
      type: object
      properties:
        next_page_token:
          type: string
        product_categories:
          type: array
          items:
            $ref: '#/components/schemas/ProductCategory'
      title: ListProductCategoriesResponse
    ListProductDiscountsResponse:
      type: object
      properties:
        discounts:
          type: array
          items:
            $ref: '#/components/schemas/ProductDiscount'
        next_page_token:
          type: string
      title: ListProductDiscountsResponse
    ListProductInterestBundleResponse:
      type: object
      properties:
        next_page_token:
          type: string
        product_interest_bundles:
          type: array
          items:
            $ref: '#/components/schemas/ProductInterestBundle'
      title: ListProductInterestBundleResponse
    ListProductsResponse:
      type: object
      properties:
        next_page_token:
          type: string
        products:
          type: array
          items:
            $ref: '#/components/schemas/RestV2Product'
      title: ListProductsResponse
    ListProvincesResponse:
      type: object
      required:
      - provinces
      properties:
        next_page_token:
          type: string
        provinces:
          type: array
          description: A key-value pair of province code and province name.
          items:
            $ref: '#/components/schemas/Province'
      title: ListProvincesResponse
    ListReportsResponse:
      type: object
      properties:
        next_page_token:
          type: string
        reports:
          type: array
          items:
            $ref: '#/components/schemas/Report'
      title: ListReportsResponse
    ListRestShippingMethodsResponse:
      type: object
      properties:
        shipping_methods:
          type: array
          items:
            $ref: '#/components/schemas/ShippingMethod'
      title: ListRestShippingMethodsResponse
    ListShippingDiscountsResponse:
      type: object
      properties:
        discounts:
          type: array
          items:
            $ref: '#/components/schemas/ShippingDiscount'
        next_page_token:
          type: string
      title: ListShippingDiscountsResponse
    ListSubscriptionPlansResponse:
      type: object
      properties:
        next_page_token:
          type: string
        subscriptions:
          type: array
          items:
            $ref: '#/components/schemas/SubscriptionPlan'
      title: ListSubscriptionPlansResponse
    ListSubscriptionsResponse:
      type: object
      properties:
        next_page_token:
          type: string
        subscriptions:
          type: array
          items:
            $ref: '#/components/schemas/Subscription'
      title: ListSubscriptionsResponse
    ListTagCategoriesResponse:
      type: object
      properties:
        next_page_token:
          type: string
        tag_categories:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
      title: ListTagCategoriesResponse
    ListTaggedCompaniesResponse:
      type: object
      properties:
        next_page_token:
          type: string
        tagged_companies:
          type: array
          items:
            $ref: '#/components/schemas/TaggedCompany'
      title: ListTaggedCompaniesResponse
    ListTaggedContactsResponse:
      type: object
      properties:
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/BasicContact'
        next_page_token:
          type: string
      title: ListTaggedContactsResponse
    ListTagsResponse:
      type: object
      properties:
        next_page_token:
          type: string
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
      title: ListTagsResponse
    ListTasksResponse:
      type: object
      properties:
        next_page_token:
          type: string
        tasks:
          type: array
          items:
            $ref: '#/components/schemas/Task'
      title: ListTasksResponse
    ListUsersPaginatedResponse:
      type: object
      properties:
        next_page_token:
          type: string
        users:
          type: array
          items:
            $ref: '#/components/schemas/User'
      title: ListUsersPaginatedResponse
    Note:
      type: object
      properties:
        assigned_to_user:
          $ref: '#/components/schemas/BasicUser'
        contact_id:
          type: string
        create_time:
          type: string
        created_by_user_id:
          type: string
        id:
          type: string
        last_updated_by_user_id:
          type: string
        pinned_at:
          type: string
        text:
          type: string
        title:
          type: string
        type:
          type: string
        update_time:
          type: string
      title: Note
    NoteTemplate:
      type: object
      properties:
        action_type:
          type: string
          enum:
          - APPOINTMENT
          - CALL
          - EMAIL
          - FAX
          - LETTER
          - OTHER
        assignment_user_id:
          type: integer
          format: int64
        description:
          type: string
        id:
          type: string
        notify_users:
          type: array
          items:
            type: string
        title:
          type: string
      title: NoteTemplate
    ObjectModel:
      type: object
      properties:
        custom_fields:
          type: array
          items:
            $ref: '#/components/schemas/CustomFieldMetaData'
        optional_properties:
          type: array
          description: These fields are not transmitted by default on this model,
            but can be requested by specifying them in a comma-separated list in the
            optional_properties query parameter.
          items:
            type: string
      title: ObjectModel
    OpportunityContact:
      type: object
      required:
      - id
      properties:
        company_name:
          type: string
        email:
          type: string
        first_name:
          type: string
        id:
          type: string
          example: 0
        job_title:
          type: string
        last_name:
          type: string
        phone_number:
          type: string
      title: OpportunityContact
    OpportunityStage:
      type: object
      required:
      - id
      properties:
        details:
          $ref: '#/components/schemas/StageDetails'
        id:
          type: string
          example: 0
        name:
          type: string
        reasons:
          type: array
          items:
            type: string
      title: OpportunityStage
    OrderItemProduct:
      type: object
      properties:
        active:
          type: boolean
        created_time:
          type: string
        description:
          type: string
        id:
          type: string
        last_updated_time:
          type: string
        name:
          type: string
        product_options:
          type: array
          items:
            $ref: '#/components/schemas/RestProductOption'
        product_price:
          type: number
          format: double
        product_short_description:
          type: string
        shippable:
          type: boolean
        sku:
          type: string
        subscription_only:
          type: boolean
        subscription_plans:
          type: array
          items:
            $ref: '#/components/schemas/RestSubscriptionPlan'
        taxable:
          type: boolean
        url:
          type: string
          description: The url is the permalink to the resource
      title: OrderItemProduct
    OrderItemTax:
      type: object
      properties:
        amount:
          type: number
          format: double
        id:
          type: integer
          format: int64
        name:
          type: string
        orderItemId:
          type: integer
          format: int64
        rate:
          type: number
          format: double
        taxTemplateId:
          type: integer
          format: int64
      title: OrderItemTax
    OrderTotalDiscount:
      type: object
      properties:
        apply_to_commissions:
          type: boolean
        criteria:
          type: array
          items:
            $ref: '#/components/schemas/DiscountCriteria'
        description:
          type: string
        discount_strategy:
          type: string
          enum:
          - GROSS
          - NET
        discount_type:
          type: string
          enum:
          - AMOUNT
          - PERCENT
        discount_value:
          type: number
          format: double
        id:
          type: string
        name:
          type: string
      title: OrderTotalDiscount
    Origin:
      type: object
      properties:
        date:
          type: string
        ip_address:
          type: string
      title: Origin
    OriginRequest:
      type: object
      properties:
        ip_address:
          type: string
      title: OriginRequest
    PatchAutomationCategoryRequest:
      type: object
      properties:
        name:
          type: string
      title: PatchAutomationCategoryRequest
    PaymentMethod:
      type: object
      properties:
        card_info:
          $ref: '#/components/schemas/CardInfo'
        contact_id:
          type: string
        created_time:
          type: string
        merchant_account_id:
          type: string
        merchant_account_type:
          type: string
          enum:
          - PAYPAL
          - UNSUPPORTED
          - AUTHORIZE
          - EWAY
          - WEPAY
          - STRIPE
          - KEAP_PAY
        payment_method_id:
          type: string
        payment_method_type:
          type: string
          enum:
          - CARD
      title: PaymentMethod
    PaymentMethodConfig:
      type: object
      properties:
        session_key:
          type: string
          description: A temporary session key required for rendering Keap's payment
            component.
      title: PaymentMethodConfig
    PaymentPlan:
      type: object
      required:
      - days_between_payments
      - number_of_payments
      - plan_start_date
      properties:
        auto_charge:
          type: boolean
        days_between_payments:
          type: integer
          format: int64
        days_between_retries:
          type: integer
          format: int64
        initial_payment_amount:
          $ref: '#/components/schemas/CurrencyValue'
        initial_payment_date:
          type: string
        initial_payment_percent:
          type: number
          format: double
        max_charge_attempts:
          type: integer
          format: int64
        number_of_payments:
          type: integer
          format: int64
        payment_method_id:
          type: string
        plan_start_date:
          type: string
      title: PaymentPlan
    PaymentResult:
      type: object
      properties:
        id:
          type: string
        invoice_id:
          type: string
        payment_amount:
          type: number
          format: double
        payment_status_message:
          type: string
        transaction_id:
          type: string
      title: PaymentResult
    PhoneNumber:
      type: object
      properties:
        extension:
          type: string
        field:
          type: string
          enum:
          - PHONE_NUMBER_FIELD_UNSPECIFIED
          - PHONE1
          - PHONE2
          - PHONE3
          - PHONE4
          - PHONE5
        number:
          type: string
        number_e164:
          type: string
        type:
          type: string
      title: PhoneNumber
    ProductCategory:
      type: object
      properties:
        display_order_index:
          type: integer
          format: int32
        id:
          type: string
        name:
          type: string
        parent_category_id:
          type: string
      title: ProductCategory
    ProductCommission:
      type: object
      properties:
        dollar_amount:
          type: number
          format: double
        percentage:
          type: number
          format: double
        product_id:
          type: string
        product_name:
          type: string
        product_price:
          type: number
          format: double
      title: ProductCommission
    ProductCommissionProgram:
      type: object
      properties:
        id:
          type: string
        message:
          type: string
      title: ProductCommissionProgram
    ProductDiscount:
      type: object
      properties:
        apply_to_commissions:
          type: boolean
        criteria:
          type: array
          items:
            $ref: '#/components/schemas/DiscountCriteria'
        description:
          type: string
        discount_type:
          type: string
          enum:
          - AMOUNT
          - PERCENT
        discount_value:
          type: number
          format: double
        id:
          type: string
        name:
          type: string
        product_id:
          type: string
      title: ProductDiscount
    ProductFixedOption:
      type: object
      properties:
        code:
          type: string
          description: An internal code to reference the option value
        price_adjustment:
          type: number
          format: double
          description: Positive value indicates additional amount added to the original
            price. Negative value indicates subtraction from the original price.
        value:
          type: string
          description: The displayable label given to the option
      title: ProductFixedOption
    ProductInterest:
      type: object
      properties:
        discount_percent:
          type: integer
          format: int32
          description: The percent to discount the product. Percent represented in
            a whole number, for example 10 is 10%
        id:
          type: string
          description: The product interest ID
        interest_id:
          type: string
          description: The interest ID
        price:
          $ref: '#/components/schemas/CurrencyValue'
        quantity:
          type: integer
          format: int32
          description: The quantity of product.
        type:
          type: string
          description: The product interest type
          enum:
          - PRODUCT
          - SUBSCRIPTION_PLAN
      title: ProductInterest
    ProductInterestBundle:
      type: object
      properties:
        description:
          type: string
          description: Product interest bundle description
        id:
          type: string
          description: The product interest bundle ID
        name:
          type: string
          description: Product interest bundle name
        product_interests:
          type: array
          description: Product interests
          items:
            $ref: '#/components/schemas/ProductInterest'
        subscription_plan_interests:
          type: array
          description: Subscription plan interests
          items:
            $ref: '#/components/schemas/ProductInterest'
      title: ProductInterestBundle
    ProductInventory:
      type: object
      properties:
        email_for_inventory_notifications:
          type: string
          description: The email address for notifications about inventory
        inventory_count:
          type: integer
          format: int32
          description: The current inventory count for this product. Must be greater
            than or equal to 0. This field is omitted in List responses.
        inventory_limit:
          type: integer
          format: int32
          description: The inventory limit for this product. Must be greater than
            or equal to 0.
        out_of_stock_enabled:
          type: boolean
          description: The flag to enable out of stock inventory
      title: ProductInventory
    ProductOptions:
      type: object
      properties:
        fixed_options:
          type: array
          description: List of option values for the fixed option
          items:
            $ref: '#/components/schemas/ProductFixedOption'
        name:
          type: string
          description: The option name
        required:
          type: boolean
          description: If the user is required to select/fill in an option for the
            product
        type:
          type: string
          description: Can be FIXED or VARIABLE. If FIXED, then fixed_options will
            be returned. If VARIABLE, then variable_setting will be returned.
          enum:
          - FIXED
          - VARIABLE
        variable_setting:
          $ref: '#/components/schemas/ProductVariableSetting'
      title: ProductOptions
    ProductVariableSetting:
      type: object
      properties:
        contain_spaces:
          type: boolean
          description: If spaces are allowed for the option
        contains:
          type: string
          description: Requires the value (excluding start and end) to contain given
            type. Can be LETTER, NUMBER, or BOTH.
        end_with:
          type: string
          description: Requires the value to end with the given type. Can be LETTER,
            NUMBER, or BOTH.
        max_chars:
          type: integer
          format: int32
          description: Max allowable chars. Its value must be greater than min_chars
        min_chars:
          type: integer
          format: int32
          description: Minimum allowable characters
        start_with:
          type: string
          description: Requires the value to start with the given type. Can be LETTER,
            NUMBER, or BOTH.
        validation_msg:
          type: string
          description: Customized validation message to display when option criteria
            aren’t met
      title: ProductVariableSetting
    Province:
      type: object
      properties:
        code:
          type: string
        country:
          type: string
        name:
          type: string
      title: Province
    Referral:
      type: object
      properties:
        contact_id:
          type: string
        description:
          type: string
        expiration_time:
          type: string
        id:
          type: string
        ip_address:
          type: string
        referral_partner_id:
          type: string
        referral_time:
          type: string
        referral_type:
          type: string
          enum:
          - COOKIE
          - PERMANENT
          - MANUAL
        source:
          type: string
      title: Referral
    RemoveContactsFromSequenceRequest:
      type: object
      properties:
        contact_ids:
          type: array
          items:
            type: string
      title: RemoveContactsFromSequenceRequest
    RemoveContactsFromSequenceResponse:
      type: object
      properties:
        remove_from_sequence_results:
          type: object
          additionalProperties:
            type: string
      title: RemoveContactsFromSequenceResponse
    Report:
      type: object
      properties:
        created_time:
          type: string
        id:
          type: string
        name:
          type: string
        updated_time:
          type: string
        user_ids:
          type: array
          description: A list of Users who have access to this Saved Search, or ALL_USERS
            if visible to all
          items:
            type: string
      title: Report
    ReportEntryRecord:
      type: object
      properties:
        columns:
          type: array
          items:
            $ref: '#/components/schemas/ReportEntryValue'
      title: ReportEntryRecord
    ReportEntryValue:
      type: object
      properties:
        field_name:
          type: string
        value:
          type: string
      title: ReportEntryValue
    ReportExecutionResult:
      type: object
      properties:
        page_token:
          type: string
        results:
          type: array
          items:
            $ref: '#/components/schemas/ReportEntryRecord'
      title: ReportExecutionResult
    Resource:
      type: object
      properties:
        description:
          type: string
        file:
          $ref: '#/components/schemas/File'
        filename:
          type: string
        inputStream:
          $ref: '#/components/schemas/InputStream'
        open:
          type: boolean
        readable:
          type: boolean
        uri:
          $ref: '#/components/schemas/URI'
        url:
          $ref: '#/components/schemas/URL'
      title: Resource
    RestAffiliate:
      type: object
      properties:
        code:
          type: string
          example: M123
          description: The Affiliate Code
        contact_id:
          type: string
          example: 1
          description: The ContactID
        date_created:
          type: string
        id:
          type: string
          example: 1
          description: The AffiliateId
        name:
          type: string
          example: Affiliate Name
          description: The Affiliate Name
        status:
          type: string
          example: ACTIVE
          description: The Affiliate Status
          enum:
          - ACTIVE
          - INACTIVE
        unique_site_id:
          type: string
          example: 123456
          description: The Affiliate PortalSite Id
      title: RestAffiliate
    RestAffiliatePayment:
      type: object
      properties:
        create_time:
          type: string
        id:
          type: string
        pay_amount:
          type: number
          format: double
        pay_date:
          type: string
        pay_notes:
          type: string
        pay_type:
          type: string
          enum:
          - CASH
          - CHECK
          - CREDIT_CARD
          - CREDIT_CARD_MANUAL
          - MONEY_ORDER
          - ADJUSTMENT
          - CREDIT
          - REFUND
      title: RestAffiliatePayment
    RestApplyCommissionRequest:
      type: object
      required:
      - affiliate_id
      - payout_type
      properties:
        affiliate_id:
          type: string
          description: The affiliate id
        commission_amount:
          type: number
          format: double
        commission_date:
          type: string
        description:
          type: string
        pay_percent:
          type: number
          format: double
        payout_type:
          type: string
          description: The payout type
          enum:
          - UPFRONT
          - PAYMENT_RECEIVED
      title: RestApplyCommissionRequest
    RestCreateOrderRequest:
      type: object
      required:
      - contact_id
      - order_items
      - order_time
      - order_title
      - order_type
      properties:
        contact_id:
          type: string
        lead_affiliate_id:
          type: string
        notes:
          type: string
        order_items:
          type: array
          items:
            $ref: '#/components/schemas/CreateOrderItemRequest'
        order_time:
          type: string
        order_title:
          type: string
        order_type:
          type: string
          enum:
          - OFFLINE
          - ONLINE
        promo_codes:
          type: array
          description: Uses multiple strings as promo codes. The corresponding discount
            will be applied to the order.
          items:
            type: string
        sales_affiliate_id:
          type: string
        shipping_address:
          $ref: '#/components/schemas/AddressInformation'
        terms:
          type: string
      title: RestCreateOrderRequest
    RestEmailAddress:
      type: object
      required:
      - email
      - opted_in
      - status
      properties:
        email:
          type: string
        opted_in:
          type: boolean
        status:
          type: string
          enum:
          - Unengaged Marketable
          - Unconfirmed
          - Confirmed (Legacy)
          - Confirmed
          - Unengaged NonMarketable
          - Non-marketable
          - Lockdown
          - Soft Bounce
          - Hard Bounce
          - Opt-Out
          - 'Opt-Out: Admin'
          - 'Opt-Out: System'
          - List Unsubscribe
          - Provided Feedback
          - Reported Spam
          - Invalid Email
          - Deactivated/Delinquent Mailbox
      title: RestEmailAddress
    RestOpportunityStage:
      type: object
      properties:
        checklist_items:
          type: array
          items:
            $ref: '#/components/schemas/ChecklistItem'
        created_time:
          type: string
        id:
          type: string
        name:
          type: string
        order:
          type: integer
          format: int32
        probability:
          type: integer
          format: int32
        target_number_days:
          type: integer
          format: int32
        updated_time:
          type: string
      title: RestOpportunityStage
    RestProductOption:
      type: object
      properties:
        allow_spaces:
          type: boolean
        can_contain_character:
          type: boolean
        can_contain_number:
          type: boolean
        can_end_with_character:
          type: boolean
        can_end_with_number:
          type: boolean
        can_start_with_character:
          type: boolean
        can_start_with_number:
          type: boolean
        display_index:
          type: integer
          format: int32
        id:
          type: string
        label:
          type: string
        max_chars:
          type: integer
          format: int32
        min_chars:
          type: integer
          format: int32
        name:
          type: string
        required:
          type: boolean
        text_message:
          type: string
        type:
          type: string
          enum:
          - FIXED
          - VARIABLE
        values:
          type: array
          items:
            $ref: '#/components/schemas/RestProductOptionValue'
      title: RestProductOption
    RestProductOptionValue:
      type: object
      properties:
        id:
          type: string
        index:
          type: integer
          format: int32
        is_default:
          type: boolean
        label:
          type: string
        price_adjustment:
          type: number
          format: double
        sku:
          type: string
      title: RestProductOptionValue
    RestSubscriptionPlan:
      type: object
      properties:
        active:
          type: boolean
        cycle:
          type: string
          example: YEAR
          description: The interval at which the customer is charged for the subscription.
          enum:
          - DAILY
          - WEEKLY
          - MONTHLY
          - YEARLY
        frequency:
          type: integer
          format: int32
          example: 2
          description: Interval at which a customer receives a product or service
            as part of a subscription plan.
        id:
          type: string
        number_of_cycles:
          type: integer
          format: int32
        plan_price:
          $ref: '#/components/schemas/CurrencyValue'
        subscription_plan_index:
          type: integer
          format: int32
          example: 99
          description: Subscription plan identifier.
        subscription_plan_name:
          type: string
      title: RestSubscriptionPlan
    RestV2Opportunity:
      type: object
      required:
      - contact
      - opportunity_title
      - stage
      properties:
        affiliate_id:
          type: string
        contact:
          $ref: '#/components/schemas/OpportunityContact'
        created_time:
          type: string
        custom_fields:
          type: array
          items:
            $ref: '#/components/schemas/CustomField'
        estimated_close_time:
          type: string
        id:
          type: string
        include_in_forecast:
          type: boolean
        last_updated_time:
          type: string
        next_action_notes:
          type: string
        next_action_time:
          type: string
        opportunity_notes:
          type: string
        opportunity_title:
          type: string
        projected_revenue_high:
          type: number
          format: double
        projected_revenue_low:
          type: number
          format: double
        stage:
          $ref: '#/components/schemas/OpportunityStage'
        user:
          $ref: '#/components/schemas/RestV2User'
      title: RestV2Opportunity
    RestV2Order:
      type: object
      properties:
        allow_payment:
          type: boolean
          description: Whether or not card-related payments should be allowed on this
            order. Applies only to Keap Pro/Max edition.
        allow_paypal:
          type: boolean
          description: Whether or not PayPal payments should be allowed on this order.
            Applies only to Keap Pro/Max edition.
        contact:
          $ref: '#/components/schemas/BasicContact'
        creation_time:
          type: string
          description: When this order was originally created. In ISO-8601 format
            (e.g. 2024-05-21T23:00:00Z)
        files:
          type: array
          description: A list of attached files to this order. Applies only to Keap
            Pro/Max edition.
          items:
            $ref: '#/components/schemas/InvoiceFile'
        id:
          type: string
        invoice_number:
          type: string
          description: The associated invoice identifier. Applies only to Keap Pro/Max
            edition. Feature not yet supported.
        lead_affiliate_id:
          type: string
        modification_time:
          type: string
          description: When this order was changed. In ISO-8601 format (e.g. 2024-05-21T23:00:00Z)
        notes:
          type: string
        order_items:
          type: array
          items:
            $ref: '#/components/schemas/RestV2OrderItem'
        order_time:
          type: string
          description: A user-defined date and time of the order. In ISO-8601 format
            (e.g. 2024-05-21T23:00:00Z)
        order_type:
          type: string
          description: 'The order type. Valid values are: ONLINE, OFFLINE.'
          enum:
          - OFFLINE
          - ONLINE
          - UNKNOWN
        payment_plan:
          $ref: '#/components/schemas/PaymentPlan'
        refund_total:
          $ref: '#/components/schemas/CurrencyValue'
        sales_affiliate_id:
          type: string
        shipping_information:
          $ref: '#/components/schemas/ShippingInformation'
        source_type:
          type: string
          description: 'The source where the order was created. Valid values include:
            API, CHECKOUT_FORM, INVOICE, MANUAL_PAYMENT, QUICKBOOKS, UNKNOWN.'
          enum:
          - INVOICE
          - API
          - CHECKOUT_FORM
          - MANUAL_PAYMENT
          - QUICKBOOKS
          - UNKNOWN
        status:
          type: string
          description: 'The order status. Valid values are: DRAFT, SENT, VIEWED, PAID.'
          enum:
          - DRAFT
          - PAID
          - SENT
          - VIEWED
        terms:
          type: string
        title:
          type: string
        total:
          $ref: '#/components/schemas/CurrencyValue'
        total_due:
          $ref: '#/components/schemas/CurrencyValue'
        total_paid:
          $ref: '#/components/schemas/CurrencyValue'
      title: RestV2Order
    RestV2OrderItem:
      type: object
      properties:
        cost_per_unit:
          $ref: '#/components/schemas/CurrencyValue'
        description:
          type: string
        discount:
          $ref: '#/components/schemas/CurrencyValue'
        id:
          type: string
        item_type:
          type: string
          enum:
          - UNKNOWN
          - SHIPPING
          - TAX
          - SERVICE
          - PRODUCT
          - UPSELL
          - FINANCE_CHARGE
          - DISCOUNT
          - PROGRAM
          - SUBSCRIPTION
          - DISCOUNT_FREE_TRIAL
          - DISCOUNT_ORDER_TOTAL
          - DISCOUNT_PRODUCT
          - DISCOUNT_PRODUCT_CATEGORY
          - DISCOUNT_SHIPPING
          - TIP
          - OTHER
        name:
          type: string
        notes:
          type: string
        order_item_taxes:
          type: array
          items:
            $ref: '#/components/schemas/OrderItemTax'
        price_per_unit:
          $ref: '#/components/schemas/CurrencyValue'
        product:
          $ref: '#/components/schemas/OrderItemProduct'
        quantity:
          type: integer
          format: int32
        special:
          $ref: '#/components/schemas/Discount'
        subscription:
          $ref: '#/components/schemas/RestV2Subscription'
        subscription_id:
          type: string
        subscription_plan:
          $ref: '#/components/schemas/RestSubscriptionPlan'
      title: RestV2OrderItem
    RestV2Product:
      type: object
      properties:
        active:
          type: boolean
          description: True means active, False means inactive
        categories:
          type: array
          description: List of category ids to indicate which categories this product
            will belong to. Can be empty.
          items:
            type: string
        city_taxable:
          type: boolean
          description: If city-based taxes should be applied to this product
        country_taxable:
          type: boolean
          description: If country-based taxes should be applied to this product
        description:
          type: string
          description: Product long description
        id:
          type: string
          description: The product ID
        inventory:
          $ref: '#/components/schemas/ProductInventory'
        name:
          type: string
          description: Product name
        options:
          type: array
          description: List of product options. Can be empty.
          items:
            $ref: '#/components/schemas/ProductOptions'
        price:
          $ref: '#/components/schemas/CurrencyValue'
        shippable:
          type: boolean
          description: If the product requires shipping
        short_description:
          type: string
          description: Product short description
        sku:
          type: string
          description: Product SKU
        state_taxable:
          type: boolean
          description: If state-based taxes should be applied to this product
        storefront_hidden:
          type: boolean
          description: If the product should not be shown in the storefront
        subscription_only:
          type: boolean
          description: If the product is a subscription-only product
        subscription_plans:
          type: array
          description: List of subscription plans associated with the product. Can
            be empty.
          items:
            $ref: '#/components/schemas/SubscriptionPlan'
        taxable:
          type: boolean
          description: Whether or not the product should be taxed
        weight:
          type: number
          format: double
          description: Product weight
      title: RestV2Product
    RestV2Subscription:
      type: object
      properties:
        subscription_active:
          type: boolean
        subscription_cycles_completed:
          type: integer
          format: int32
        subscription_end_date:
          type: string
        subscription_id:
          type: string
        subscription_next_bill_date:
          type: string
        subscription_start_date:
          type: string
      title: RestV2Subscription
    RestV2User:
      type: object
      properties:
        first_name:
          type: string
        id:
          type: string
        last_name:
          type: string
      title: RestV2User
    Sequence:
      type: object
      properties:
        active_contact_count:
          type: integer
          format: int32
        active_contact_count_completed:
          type: integer
          format: int32
        historical_contact_count:
          $ref: '#/components/schemas/HistoricalCounts'
        id:
          type: string
        name:
          type: string
        paths:
          type: array
          items:
            $ref: '#/components/schemas/SequencePath'
      title: Sequence
    SequencePath:
      type: object
      properties:
        id:
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/Item'
      title: SequencePath
    SetDefaultCommissionProgramResponse:
      type: object
      properties:
        id:
          type: string
        message:
          type: string
      title: SetDefaultCommissionProgramResponse
    ShippingDiscount:
      type: object
      properties:
        criteria:
          type: array
          items:
            $ref: '#/components/schemas/DiscountCriteria'
        description:
          type: string
        discount_type:
          type: string
          enum:
          - AMOUNT
          - PERCENT
        discount_value:
          type: number
          format: double
        id:
          type: string
        name:
          type: string
      title: ShippingDiscount
    ShippingInformation:
      type: object
      properties:
        address:
          $ref: '#/components/schemas/Address'
        company:
          type: string
        family_name:
          type: string
        given_name:
          type: string
        id:
          type: string
        invoice_to_company:
          type: boolean
        phone_number:
          type: string
      title: ShippingInformation
    ShippingMethod:
      type: object
      properties:
        description:
          type: string
        id:
          type: string
        international:
          type: boolean
        name:
          type: string
        settings:
          $ref: '#/components/schemas/ShippingMethodSettings'
        status:
          type: string
        type:
          type: string
      title: ShippingMethod
    ShippingMethodSettings:
      type: object
      title: ShippingMethodSettings
    SocialAccount:
      type: object
      required:
      - type
      properties:
        name:
          type: string
        type:
          type: string
          enum:
          - SOCIAL_ACCOUNT_TYPE_UNSPECIFIED
          - FACEBOOK
          - LINKED_IN
          - TWITTER
          - INSTAGRAM
          - SNAPCHAT
          - YOUTUBE
          - PINTEREST
      title: SocialAccount
    StackTraceElement:
      type: object
      properties:
        classLoaderName:
          type: string
        className:
          type: string
        fileName:
          type: string
        lineNumber:
          type: integer
          format: int32
        methodName:
          type: string
        moduleName:
          type: string
        moduleVersion:
          type: string
        nativeMethod:
          type: boolean
      title: StackTraceElement
    StageDetails:
      type: object
      properties:
        checklist_items:
          type: array
          items:
            $ref: '#/components/schemas/CheckListItemDetails'
        probability:
          type: integer
          format: int32
        stage_order:
          type: integer
          format: int32
        target_num_days:
          type: integer
          format: int32
      title: StageDetails
    Subscription:
      type: object
      properties:
        active:
          type: boolean
          description: If the subscription is active or not.
        allow_tax:
          type: boolean
          description: If the subscription allows tax.
        auto_charge:
          type: boolean
          description: If the subscription should auto charge on the next billing
            date.
        billing_amount:
          type: number
          format: double
          description: The billing amount.
        billing_cycle:
          type: string
          description: The billing cycle of the subscription.
          enum:
          - YEAR
          - MONTH
          - WEEK
          - DAY
        billing_frequency:
          type: integer
          format: int32
          description: The billing frequency in days.
        contact_id:
          type: string
          description: Id of the contact to create the subscription for.
        days_between_retries:
          type: integer
          format: int32
          description: Number of days between charge attempts.
        end_date:
          type: string
          description: The last date the subscription will bill.
        id:
          type: string
          description: Id of the subscription.
        last_bill_date:
          type: string
          description: The last date the subscription was billed.
        lead_affiliate_id:
          type: string
          description: The affiliate id for the lead of the subscription.
        max_charge_attempts:
          type: integer
          format: int32
          description: Maximum number of charge attempts.
        merchant_account_id:
          type: string
          description: The merchant account id associated with the subscription.
        next_bill_date:
          type: string
          description: The next date the subscription will bill.
        payment_method_id:
          type: string
          description: Id associated with the payment method.
        product_id:
          type: string
          description: Id of the product associated with the subscription.
        quantity:
          type: integer
          format: int64
          description: The subscription quantity.
        sale_affiliate_id:
          type: string
          description: The affiliate id for the sale of the subscription.
        shipping_address:
          $ref: '#/components/schemas/Address'
        start_date:
          type: string
          description: The first day the subscription will bill.
        subscription_plan_id:
          type: string
          description: Id of the product subscription plan.
      title: Subscription
    SubscriptionCommission:
      type: object
      properties:
        dollar_amount:
          type: number
          format: double
        name:
          type: string
        percentage:
          type: number
          format: double
        plan_price:
          type: number
          format: double
        subscription_id:
          type: string
      title: SubscriptionCommission
    SubscriptionCommissionProgram:
      type: object
      properties:
        id:
          type: string
        message:
          type: string
      title: SubscriptionCommissionProgram
    SubscriptionPlan:
      type: object
      properties:
        active:
          type: boolean
          description: If the subscription plan is active or not.
        allow_prorating:
          type: boolean
          description: Whether or not the plan will allow prorating.
        cycle_type:
          type: string
          description: 'The cycle type of the subscription plan. Possible values:
            YEAR, MONTH, WEEK, DAY'
          enum:
          - DAILY
          - WEEKLY
          - MONTHLY
          - YEARLY
        display_order_index:
          type: integer
          format: int32
          description: The order index where this plan will be displayed on a page
            against other plans. Smaller number indicates plan will be displayed higher
            in the list.
        frequency:
          type: integer
          format: int32
          description: Total number of times of a cycle type which constitutes a plan
            cycle. Minimum value is 1.
        id:
          type: string
          description: Id of the subscription plan.
        plan_price:
          $ref: '#/components/schemas/CurrencyValue'
        product_id:
          type: string
        total_cycles:
          type: integer
          format: int32
          description: Total number of cycles the plan will run before ending. Value
            of 0 indicates plan will never end.
      title: SubscriptionPlan
    Tag:
      type: object
      properties:
        category:
          $ref: '#/components/schemas/CategoryReference'
        create_time:
          type: string
          description: The time this tag was created, in ISO 8601 format
        description:
          type: string
          description: A description of this tag
        id:
          type: string
          description: The unique identifier for this tag
        name:
          type: string
          description: The unique name of this tag
        update_time:
          type: string
          description: The time this tag was last updated, in ISO 8601 format
      title: Tag
    TaggedCompany:
      type: object
      properties:
        applied_time:
          type: string
        company:
          $ref: '#/components/schemas/Company'
      title: TaggedCompany
    Task:
      type: object
      properties:
        assigned_to_user_id:
          type: string
        completed:
          type: boolean
        completion_time:
          type: string
        contact_id:
          type: string
        create_time:
          type: string
          description: On initial object the returned value for this property may
            not accurately represent the exact stored value.
        created_by_user_id:
          type: string
        description:
          type: string
        due_time:
          type: string
        id:
          type: string
        modification_time:
          type: string
        priority:
          type: string
          enum:
          - CRITICAL
          - ESSENTIAL
          - NONESSENTIAL
        remind_time_mins:
          type: integer
          format: int32
        title:
          type: string
        type:
          type: string
      title: Task
    Throwable:
      type: object
      properties:
        cause:
          $ref: '#/components/schemas/Throwable'
        localizedMessage:
          type: string
        message:
          type: string
        stackTrace:
          type: array
          items:
            $ref: '#/components/schemas/StackTraceElement'
        suppressed:
          type: array
          items:
            $ref: '#/components/schemas/Throwable'
      title: Throwable
    URI:
      type: object
      properties:
        absolute:
          type: boolean
        authority:
          type: string
        fragment:
          type: string
        host:
          type: string
        opaque:
          type: boolean
        path:
          type: string
        port:
          type: integer
          format: int32
        query:
          type: string
        rawAuthority:
          type: string
        rawFragment:
          type: string
        rawPath:
          type: string
        rawQuery:
          type: string
        rawSchemeSpecificPart:
          type: string
        rawUserInfo:
          type: string
        scheme:
          type: string
        schemeSpecificPart:
          type: string
        userInfo:
          type: string
      title: URI
    URL:
      type: object
      properties:
        authority:
          type: string
        content:
          type: object
        defaultPort:
          type: integer
          format: int32
        file:
          type: string
        host:
          type: string
        path:
          type: string
        port:
          type: integer
          format: int32
        protocol:
          type: string
        query:
          type: string
        ref:
          type: string
        userInfo:
          type: string
      title: URL
    UpdateAffiliateRequest:
      type: object
      required:
      - code
      - status
      properties:
        code:
          type: string
          example: M123
          description: |-
            The Affiliate code which have some validations.
            1. The code should not have white spaces
            2. The code should starts with letters
            3. The code minimum 4 characters length
        contact_id:
          type: string
          example: 1
          description: The contactId identifier , Must be a positive number
        name:
          type: string
          example: Affiliate Name
          description: The Affiliate name will be derived from the Contact, when not
            explicitly provided
        status:
          type: string
          example: ACTIVE
          description: The Affiliate Status
          enum:
          - ACTIVE
          - INACTIVE
      title: UpdateAffiliateRequest
    UpdateBusinessProfileRequest:
      type: object
      properties:
        address:
          $ref: '#/components/schemas/BusinessProfileAddressRequest'
        business_goals:
          type: array
          description: The goals of this business, ie. Grow Business, Convert more
            leads
          items:
            type: string
        business_primary_color:
          type: string
        business_secondary_color:
          type: string
        currency_code:
          type: string
          example: USD
          description: ISO 4217 Currency Code
        email:
          type: string
        name:
          type: string
        phone:
          type: string
        website:
          type: string
      title: UpdateBusinessProfileRequest
      description: Update profile information about the business that owns/uses this
        account
    UpdateCategoryDiscountRequest:
      type: object
      properties:
        apply_to_commissions:
          type: boolean
        criteria:
          type: array
          items:
            $ref: '#/components/schemas/DiscountCriteria'
        description:
          type: string
        discount_percent:
          type: number
          format: double
          description: The discount percent. Must be greater than or equal to 0.
        name:
          type: string
        product_category_ids:
          type: array
          items:
            type: string
      title: UpdateCategoryDiscountRequest
    UpdateCommissionProgramRequest:
      type: object
      required:
      - name
      properties:
        name:
          type: string
          example: Fitness program
          description: The name of the Commission Program
        notes:
          type: string
          example: 20% default commission
          description: The notes of the Commission Program
        priority:
          type: integer
          format: int32
          example: 100
          description: The priority of the Commission Program
      title: UpdateCommissionProgramRequest
    UpdateCompanyRequest:
      type: object
      properties:
        address:
          $ref: '#/components/schemas/Address'
        company_name:
          type: string
        custom_fields:
          type: array
          items:
            $ref: '#/components/schemas/CustomFieldValue'
        email_address:
          $ref: '#/components/schemas/EmailAddress'
        fax_number:
          $ref: '#/components/schemas/FaxNumber'
        notes:
          type: string
        phone_number:
          $ref: '#/components/schemas/PhoneNumber'
        website:
          type: string
      title: UpdateCompanyRequest
    UpdateCustomFieldMetaDataRequest:
      type: object
      required:
      - group_id
      properties:
        group_id:
          type: string
        label:
          type: string
        options:
          type: array
          items:
            $ref: '#/components/schemas/CustomFieldOption'
      title: UpdateCustomFieldMetaDataRequest
    UpdateDefaultCommissionProgramRequest:
      type: object
      properties:
        dollar_amount:
          type: string
        percentage:
          type: string
      title: UpdateDefaultCommissionProgramRequest
    UpdateEmailAddress:
      type: object
      required:
      - opted_in
      - reason
      properties:
        opted_in:
          type: boolean
        reason:
          type: string
      title: UpdateEmailAddress
    UpdateFreeTrialDiscountRequest:
      type: object
      properties:
        criteria:
          type: array
          items:
            $ref: '#/components/schemas/DiscountCriteria'
        description:
          type: string
        free_trial_days:
          type: integer
          format: int32
        hide_price:
          type: boolean
        name:
          type: string
        subscription_plan_id:
          type: string
      title: UpdateFreeTrialDiscountRequest
    UpdateLeadSourceExpenseRequest:
      type: object
      properties:
        amount:
          type: integer
          format: int64
          description: The monthly cost of the lead source recurring expense. The
            value should be in the smallest unit of currency for your currency locale.
            For example, if your currency locale is USD, then the smallest unit of
            currency is in cents, $225.50 would be provided in the request as 22550.
        incurred_time:
          type: string
          description: The time that the lead source expense was incurred
        notes:
          type: string
          description: The notes for the lead source expense
        title:
          type: string
          description: The title of the lead source expense
      title: UpdateLeadSourceExpenseRequest
    UpdateNoteRequest:
      type: object
      required:
      - user_id
      properties:
        contact_id:
          type: string
        is_pinned:
          type: boolean
        text:
          type: string
        title:
          type: string
          description: A value for either `title` or `type` is required.
        type:
          type: string
          description: A value for either `title` or `type` is required. The value
            may be one of `Appointment`, `Call`, `Email`, `Fax`, `Letter` or `Other`
            in Keap Max/Pro, or an admin-configured value in Classic.
        user_id:
          type: string
      title: UpdateNoteRequest
    UpdateNoteResponse:
      type: object
      properties:
        assigned_to_user:
          $ref: '#/components/schemas/BasicUser'
        contact_id:
          type: string
        create_time:
          type: string
        created_by_user_id:
          type: string
        id:
          type: string
        last_updated_by_user_id:
          type: string
        pinned_at:
          type: string
        text:
          type: string
        title:
          type: string
        type:
          type: string
        update_time:
          type: string
      title: UpdateNoteResponse
    UpdateOpportunityRequestV2:
      type: object
      properties:
        affiliate_id:
          type: string
        contact_id:
          type: string
        custom_fields:
          type: array
          items:
            $ref: '#/components/schemas/CustomField'
        estimated_close_time:
          type: string
        include_in_forecast:
          type: boolean
        next_action_notes:
          type: string
        next_action_time:
          type: string
        opportunity_notes:
          type: string
        opportunity_title:
          type: string
        projected_revenue_high:
          type: number
          format: double
        projected_revenue_low:
          type: number
          format: double
        stage_id:
          type: string
        user_id:
          type: string
      title: UpdateOpportunityRequestV2
    UpdateOpportunityStageChecklistItem:
      type: object
      properties:
        description:
          type: string
        id:
          type: string
        order:
          type: integer
          format: int32
        required:
          type: boolean
      title: UpdateOpportunityStageChecklistItem
    UpdateOpportunityStageRequest:
      type: object
      properties:
        checklist_items:
          type: array
          items:
            $ref: '#/components/schemas/UpdateOpportunityStageChecklistItem'
        name:
          type: string
          example: Qualified
        order:
          type: integer
          format: int32
        probability:
          type: integer
          format: int32
          example: 2
          description: must be an integer between 0 and 100.
        target_number_days:
          type: integer
          format: int32
          description: Value should be >=0.
      title: UpdateOpportunityStageRequest
    UpdateOrderItemRequest:
      type: object
      properties:
        charge_inventory:
          type: boolean
          description: Determine if the order item has an impact on inventory.
        cost_per_unit:
          type: number
          format: double
        description:
          type: string
        name:
          type: string
        note:
          type: string
        price_per_unit:
          type: number
          format: double
        quantity:
          type: integer
          format: int32
        type:
          type: string
          enum:
          - UNKNOWN
          - SHIPPING
          - TAX
          - SERVICE
          - PRODUCT
          - UPSELL
          - FINANCE_CHARGE
          - DISCOUNT
          - PROGRAM
          - SUBSCRIPTION
          - DISCOUNT_FREE_TRIAL
          - DISCOUNT_ORDER_TOTAL
          - DISCOUNT_PRODUCT
          - DISCOUNT_PRODUCT_CATEGORY
          - DISCOUNT_SHIPPING
          - TIP
          - OTHER
      title: UpdateOrderItemRequest
    UpdateOrderRequest:
      type: object
      properties:
        contact_id:
          type: string
        lead_affiliate_id:
          type: string
        notes:
          type: string
        order_time:
          type: string
          description: ISO date-time of the transaction. e.g 2024-04-28 11:25:44
        order_title:
          type: string
        order_type:
          type: string
          enum:
          - OFFLINE
          - ONLINE
        payment_plan:
          $ref: '#/components/schemas/UpdatedPaymentPlan'
        promo_codes:
          type: array
          description: Uses multiple strings as promo codes. The corresponding discount
            will be applied to the order.
          items:
            type: string
        sales_affiliate_id:
          type: string
        shipping_address:
          $ref: '#/components/schemas/AddressInformation'
        terms:
          type: string
      title: UpdateOrderRequest
    UpdateOrderTotalDiscountRequest:
      type: object
      properties:
        apply_to_commissions:
          type: boolean
        criteria:
          type: array
          items:
            $ref: '#/components/schemas/DiscountCriteria'
        description:
          type: string
        discount_strategy:
          type: string
          enum:
          - GROSS
          - NET
        discount_type:
          type: string
          enum:
          - AMOUNT
          - PERCENT
        discount_value:
          type: number
          format: double
        name:
          type: string
      title: UpdateOrderTotalDiscountRequest
    UpdateProductCategoryRequest:
      type: object
      properties:
        display_order_index:
          type: integer
          format: int32
        name:
          type: string
        parent_category_id:
          type: string
      title: UpdateProductCategoryRequest
    UpdateProductCommissionProgramRequest:
      type: object
      properties:
        dollar_amount:
          type: string
        percentage:
          type: string
        product_id:
          type: string
      title: UpdateProductCommissionProgramRequest
    UpdateProductDiscountRequest:
      type: object
      properties:
        apply_to_commissions:
          type: boolean
        criteria:
          type: array
          items:
            $ref: '#/components/schemas/DiscountCriteria'
        description:
          type: string
        discount_type:
          type: string
          enum:
          - AMOUNT
          - PERCENT
        discount_value:
          type: number
          format: double
        name:
          type: string
        product_id:
          type: string
      title: UpdateProductDiscountRequest
    UpdateProductInterestBundleRequest:
      type: object
      properties:
        description:
          type: string
          description: Product interest bundle description
        name:
          type: string
          description: Product interest bundle name
      title: UpdateProductInterestBundleRequest
    UpdateProductInterestRequest:
      type: object
      properties:
        discount_percent:
          type: integer
          format: int32
        price:
          type: number
          format: double
        quantity:
          type: integer
          format: int32
      title: UpdateProductInterestRequest
    UpdateProductInventoryRequest:
      type: object
      required:
      - quantity
      - type
      properties:
        quantity:
          type: integer
          format: int32
          description: The amount to increment or decrement by. Must be greater than
            or equal to 0.
        type:
          type: string
          description: The direction to alter the quantity in
          enum:
          - INCREASE
          - DECREASE
      title: UpdateProductInventoryRequest
    UpdateProductRequest:
      type: object
      properties:
        active:
          type: boolean
          description: True means active, False means inactive
        city_taxable:
          type: boolean
          description: If city-based taxes should be applied to this product
        country_taxable:
          type: boolean
          description: If country-based taxes should be applied to this product
        description:
          type: string
          description: Product long description
        email_for_inventory_notifications:
          type: string
          description: The email address for notifications about inventory
        inventory_limit:
          type: integer
          format: int32
          description: The inventory limit for this product. Must be greater than
            or equal to 0.
        name:
          type: string
          description: Product name
        out_of_stock_enabled:
          type: boolean
          description: The flag to enable out of stock inventory
        price:
          type: integer
          format: int64
          description: The product price. The value is in the currency’s smallest
            unit. e.g. $12.50 is 1250. Must be greater than or equal to 0.
        shippable:
          type: boolean
          description: If the product requires shipping
        short_description:
          type: string
          description: Product short description
        sku:
          type: string
          description: Product SKU
        state_taxable:
          type: boolean
          description: If state-based taxes should be applied to this product
        storefront_hidden:
          type: boolean
          description: If the product should not be shown in the storefront
        subscription_only:
          type: boolean
          description: If the product is a subscription-only product
        taxable:
          type: boolean
          description: Whether or not the product should be taxed
        weight:
          type: number
          format: double
          description: The product weight. Must be greater than or equal to 0.
      title: UpdateProductRequest
    UpdateShippingDiscountRequest:
      type: object
      properties:
        criteria:
          type: array
          items:
            $ref: '#/components/schemas/DiscountCriteria'
        description:
          type: string
        discount_type:
          type: string
          enum:
          - AMOUNT
          - PERCENT
        discount_value:
          type: number
          format: double
        name:
          type: string
      title: UpdateShippingDiscountRequest
    UpdateSubscriptionCommissionProgramRequest:
      type: object
      properties:
        dollar_amount:
          type: string
        percentage:
          type: string
        subscription_id:
          type: string
      title: UpdateSubscriptionCommissionProgramRequest
    UpdateSubscriptionPlanRequest:
      type: object
      required:
      - cycle_type
      - plan_price
      properties:
        active:
          type: boolean
          description: Whether the subscription plan is active.
        allow_prorating:
          type: boolean
          description: Allow prorating of the subscription plan.
        cycle_type:
          type: string
          description: The cycle type of the subscription plan.
          enum:
          - DAILY
          - WEEKLY
          - MONTHLY
          - YEARLY
        display_order_index:
          type: integer
          format: int32
          description: The order that this plan will be displayed to the user.
        frequency:
          type: integer
          format: int32
          description: The frequency of the subscription plan. Must be greater than
            0.
        plan_price:
          type: number
          format: double
          description: The price of the subscription plan in the smallest currency
            unit. Must be greater than or equal to 0.
        total_cycles:
          type: integer
          format: int32
          description: How many cycles the subscription plan will have. 0 means infinite.
      title: UpdateSubscriptionPlanRequest
    UpdateSubscriptionRequest:
      type: object
      required:
      - contact_id
      properties:
        active:
          type: boolean
          description: If the subscription is active or not.
        allow_tax:
          type: boolean
          description: Only works if the product associated with the product subscription
            is taxable.
        auto_charge:
          type: boolean
          description: If the subscription should auto charge on the next billing
            date.
        billing_amount:
          type: number
          format: double
          description: The billing amount. Must be 0 or greater.
        billing_cycle:
          type: string
          description: The billing cycle for the subscription.
          enum:
          - YEAR
          - MONTH
          - WEEK
          - DAY
        billing_frequency:
          type: integer
          format: int32
          description: The number of days between billing cycles. Must be 1 or greater.
        contact_id:
          type: string
          description: Id of the contact to create the subscription for.
        days_between_retries:
          type: integer
          format: int32
          description: Number of days between charge attempts. Must be 1 or greater.
        end_date:
          type: string
          description: The date the subscription will end. Must not be in the past.
        lead_affiliate_id:
          type: string
          description: The affiliate id for the lead of the subscription.
        max_charge_attempts:
          type: integer
          format: int32
          description: Maximum number of charge attempts. Must be 1 or greater.
        next_bill_date:
          type: string
          description: The next date the subscription will bill. Must not be in the
            past.
        payment_method_id:
          type: string
          description: Id associated with the payment method.
        quantity:
          type: integer
          format: int32
          description: The subscription quantity. Must be 1 or greater.
        sale_affiliate_id:
          type: string
          description: The affiliate id for the sale of the subscription.
        shipping_address:
          $ref: '#/components/schemas/Address'
        subscription_plan_id:
          type: string
          description: Id of the product subscription plan.
      title: UpdateSubscriptionRequest
    UpdateTagCategoryResponse:
      type: object
      properties:
        description:
          type: string
        id:
          type: string
        name:
          type: string
      title: UpdateTagCategoryResponse
    UpdateTagResponse:
      type: object
      properties:
        category:
          $ref: '#/components/schemas/CategoryReference'
        create_time:
          type: string
          description: The time this tag was created, in ISO 8601 format
        description:
          type: string
          description: A description of this tag
        id:
          type: string
          description: The unique identifier for this tag
        name:
          type: string
          description: The unique name of this tag
        update_time:
          type: string
          description: The time this tag was last updated, in ISO 8601 format
      title: UpdateTagResponse
    UpdateTaskResponse:
      type: object
      properties:
        assigned_to_user_id:
          type: string
        completed:
          type: boolean
        completion_time:
          type: string
        contact_id:
          type: string
        create_time:
          type: string
          description: On initial object the returned value for this property may
            not accurately represent the exact stored value.
        created_by_user_id:
          type: string
        description:
          type: string
        due_time:
          type: string
        id:
          type: string
        modification_time:
          type: string
        priority:
          type: string
          enum:
          - CRITICAL
          - ESSENTIAL
          - NONESSENTIAL
        remind_time_mins:
          type: integer
          format: int32
        title:
          type: string
        type:
          type: string
      title: UpdateTaskResponse
    UpdateUserRequest:
      type: object
      properties:
        address:
          $ref: '#/components/schemas/Address'
        company_name:
          type: string
        email_address:
          $ref: '#/components/schemas/EmailAddressRequest'
        family_name:
          type: string
        fax_numbers:
          type: array
          items:
            $ref: '#/components/schemas/FaxNumber'
        given_name:
          type: string
        phone_numbers:
          type: array
          items:
            $ref: '#/components/schemas/PhoneNumber'
        time_zone:
          type: string
        title:
          type: string
        website:
          type: string
      title: UpdateUserRequest
    UpdatedPaymentPlan:
      type: object
      properties:
        auto_charge:
          type: boolean
        days_between_payments:
          type: integer
          format: int64
        days_between_retries:
          type: integer
          format: int64
        initial_payment_amount:
          type: number
          format: double
        initial_payment_date:
          type: string
          description: ISO date of the initial payment in pay plan. e.g 2024-04-28
        max_charge_attempts:
          type: integer
          format: int64
        number_of_payments:
          type: integer
          format: int64
        payment_method_id:
          type: string
        plan_start_date:
          type: string
          description: ISO date of the start of pay plan. e.g 2024-04-28
      title: UpdatedPaymentPlan
    User:
      type: object
      properties:
        address:
          $ref: '#/components/schemas/Address'
        admin:
          type: boolean
        company_name:
          type: string
        create_time:
          type: string
        created_by:
          type: integer
          format: int64
        email_addresses:
          type: array
          items:
            $ref: '#/components/schemas/EmailAddress'
        family_name:
          type: string
        fax_numbers:
          type: array
          items:
            $ref: '#/components/schemas/FaxNumber'
        given_name:
          type: string
        global_user_id:
          type: string
        id:
          type: string
        keap_id:
          type: string
        partner:
          type: boolean
        phone_numbers:
          type: array
          items:
            $ref: '#/components/schemas/PhoneNumber'
        social_accounts:
          type: array
          items:
            $ref: '#/components/schemas/SocialAccount'
        status:
          type: string
          enum:
          - ACTIVE
          - INVITED
          - INACTIVE
          - NOT_A_USER
        title:
          type: string
        update_time:
          type: string
        updated_by:
          type: integer
          format: int64
        website:
          type: string
      title: User
