/**
 * Keap REST API
 * Keap REST Core Service
 *
 * OpenAPI spec version: 2.70.0.809589
 * Contact: api@keap.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { DisplayProperty } from '../models/DisplayProperty';
import { HttpFile } from '../http/http';

/**
* A group of properties on a display form
*/
export class DisplayGroup {
    /**
    * Unique identifier for the display group.
    */
    'id'?: string;
    /**
    * Determines the order for where this display group shows up on the form.
    */
    'sortOrder'?: number;
    /**
    * The title of the display group.
    */
    'title'?: string;
    /**
    * The description of the display group.
    */
    'description'?: string;
    /**
    * A list of properties that will be displayed in this group.
    */
    'properties'?: Array<DisplayProperty>;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "string",
            "format": ""
        },
        {
            "name": "sortOrder",
            "baseName": "sort_order",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "title",
            "baseName": "title",
            "type": "string",
            "format": ""
        },
        {
            "name": "description",
            "baseName": "description",
            "type": "string",
            "format": ""
        },
        {
            "name": "properties",
            "baseName": "properties",
            "type": "Array<DisplayProperty>",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return DisplayGroup.attributeTypeMap;
    }

    public constructor() {
    }
}
