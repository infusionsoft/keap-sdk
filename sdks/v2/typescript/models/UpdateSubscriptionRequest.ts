/**
 * Keap REST API
 * Keap REST Core Service
 *
 * OpenAPI spec version: 2.70.0.866784-hf-202510132126
 * Contact: api@keap.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { AddressRequest } from '../models/AddressRequest';
import { HttpFile } from '../http/http';

export class UpdateSubscriptionRequest {
    /**
    * If the subscription is active or not.
    */
    'active'?: boolean;
    /**
    * Only works if the product associated with the product subscription is taxable.
    */
    'allowTax'?: boolean;
    /**
    * If the subscription should auto charge on the next billing date.
    */
    'autoCharge'?: boolean;
    /**
    * The billing amount. Must be 0 or greater.
    */
    'billingAmount'?: number;
    /**
    * The billing cycle for the subscription.
    */
    'billingCycle'?: UpdateSubscriptionRequestBillingCycleEnum;
    /**
    * The number of days between billing cycles. Must be 1 or greater.
    */
    'billingFrequency'?: number;
    /**
    * Id of the contact to create the subscription for.
    */
    'contactId': string;
    /**
    * Number of days between charge attempts. Must be 1 or greater.
    */
    'daysBetweenRetries'?: number;
    /**
    * The date the subscription will end. Must not be in the past.
    */
    'endDate'?: string;
    /**
    * The affiliate id for the lead of the subscription.
    */
    'leadAffiliateId'?: string;
    /**
    * Maximum number of charge attempts. Must be 1 or greater.
    */
    'maxChargeAttempts'?: number;
    /**
    * The next date the subscription will bill. Must not be in the past.
    */
    'nextBillDate'?: string;
    /**
    * Id associated with the payment method.
    */
    'paymentMethodId'?: string;
    /**
    * The subscription quantity. Must be 1 or greater.
    */
    'quantity'?: number;
    /**
    * The affiliate id for the sale of the subscription.
    */
    'saleAffiliateId'?: string;
    'shippingAddress'?: AddressRequest;
    /**
    * Id of the product subscription plan.
    */
    'subscriptionPlanId'?: string;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "active",
            "baseName": "active",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "allowTax",
            "baseName": "allow_tax",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "autoCharge",
            "baseName": "auto_charge",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "billingAmount",
            "baseName": "billing_amount",
            "type": "number",
            "format": "double"
        },
        {
            "name": "billingCycle",
            "baseName": "billing_cycle",
            "type": "UpdateSubscriptionRequestBillingCycleEnum",
            "format": ""
        },
        {
            "name": "billingFrequency",
            "baseName": "billing_frequency",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "contactId",
            "baseName": "contact_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "daysBetweenRetries",
            "baseName": "days_between_retries",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "endDate",
            "baseName": "end_date",
            "type": "string",
            "format": ""
        },
        {
            "name": "leadAffiliateId",
            "baseName": "lead_affiliate_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "maxChargeAttempts",
            "baseName": "max_charge_attempts",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "nextBillDate",
            "baseName": "next_bill_date",
            "type": "string",
            "format": ""
        },
        {
            "name": "paymentMethodId",
            "baseName": "payment_method_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "quantity",
            "baseName": "quantity",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "saleAffiliateId",
            "baseName": "sale_affiliate_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "shippingAddress",
            "baseName": "shipping_address",
            "type": "AddressRequest",
            "format": ""
        },
        {
            "name": "subscriptionPlanId",
            "baseName": "subscription_plan_id",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return UpdateSubscriptionRequest.attributeTypeMap;
    }

    public constructor() {
    }
}

export enum UpdateSubscriptionRequestBillingCycleEnum {
    Year = 'YEAR',
    Month = 'MONTH',
    Week = 'WEEK',
    Day = 'DAY'
}

