/*
 * Keap REST API
 *
 * Keap REST Core Service
 *
 * The version of the OpenAPI document: 2.70.0.809589
 * Contact: api@keap.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Keap.Core.V2.Client.OpenAPIDateConverter;

namespace Keap.Core.V2.Model
{
    /// <summary>
    /// Class representing an option for a custom field.
    /// </summary>
    [DataContract(Name = "PipelineCustomFieldOption")]
    public partial class PipelineCustomFieldOption : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="PipelineCustomFieldOption" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected PipelineCustomFieldOption() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="PipelineCustomFieldOption" /> class.
        /// </summary>
        /// <param name="id">The identifier of the custom field option. (required).</param>
        /// <param name="title">The title of the custom field option. (required).</param>
        /// <param name="subtitle">The subtitle of the custom field option. (required).</param>
        /// <param name="sortOrder">The sort order of the custom field option. (required).</param>
        public PipelineCustomFieldOption(string id = default, string title = default, string subtitle = default, int sortOrder = default)
        {
            // to ensure "id" is required (not null)
            if (id == null)
            {
                throw new ArgumentNullException("id is a required property for PipelineCustomFieldOption and cannot be null");
            }
            this.Id = id;
            // to ensure "title" is required (not null)
            if (title == null)
            {
                throw new ArgumentNullException("title is a required property for PipelineCustomFieldOption and cannot be null");
            }
            this.Title = title;
            // to ensure "subtitle" is required (not null)
            if (subtitle == null)
            {
                throw new ArgumentNullException("subtitle is a required property for PipelineCustomFieldOption and cannot be null");
            }
            this.Subtitle = subtitle;
            this.SortOrder = sortOrder;
        }

        /// <summary>
        /// The identifier of the custom field option.
        /// </summary>
        /// <value>The identifier of the custom field option.</value>
        [DataMember(Name = "id", IsRequired = true, EmitDefaultValue = true)]
        public string Id { get; set; }

        /// <summary>
        /// The title of the custom field option.
        /// </summary>
        /// <value>The title of the custom field option.</value>
        [DataMember(Name = "title", IsRequired = true, EmitDefaultValue = true)]
        public string Title { get; set; }

        /// <summary>
        /// The subtitle of the custom field option.
        /// </summary>
        /// <value>The subtitle of the custom field option.</value>
        [DataMember(Name = "subtitle", IsRequired = true, EmitDefaultValue = true)]
        public string Subtitle { get; set; }

        /// <summary>
        /// The sort order of the custom field option.
        /// </summary>
        /// <value>The sort order of the custom field option.</value>
        [DataMember(Name = "sort_order", IsRequired = true, EmitDefaultValue = true)]
        public int SortOrder { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class PipelineCustomFieldOption {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Title: ").Append(Title).Append("\n");
            sb.Append("  Subtitle: ").Append(Subtitle).Append("\n");
            sb.Append("  SortOrder: ").Append(SortOrder).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }    }

}
