/*
 * Keap REST API
 *
 * Keap REST Core Service
 *
 * The version of the OpenAPI document: 2.70.0.812056
 * Contact: api@keap.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Keap.Core.V2.Client.OpenAPIDateConverter;

namespace Keap.Core.V2.Model
{
    /// <summary>
    /// Represents a custom field in the system. This class extends the BaseModel and includes various properties related to custom fields.
    /// </summary>
    [DataContract(Name = "PipelineCustomField")]
    public partial class PipelineCustomField : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="PipelineCustomField" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected PipelineCustomField() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="PipelineCustomField" /> class.
        /// </summary>
        /// <param name="id">The identifier of the custom field. (required).</param>
        /// <param name="name">The name of the custom field. This field is optional..</param>
        /// <param name="type">The type of the custom field. This field is optional and must be a valid PipelineCustomFieldType..</param>
        /// <param name="label">The label of the custom field. This field is optional..</param>
        /// <param name="description">The description of the custom field. This field is optional..</param>
        /// <param name="helperText">The helper text for the custom field. This field is optional and is serialized to JSON as \&quot;helper_text\&quot;..</param>
        /// <param name="defaultValue">The default value of the custom field. This field is optional and must be a valid Object. (required).</param>
        /// <param name="validators">The list of validators for the custom field. This field is optional and must be a list of valid PipelineCustomFieldPropertyValidator..</param>
        /// <param name="displayOptions">The display options for the custom field. This field is optional and must be a valid DisplayOptions..</param>
        /// <param name="options">The options for the custom field. This field is optional and must be a valid PipelineCustomFieldOptions..</param>
        public PipelineCustomField(string id = default, string name = default, PipelineCustomFieldType type = default, string label = default, string description = default, string helperText = default, Object defaultValue = default, List<PipelineCustomFieldPropertyValidator> validators = default, PipelineCustomFieldDisplayOptions displayOptions = default, PipelineCustomFieldOptions options = default)
        {
            // to ensure "id" is required (not null)
            if (id == null)
            {
                throw new ArgumentNullException("id is a required property for PipelineCustomField and cannot be null");
            }
            this.Id = id;
            // to ensure "defaultValue" is required (not null)
            if (defaultValue == null)
            {
                throw new ArgumentNullException("defaultValue is a required property for PipelineCustomField and cannot be null");
            }
            this.DefaultValue = defaultValue;
            this.Name = name;
            this.Type = type;
            this.Label = label;
            this.Description = description;
            this.HelperText = helperText;
            this.Validators = validators;
            this.DisplayOptions = displayOptions;
            this.Options = options;
        }

        /// <summary>
        /// The identifier of the custom field.
        /// </summary>
        /// <value>The identifier of the custom field.</value>
        [DataMember(Name = "id", IsRequired = true, EmitDefaultValue = true)]
        public string Id { get; set; }

        /// <summary>
        /// The name of the custom field. This field is optional.
        /// </summary>
        /// <value>The name of the custom field. This field is optional.</value>
        [DataMember(Name = "name", EmitDefaultValue = true)]
        public string Name { get; set; }

        /// <summary>
        /// The type of the custom field. This field is optional and must be a valid PipelineCustomFieldType.
        /// </summary>
        /// <value>The type of the custom field. This field is optional and must be a valid PipelineCustomFieldType.</value>
        [DataMember(Name = "type", EmitDefaultValue = true)]
        public PipelineCustomFieldType Type { get; set; }

        /// <summary>
        /// The label of the custom field. This field is optional.
        /// </summary>
        /// <value>The label of the custom field. This field is optional.</value>
        [DataMember(Name = "label", EmitDefaultValue = true)]
        public string Label { get; set; }

        /// <summary>
        /// The description of the custom field. This field is optional.
        /// </summary>
        /// <value>The description of the custom field. This field is optional.</value>
        [DataMember(Name = "description", EmitDefaultValue = true)]
        public string Description { get; set; }

        /// <summary>
        /// The helper text for the custom field. This field is optional and is serialized to JSON as \&quot;helper_text\&quot;.
        /// </summary>
        /// <value>The helper text for the custom field. This field is optional and is serialized to JSON as \&quot;helper_text\&quot;.</value>
        [DataMember(Name = "helper_text", EmitDefaultValue = true)]
        public string HelperText { get; set; }

        /// <summary>
        /// The default value of the custom field. This field is optional and must be a valid Object.
        /// </summary>
        /// <value>The default value of the custom field. This field is optional and must be a valid Object.</value>
        [DataMember(Name = "default_value", IsRequired = true, EmitDefaultValue = true)]
        public Object DefaultValue { get; set; }

        /// <summary>
        /// The list of validators for the custom field. This field is optional and must be a list of valid PipelineCustomFieldPropertyValidator.
        /// </summary>
        /// <value>The list of validators for the custom field. This field is optional and must be a list of valid PipelineCustomFieldPropertyValidator.</value>
        [DataMember(Name = "validators", EmitDefaultValue = true)]
        public List<PipelineCustomFieldPropertyValidator> Validators { get; set; }

        /// <summary>
        /// The display options for the custom field. This field is optional and must be a valid DisplayOptions.
        /// </summary>
        /// <value>The display options for the custom field. This field is optional and must be a valid DisplayOptions.</value>
        [DataMember(Name = "display_options", EmitDefaultValue = true)]
        public PipelineCustomFieldDisplayOptions DisplayOptions { get; set; }

        /// <summary>
        /// The options for the custom field. This field is optional and must be a valid PipelineCustomFieldOptions.
        /// </summary>
        /// <value>The options for the custom field. This field is optional and must be a valid PipelineCustomFieldOptions.</value>
        [DataMember(Name = "options", EmitDefaultValue = true)]
        public PipelineCustomFieldOptions Options { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class PipelineCustomField {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  Type: ").Append(Type).Append("\n");
            sb.Append("  Label: ").Append(Label).Append("\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("  HelperText: ").Append(HelperText).Append("\n");
            sb.Append("  DefaultValue: ").Append(DefaultValue).Append("\n");
            sb.Append("  Validators: ").Append(Validators).Append("\n");
            sb.Append("  DisplayOptions: ").Append(DisplayOptions).Append("\n");
            sb.Append("  Options: ").Append(Options).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }    }

}
