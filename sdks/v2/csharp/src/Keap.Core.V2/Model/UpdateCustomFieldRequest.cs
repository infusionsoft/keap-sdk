/*
 * Keap REST API
 *
 * Keap REST Core Service
 *
 * The version of the OpenAPI document: 2.70.0.809589
 * Contact: api@keap.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Keap.Core.V2.Client.OpenAPIDateConverter;

namespace Keap.Core.V2.Model
{
    /// <summary>
    /// Represents a request to update a custom field.
    /// </summary>
    [DataContract(Name = "UpdateCustomFieldRequest")]
    public partial class UpdateCustomFieldRequest : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="UpdateCustomFieldRequest" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected UpdateCustomFieldRequest() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="UpdateCustomFieldRequest" /> class.
        /// </summary>
        /// <param name="label">The label of the custom field. (required).</param>
        /// <param name="description">The description of the custom field. (required).</param>
        /// <param name="hint">The hint for the custom field. (required).</param>
        /// <param name="helperText">The helper text for the custom field. (required).</param>
        /// <param name="defaultValue">The default value of the custom field. (required).</param>
        /// <param name="displayOptions">The display options for the custom field. (required).</param>
        /// <param name="options">The options for the custom field. (required).</param>
        /// <param name="validators">The validators for the custom field. (required).</param>
        /// <param name="deleted">Indicates whether the custom field is deleted. (required).</param>
        public UpdateCustomFieldRequest(string label = default, string description = default, string hint = default, string helperText = default, Object defaultValue = default, PipelineCustomFieldDisplayOptions displayOptions = default, PipelineCustomFieldOptions options = default, List<PipelineCustomFieldPropertyValidator> validators = default, bool deleted = default)
        {
            // to ensure "label" is required (not null)
            if (label == null)
            {
                throw new ArgumentNullException("label is a required property for UpdateCustomFieldRequest and cannot be null");
            }
            this.Label = label;
            // to ensure "description" is required (not null)
            if (description == null)
            {
                throw new ArgumentNullException("description is a required property for UpdateCustomFieldRequest and cannot be null");
            }
            this.Description = description;
            // to ensure "hint" is required (not null)
            if (hint == null)
            {
                throw new ArgumentNullException("hint is a required property for UpdateCustomFieldRequest and cannot be null");
            }
            this.Hint = hint;
            // to ensure "helperText" is required (not null)
            if (helperText == null)
            {
                throw new ArgumentNullException("helperText is a required property for UpdateCustomFieldRequest and cannot be null");
            }
            this.HelperText = helperText;
            // to ensure "defaultValue" is required (not null)
            if (defaultValue == null)
            {
                throw new ArgumentNullException("defaultValue is a required property for UpdateCustomFieldRequest and cannot be null");
            }
            this.DefaultValue = defaultValue;
            // to ensure "displayOptions" is required (not null)
            if (displayOptions == null)
            {
                throw new ArgumentNullException("displayOptions is a required property for UpdateCustomFieldRequest and cannot be null");
            }
            this.DisplayOptions = displayOptions;
            // to ensure "options" is required (not null)
            if (options == null)
            {
                throw new ArgumentNullException("options is a required property for UpdateCustomFieldRequest and cannot be null");
            }
            this.Options = options;
            // to ensure "validators" is required (not null)
            if (validators == null)
            {
                throw new ArgumentNullException("validators is a required property for UpdateCustomFieldRequest and cannot be null");
            }
            this.Validators = validators;
            this.Deleted = deleted;
        }

        /// <summary>
        /// The label of the custom field.
        /// </summary>
        /// <value>The label of the custom field.</value>
        [DataMember(Name = "label", IsRequired = true, EmitDefaultValue = true)]
        public string Label { get; set; }

        /// <summary>
        /// The description of the custom field.
        /// </summary>
        /// <value>The description of the custom field.</value>
        [DataMember(Name = "description", IsRequired = true, EmitDefaultValue = true)]
        public string Description { get; set; }

        /// <summary>
        /// The hint for the custom field.
        /// </summary>
        /// <value>The hint for the custom field.</value>
        [DataMember(Name = "hint", IsRequired = true, EmitDefaultValue = true)]
        public string Hint { get; set; }

        /// <summary>
        /// The helper text for the custom field.
        /// </summary>
        /// <value>The helper text for the custom field.</value>
        [DataMember(Name = "helper_text", IsRequired = true, EmitDefaultValue = true)]
        public string HelperText { get; set; }

        /// <summary>
        /// The default value of the custom field.
        /// </summary>
        /// <value>The default value of the custom field.</value>
        [DataMember(Name = "default_value", IsRequired = true, EmitDefaultValue = true)]
        public Object DefaultValue { get; set; }

        /// <summary>
        /// The display options for the custom field.
        /// </summary>
        /// <value>The display options for the custom field.</value>
        [DataMember(Name = "display_options", IsRequired = true, EmitDefaultValue = true)]
        public PipelineCustomFieldDisplayOptions DisplayOptions { get; set; }

        /// <summary>
        /// The options for the custom field.
        /// </summary>
        /// <value>The options for the custom field.</value>
        [DataMember(Name = "options", IsRequired = true, EmitDefaultValue = true)]
        public PipelineCustomFieldOptions Options { get; set; }

        /// <summary>
        /// The validators for the custom field.
        /// </summary>
        /// <value>The validators for the custom field.</value>
        [DataMember(Name = "validators", IsRequired = true, EmitDefaultValue = true)]
        public List<PipelineCustomFieldPropertyValidator> Validators { get; set; }

        /// <summary>
        /// Indicates whether the custom field is deleted.
        /// </summary>
        /// <value>Indicates whether the custom field is deleted.</value>
        [DataMember(Name = "deleted", IsRequired = true, EmitDefaultValue = true)]
        [Obsolete]
        public bool Deleted { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class UpdateCustomFieldRequest {\n");
            sb.Append("  Label: ").Append(Label).Append("\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("  Hint: ").Append(Hint).Append("\n");
            sb.Append("  HelperText: ").Append(HelperText).Append("\n");
            sb.Append("  DefaultValue: ").Append(DefaultValue).Append("\n");
            sb.Append("  DisplayOptions: ").Append(DisplayOptions).Append("\n");
            sb.Append("  Options: ").Append(Options).Append("\n");
            sb.Append("  Validators: ").Append(Validators).Append("\n");
            sb.Append("  Deleted: ").Append(Deleted).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }    }

}
