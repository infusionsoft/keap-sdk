/*
 * Keap REST API
 *
 * Keap REST Core Service
 *
 * The version of the OpenAPI document: 2.70.0.865894-hf-202510091441
 * Contact: api@keap.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Keap.Core.V2.Client.OpenAPIDateConverter;

namespace Keap.Core.V2.Model
{
    /// <summary>
    /// AddProductInterestRequest
    /// </summary>
    [DataContract(Name = "AddProductInterestRequest")]
    public partial class AddProductInterestRequest : IValidatableObject
    {
        /// <summary>
        /// Defines Type
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum TypeEnum
        {
            /// <summary>
            /// Enum PRODUCT for value: PRODUCT
            /// </summary>
            [EnumMember(Value = "PRODUCT")]
            PRODUCT = 1,

            /// <summary>
            /// Enum SUBSCRIPTIONPLAN for value: SUBSCRIPTION_PLAN
            /// </summary>
            [EnumMember(Value = "SUBSCRIPTION_PLAN")]
            SUBSCRIPTIONPLAN = 2
        }

        /// <summary>
        /// Gets or Sets Type
        /// </summary>
        [DataMember(Name = "type", IsRequired = true, EmitDefaultValue = true)]
        public TypeEnum Type { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="AddProductInterestRequest" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected AddProductInterestRequest() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="AddProductInterestRequest" /> class.
        /// </summary>
        /// <param name="discountPercent">Defaults to &#x60;0&#x60;..</param>
        /// <param name="entityId">The &#x60;product_id&#x60; (when the &#x60;type&#x60; is set to &#x60;PRODUCT&#x60;)  or the &#x60;subscription_plan_id&#x60; (when the &#x60;type&#x60; is set to &#x60;SUBSCRIPTION_PLAN&#x60;).  (required).</param>
        /// <param name="price">price (required).</param>
        /// <param name="quantity">Defaults to &#x60;1&#x60;..</param>
        /// <param name="type">type (required).</param>
        public AddProductInterestRequest(int discountPercent = default, string entityId = default, double price = default, int quantity = default, TypeEnum type = default)
        {
            // to ensure "entityId" is required (not null)
            if (entityId == null)
            {
                throw new ArgumentNullException("entityId is a required property for AddProductInterestRequest and cannot be null");
            }
            this.EntityId = entityId;
            this.Price = price;
            this.Type = type;
            this.DiscountPercent = discountPercent;
            this.Quantity = quantity;
        }

        /// <summary>
        /// Defaults to &#x60;0&#x60;.
        /// </summary>
        /// <value>Defaults to &#x60;0&#x60;.</value>
        [DataMember(Name = "discount_percent", EmitDefaultValue = false)]
        public int DiscountPercent { get; set; }

        /// <summary>
        /// The &#x60;product_id&#x60; (when the &#x60;type&#x60; is set to &#x60;PRODUCT&#x60;)  or the &#x60;subscription_plan_id&#x60; (when the &#x60;type&#x60; is set to &#x60;SUBSCRIPTION_PLAN&#x60;). 
        /// </summary>
        /// <value>The &#x60;product_id&#x60; (when the &#x60;type&#x60; is set to &#x60;PRODUCT&#x60;)  or the &#x60;subscription_plan_id&#x60; (when the &#x60;type&#x60; is set to &#x60;SUBSCRIPTION_PLAN&#x60;). </value>
        [DataMember(Name = "entity_id", IsRequired = true, EmitDefaultValue = true)]
        public string EntityId { get; set; }

        /// <summary>
        /// Gets or Sets Price
        /// </summary>
        [DataMember(Name = "price", IsRequired = true, EmitDefaultValue = true)]
        public double Price { get; set; }

        /// <summary>
        /// Defaults to &#x60;1&#x60;.
        /// </summary>
        /// <value>Defaults to &#x60;1&#x60;.</value>
        [DataMember(Name = "quantity", EmitDefaultValue = false)]
        public int Quantity { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class AddProductInterestRequest {\n");
            sb.Append("  DiscountPercent: ").Append(DiscountPercent).Append("\n");
            sb.Append("  EntityId: ").Append(EntityId).Append("\n");
            sb.Append("  Price: ").Append(Price).Append("\n");
            sb.Append("  Quantity: ").Append(Quantity).Append("\n");
            sb.Append("  Type: ").Append(Type).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }    }

}
