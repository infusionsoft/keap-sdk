/*
 * Keap REST API
 *
 * Keap REST Core Service
 *
 * The version of the OpenAPI document: 2.70.0.809589
 * Contact: api@keap.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Keap.Core.V2.Client.OpenAPIDateConverter;

namespace Keap.Core.V2.Model
{
    /// <summary>
    /// UpdateDisplayPropertyRequest
    /// </summary>
    [DataContract(Name = "UpdateDisplayPropertyRequest")]
    public partial class UpdateDisplayPropertyRequest : IValidatableObject
    {

        /// <summary>
        /// Indicates whether this display property is a system or custom field.
        /// </summary>
        /// <value>Indicates whether this display property is a system or custom field.</value>
        [DataMember(Name = "source", IsRequired = true, EmitDefaultValue = true)]
        public DisplayPropertySource Source { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="UpdateDisplayPropertyRequest" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected UpdateDisplayPropertyRequest() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="UpdateDisplayPropertyRequest" /> class.
        /// </summary>
        /// <param name="sortOrder">Determines the order for where this display property shows up on the group..</param>
        /// <param name="id">Identifies the custom field that is tied to this display property..</param>
        /// <param name="source">Indicates whether this display property is a system or custom field. (required).</param>
        /// <param name="systemFieldRecord">Represents the domain (e.g., pipeline, contact) that this display property belongs to..</param>
        /// <param name="systemFieldId">Represents the identifier of the system field that is in that displayProperty. The source of this field will depend on the domain (e. g., \&quot;dealName\&quot; in pipelines).</param>
        /// <param name="label">The label to display on this property to help users identify it.</param>
        /// <param name="description">Documentation that explains the purpose of this property.</param>
        /// <param name="helperText">More detailed explanation of the property to be shown if a user requests more information about it.</param>
        /// <param name="defaultValue">The value of this property if a value is not explicitly provided.</param>
        /// <param name="displayOptions">Allowed values for this property.</param>
        public UpdateDisplayPropertyRequest(int sortOrder = default, string id = default, DisplayPropertySource source = default, string systemFieldRecord = default, string systemFieldId = default, string label = default, string description = default, string helperText = default, Object defaultValue = default, PipelineCustomFieldDisplayOptions displayOptions = default)
        {
            this.Source = source;
            this.SortOrder = sortOrder;
            this.Id = id;
            this.SystemFieldRecord = systemFieldRecord;
            this.SystemFieldId = systemFieldId;
            this.Label = label;
            this.Description = description;
            this.HelperText = helperText;
            this.DefaultValue = defaultValue;
            this.DisplayOptions = displayOptions;
        }

        /// <summary>
        /// Determines the order for where this display property shows up on the group.
        /// </summary>
        /// <value>Determines the order for where this display property shows up on the group.</value>
        [DataMember(Name = "sort_order", EmitDefaultValue = false)]
        public int SortOrder { get; set; }

        /// <summary>
        /// Identifies the custom field that is tied to this display property.
        /// </summary>
        /// <value>Identifies the custom field that is tied to this display property.</value>
        [DataMember(Name = "id", EmitDefaultValue = false)]
        public string Id { get; set; }

        /// <summary>
        /// Represents the domain (e.g., pipeline, contact) that this display property belongs to.
        /// </summary>
        /// <value>Represents the domain (e.g., pipeline, contact) that this display property belongs to.</value>
        [DataMember(Name = "system_field_record", EmitDefaultValue = false)]
        public string SystemFieldRecord { get; set; }

        /// <summary>
        /// Represents the identifier of the system field that is in that displayProperty. The source of this field will depend on the domain (e. g., \&quot;dealName\&quot; in pipelines)
        /// </summary>
        /// <value>Represents the identifier of the system field that is in that displayProperty. The source of this field will depend on the domain (e. g., \&quot;dealName\&quot; in pipelines)</value>
        [DataMember(Name = "system_field_id", EmitDefaultValue = false)]
        public string SystemFieldId { get; set; }

        /// <summary>
        /// The label to display on this property to help users identify it
        /// </summary>
        /// <value>The label to display on this property to help users identify it</value>
        [DataMember(Name = "label", EmitDefaultValue = false)]
        public string Label { get; set; }

        /// <summary>
        /// Documentation that explains the purpose of this property
        /// </summary>
        /// <value>Documentation that explains the purpose of this property</value>
        [DataMember(Name = "description", EmitDefaultValue = false)]
        public string Description { get; set; }

        /// <summary>
        /// More detailed explanation of the property to be shown if a user requests more information about it
        /// </summary>
        /// <value>More detailed explanation of the property to be shown if a user requests more information about it</value>
        [DataMember(Name = "helper_text", EmitDefaultValue = false)]
        public string HelperText { get; set; }

        /// <summary>
        /// The value of this property if a value is not explicitly provided
        /// </summary>
        /// <value>The value of this property if a value is not explicitly provided</value>
        [DataMember(Name = "default_value", EmitDefaultValue = true)]
        public Object DefaultValue { get; set; }

        /// <summary>
        /// Allowed values for this property
        /// </summary>
        /// <value>Allowed values for this property</value>
        [DataMember(Name = "display_options", EmitDefaultValue = false)]
        public PipelineCustomFieldDisplayOptions DisplayOptions { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class UpdateDisplayPropertyRequest {\n");
            sb.Append("  SortOrder: ").Append(SortOrder).Append("\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Source: ").Append(Source).Append("\n");
            sb.Append("  SystemFieldRecord: ").Append(SystemFieldRecord).Append("\n");
            sb.Append("  SystemFieldId: ").Append(SystemFieldId).Append("\n");
            sb.Append("  Label: ").Append(Label).Append("\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("  HelperText: ").Append(HelperText).Append("\n");
            sb.Append("  DefaultValue: ").Append(DefaultValue).Append("\n");
            sb.Append("  DisplayOptions: ").Append(DisplayOptions).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }    }

}
