/*
 * Keap REST API
 *
 * Keap REST Core Service
 *
 * The version of the OpenAPI document: 2.70.0.843039-hf-202508121547
 * Contact: api@keap.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Keap.Core.V2.Client.OpenAPIDateConverter;

namespace Keap.Core.V2.Model
{
    /// <summary>
    /// RestAffiliatePayment
    /// </summary>
    [DataContract(Name = "RestAffiliatePayment")]
    public partial class RestAffiliatePayment : IValidatableObject
    {
        /// <summary>
        /// Defines PayType
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum PayTypeEnum
        {
            /// <summary>
            /// Enum CASH for value: CASH
            /// </summary>
            [EnumMember(Value = "CASH")]
            CASH = 1,

            /// <summary>
            /// Enum CHECK for value: CHECK
            /// </summary>
            [EnumMember(Value = "CHECK")]
            CHECK = 2,

            /// <summary>
            /// Enum CREDITCARD for value: CREDIT_CARD
            /// </summary>
            [EnumMember(Value = "CREDIT_CARD")]
            CREDITCARD = 3,

            /// <summary>
            /// Enum CREDITCARDMANUAL for value: CREDIT_CARD_MANUAL
            /// </summary>
            [EnumMember(Value = "CREDIT_CARD_MANUAL")]
            CREDITCARDMANUAL = 4,

            /// <summary>
            /// Enum MONEYORDER for value: MONEY_ORDER
            /// </summary>
            [EnumMember(Value = "MONEY_ORDER")]
            MONEYORDER = 5,

            /// <summary>
            /// Enum ADJUSTMENT for value: ADJUSTMENT
            /// </summary>
            [EnumMember(Value = "ADJUSTMENT")]
            ADJUSTMENT = 6,

            /// <summary>
            /// Enum CREDIT for value: CREDIT
            /// </summary>
            [EnumMember(Value = "CREDIT")]
            CREDIT = 7,

            /// <summary>
            /// Enum REFUND for value: REFUND
            /// </summary>
            [EnumMember(Value = "REFUND")]
            REFUND = 8
        }

        /// <summary>
        /// Gets or Sets PayType
        /// </summary>
        [DataMember(Name = "pay_type", EmitDefaultValue = false)]
        public PayTypeEnum? PayType { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="RestAffiliatePayment" /> class.
        /// </summary>
        /// <param name="createTime">createTime.</param>
        /// <param name="id">id.</param>
        /// <param name="payAmount">payAmount.</param>
        /// <param name="payDate">payDate.</param>
        /// <param name="payNotes">payNotes.</param>
        /// <param name="payType">payType.</param>
        public RestAffiliatePayment(string createTime = default, string id = default, double payAmount = default, string payDate = default, string payNotes = default, PayTypeEnum? payType = default)
        {
            this.CreateTime = createTime;
            this.Id = id;
            this.PayAmount = payAmount;
            this.PayDate = payDate;
            this.PayNotes = payNotes;
            this.PayType = payType;
        }

        /// <summary>
        /// Gets or Sets CreateTime
        /// </summary>
        [DataMember(Name = "create_time", EmitDefaultValue = false)]
        public string CreateTime { get; set; }

        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name = "id", EmitDefaultValue = false)]
        public string Id { get; set; }

        /// <summary>
        /// Gets or Sets PayAmount
        /// </summary>
        [DataMember(Name = "pay_amount", EmitDefaultValue = false)]
        public double PayAmount { get; set; }

        /// <summary>
        /// Gets or Sets PayDate
        /// </summary>
        [DataMember(Name = "pay_date", EmitDefaultValue = false)]
        public string PayDate { get; set; }

        /// <summary>
        /// Gets or Sets PayNotes
        /// </summary>
        [DataMember(Name = "pay_notes", EmitDefaultValue = false)]
        public string PayNotes { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class RestAffiliatePayment {\n");
            sb.Append("  CreateTime: ").Append(CreateTime).Append("\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  PayAmount: ").Append(PayAmount).Append("\n");
            sb.Append("  PayDate: ").Append(PayDate).Append("\n");
            sb.Append("  PayNotes: ").Append(PayNotes).Append("\n");
            sb.Append("  PayType: ").Append(PayType).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }    }

}
