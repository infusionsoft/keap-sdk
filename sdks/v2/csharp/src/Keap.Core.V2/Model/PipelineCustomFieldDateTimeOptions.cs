/*
 * Keap REST API
 *
 * Keap REST Core Service
 *
 * The version of the OpenAPI document: 2.70.0.812056
 * Contact: api@keap.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Keap.Core.V2.Client.OpenAPIDateConverter;

namespace Keap.Core.V2.Model
{
    /// <summary>
    /// Class representing options for date and time custom fields.
    /// </summary>
    [DataContract(Name = "PipelineCustomFieldDateTimeOptions")]
    public partial class PipelineCustomFieldDateTimeOptions : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="PipelineCustomFieldDateTimeOptions" /> class.
        /// </summary>
        /// <param name="allowPastDates">Indicates whether past dates are allowed..</param>
        /// <param name="allowFutureDates">Indicates whether future dates are allowed..</param>
        public PipelineCustomFieldDateTimeOptions(bool? allowPastDates = default, bool? allowFutureDates = default)
        {
            this.AllowPastDates = allowPastDates;
            this.AllowFutureDates = allowFutureDates;
        }

        /// <summary>
        /// Indicates whether past dates are allowed.
        /// </summary>
        /// <value>Indicates whether past dates are allowed.</value>
        [DataMember(Name = "allow_past_dates", EmitDefaultValue = true)]
        public bool? AllowPastDates { get; set; }

        /// <summary>
        /// Indicates whether future dates are allowed.
        /// </summary>
        /// <value>Indicates whether future dates are allowed.</value>
        [DataMember(Name = "allow_future_dates", EmitDefaultValue = true)]
        public bool? AllowFutureDates { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class PipelineCustomFieldDateTimeOptions {\n");
            sb.Append("  AllowPastDates: ").Append(AllowPastDates).Append("\n");
            sb.Append("  AllowFutureDates: ").Append(AllowFutureDates).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }    }

}
