/*
 * Keap REST API
 *
 * Keap REST Core Service
 *
 * The version of the OpenAPI document: 2.70.0.839048
 * Contact: api@keap.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Keap.Core.V2.Client.OpenAPIDateConverter;

namespace Keap.Core.V2.Model
{
    /// <summary>
    /// FreeTrialDiscount
    /// </summary>
    [DataContract(Name = "FreeTrialDiscount")]
    public partial class FreeTrialDiscount : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="FreeTrialDiscount" /> class.
        /// </summary>
        /// <param name="criteria">criteria.</param>
        /// <param name="description">description.</param>
        /// <param name="freeTrialDays">freeTrialDays.</param>
        /// <param name="hidePrice">hidePrice.</param>
        /// <param name="id">id.</param>
        /// <param name="name">name.</param>
        /// <param name="subscriptionPlanId">subscriptionPlanId.</param>
        public FreeTrialDiscount(List<DiscountCriteria> criteria = default, string description = default, int freeTrialDays = default, bool hidePrice = default, string id = default, string name = default, string subscriptionPlanId = default)
        {
            this.Criteria = criteria;
            this.Description = description;
            this.FreeTrialDays = freeTrialDays;
            this.HidePrice = hidePrice;
            this.Id = id;
            this.Name = name;
            this.SubscriptionPlanId = subscriptionPlanId;
        }

        /// <summary>
        /// Gets or Sets Criteria
        /// </summary>
        [DataMember(Name = "criteria", EmitDefaultValue = false)]
        public List<DiscountCriteria> Criteria { get; set; }

        /// <summary>
        /// Gets or Sets Description
        /// </summary>
        [DataMember(Name = "description", EmitDefaultValue = false)]
        public string Description { get; set; }

        /// <summary>
        /// Gets or Sets FreeTrialDays
        /// </summary>
        [DataMember(Name = "free_trial_days", EmitDefaultValue = false)]
        public int FreeTrialDays { get; set; }

        /// <summary>
        /// Gets or Sets HidePrice
        /// </summary>
        [DataMember(Name = "hide_price", EmitDefaultValue = true)]
        public bool HidePrice { get; set; }

        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name = "id", EmitDefaultValue = false)]
        public string Id { get; set; }

        /// <summary>
        /// Gets or Sets Name
        /// </summary>
        [DataMember(Name = "name", EmitDefaultValue = false)]
        public string Name { get; set; }

        /// <summary>
        /// Gets or Sets SubscriptionPlanId
        /// </summary>
        [DataMember(Name = "subscription_plan_id", EmitDefaultValue = false)]
        public string SubscriptionPlanId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class FreeTrialDiscount {\n");
            sb.Append("  Criteria: ").Append(Criteria).Append("\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("  FreeTrialDays: ").Append(FreeTrialDays).Append("\n");
            sb.Append("  HidePrice: ").Append(HidePrice).Append("\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  SubscriptionPlanId: ").Append(SubscriptionPlanId).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }    }

}
