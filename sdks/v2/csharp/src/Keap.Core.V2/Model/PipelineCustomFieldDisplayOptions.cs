/*
 * Keap REST API
 *
 * Keap REST Core Service
 *
 * The version of the OpenAPI document: 2.70.0.812056
 * Contact: api@keap.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Keap.Core.V2.Client.OpenAPIDateConverter;

namespace Keap.Core.V2.Model
{
    /// <summary>
    /// Class representing display options for a custom field.
    /// </summary>
    [DataContract(Name = "PipelineCustomFieldDisplayOptions")]
    public partial class PipelineCustomFieldDisplayOptions : IValidatableObject
    {

        /// <summary>
        /// The type of display options. This field is required.
        /// </summary>
        /// <value>The type of display options. This field is required.</value>
        [DataMember(Name = "type", IsRequired = true, EmitDefaultValue = true)]
        public PipelineCustomFieldDisplayOptionsType Type { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="PipelineCustomFieldDisplayOptions" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected PipelineCustomFieldDisplayOptions() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="PipelineCustomFieldDisplayOptions" /> class.
        /// </summary>
        /// <param name="type">The type of display options. This field is required. (required).</param>
        /// <param name="hidden">Indicates whether the custom field is hidden. (required).</param>
        /// <param name="arrayDisplayOptions">The display options for array type custom fields. This field is optional..</param>
        /// <param name="referenceTypeDisplayOptions">The display options for reference type custom fields. This field is optional..</param>
        /// <param name="dateTimeDisplayOptions">The display options for date and time type custom fields. This field is optional..</param>
        /// <param name="booleanDisplayOptions">The display options for boolean type custom fields. This field is optional..</param>
        /// <param name="duration">The display options for duration type custom fields. This field is optional..</param>
        public PipelineCustomFieldDisplayOptions(PipelineCustomFieldDisplayOptionsType type = default, bool hidden = default, PipelineCustomFieldArrayDisplayOptions arrayDisplayOptions = default, PipelineCustomFieldRefDisplayOptions referenceTypeDisplayOptions = default, PipelineCustomFieldDateTimeOptions dateTimeDisplayOptions = default, PipelineCustomFieldBooleanDisplayOptions booleanDisplayOptions = default, PipelineCustomFieldDurationDisplayOptions duration = default)
        {
            this.Type = type;
            this.Hidden = hidden;
            this.ArrayDisplayOptions = arrayDisplayOptions;
            this.ReferenceTypeDisplayOptions = referenceTypeDisplayOptions;
            this.DateTimeDisplayOptions = dateTimeDisplayOptions;
            this.BooleanDisplayOptions = booleanDisplayOptions;
            this.Duration = duration;
        }

        /// <summary>
        /// Indicates whether the custom field is hidden.
        /// </summary>
        /// <value>Indicates whether the custom field is hidden.</value>
        [DataMember(Name = "hidden", IsRequired = true, EmitDefaultValue = true)]
        public bool Hidden { get; set; }

        /// <summary>
        /// The display options for array type custom fields. This field is optional.
        /// </summary>
        /// <value>The display options for array type custom fields. This field is optional.</value>
        [DataMember(Name = "array_display_options", EmitDefaultValue = false)]
        public PipelineCustomFieldArrayDisplayOptions ArrayDisplayOptions { get; set; }

        /// <summary>
        /// The display options for reference type custom fields. This field is optional.
        /// </summary>
        /// <value>The display options for reference type custom fields. This field is optional.</value>
        [DataMember(Name = "reference_type_display_options", EmitDefaultValue = false)]
        public PipelineCustomFieldRefDisplayOptions ReferenceTypeDisplayOptions { get; set; }

        /// <summary>
        /// The display options for date and time type custom fields. This field is optional.
        /// </summary>
        /// <value>The display options for date and time type custom fields. This field is optional.</value>
        [DataMember(Name = "date_time_display_options", EmitDefaultValue = false)]
        public PipelineCustomFieldDateTimeOptions DateTimeDisplayOptions { get; set; }

        /// <summary>
        /// The display options for boolean type custom fields. This field is optional.
        /// </summary>
        /// <value>The display options for boolean type custom fields. This field is optional.</value>
        [DataMember(Name = "boolean_display_options", EmitDefaultValue = false)]
        public PipelineCustomFieldBooleanDisplayOptions BooleanDisplayOptions { get; set; }

        /// <summary>
        /// The display options for duration type custom fields. This field is optional.
        /// </summary>
        /// <value>The display options for duration type custom fields. This field is optional.</value>
        [DataMember(Name = "duration", EmitDefaultValue = false)]
        public PipelineCustomFieldDurationDisplayOptions Duration { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class PipelineCustomFieldDisplayOptions {\n");
            sb.Append("  Type: ").Append(Type).Append("\n");
            sb.Append("  Hidden: ").Append(Hidden).Append("\n");
            sb.Append("  ArrayDisplayOptions: ").Append(ArrayDisplayOptions).Append("\n");
            sb.Append("  ReferenceTypeDisplayOptions: ").Append(ReferenceTypeDisplayOptions).Append("\n");
            sb.Append("  DateTimeDisplayOptions: ").Append(DateTimeDisplayOptions).Append("\n");
            sb.Append("  BooleanDisplayOptions: ").Append(BooleanDisplayOptions).Append("\n");
            sb.Append("  Duration: ").Append(Duration).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }    }

}
