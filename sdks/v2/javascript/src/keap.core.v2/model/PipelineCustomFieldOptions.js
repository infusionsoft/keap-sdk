/**
 * Keap REST API
 * Keap REST Core Service
 *
 * The version of the OpenAPI document: 2.70.0.809589
 * Contact: api@keap.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PipelineCustomFieldOptionDisplayType from './PipelineCustomFieldOptionDisplayType';
import PipelineCustomFieldOptionGroup from './PipelineCustomFieldOptionGroup';
import PipelineCustomFieldRefType from './PipelineCustomFieldRefType';

/**
 * The PipelineCustomFieldOptions model module.
 * @module keap.core.v2/model/PipelineCustomFieldOptions
 */
class PipelineCustomFieldOptions {
    /**
     * Constructs a new <code>PipelineCustomFieldOptions</code>.
     * Class representing the options for a custom field.
     * @alias module:keap.core.v2/model/PipelineCustomFieldOptions
     * @param displayType {module:keap.core.v2/model/PipelineCustomFieldOptionDisplayType} The display type of the custom field options. This field is required.
     * @param groups {Array.<module:keap.core.v2/model/PipelineCustomFieldOptionGroup>} The list of custom field option groups.
     */
    constructor(displayType, groups) { 
        
        PipelineCustomFieldOptions.initialize(this, displayType, groups);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, displayType, groups) { 
        obj['display_type'] = displayType;
        obj['groups'] = groups;
    }

    /**
     * Constructs a <code>PipelineCustomFieldOptions</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:keap.core.v2/model/PipelineCustomFieldOptions} obj Optional instance to populate.
     * @return {module:keap.core.v2/model/PipelineCustomFieldOptions} The populated <code>PipelineCustomFieldOptions</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PipelineCustomFieldOptions();

            if (data.hasOwnProperty('default_option_id')) {
                obj['default_option_id'] = ApiClient.convertToType(data['default_option_id'], 'String');
            }
            if (data.hasOwnProperty('display_type')) {
                obj['display_type'] = ApiClient.convertToType(data['display_type'], PipelineCustomFieldOptionDisplayType);
            }
            if (data.hasOwnProperty('option_source')) {
                obj['option_source'] = ApiClient.convertToType(data['option_source'], PipelineCustomFieldRefType);
            }
            if (data.hasOwnProperty('groups')) {
                obj['groups'] = ApiClient.convertToType(data['groups'], [PipelineCustomFieldOptionGroup]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PipelineCustomFieldOptions</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PipelineCustomFieldOptions</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of PipelineCustomFieldOptions.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['default_option_id'] && !(typeof data['default_option_id'] === 'string' || data['default_option_id'] instanceof String)) {
            throw new Error("Expected the field `default_option_id` to be a primitive type in the JSON string but got " + data['default_option_id']);
        }
        // validate the optional field `option_source`
        if (data['option_source']) { // data not null
          PipelineCustomFieldRefType.validateJSON(data['option_source']);
        }
        if (data['groups']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['groups'])) {
                throw new Error("Expected the field `groups` to be an array in the JSON data but got " + data['groups']);
            }
            // validate the optional field `groups` (array)
            for (const item of data['groups']) {
                PipelineCustomFieldOptionGroup.validateJSON(item);
            };
        }

        return true;
    }


}

PipelineCustomFieldOptions.RequiredProperties = ["display_type", "groups"];

/**
 * The default option ID for the custom field.
 * @member {String} default_option_id
 */
PipelineCustomFieldOptions.prototype['default_option_id'] = undefined;

/**
 * The display type of the custom field options. This field is required.
 * @member {module:keap.core.v2/model/PipelineCustomFieldOptionDisplayType} display_type
 */
PipelineCustomFieldOptions.prototype['display_type'] = undefined;

/**
 * The source of the custom field options. This field is optional.
 * @member {module:keap.core.v2/model/PipelineCustomFieldRefType} option_source
 */
PipelineCustomFieldOptions.prototype['option_source'] = undefined;

/**
 * The list of custom field option groups.
 * @member {Array.<module:keap.core.v2/model/PipelineCustomFieldOptionGroup>} groups
 */
PipelineCustomFieldOptions.prototype['groups'] = undefined;






export default PipelineCustomFieldOptions;
