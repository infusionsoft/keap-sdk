/**
 * Keap REST API
 * Keap REST Core Service
 *
 * The version of the OpenAPI document: 2.70.0.867851
 * Contact: api@keap.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Webform model module.
 * @module keap.core.v2/model/Webform
 */
class Webform {
    /**
     * Constructs a new <code>Webform</code>.
     * @alias module:keap.core.v2/model/Webform
     */
    constructor() { 
        
        Webform.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Webform</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:keap.core.v2/model/Webform} obj Optional instance to populate.
     * @return {module:keap.core.v2/model/Webform} The populated <code>Webform</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Webform();

            if (data.hasOwnProperty('create_time')) {
                obj['create_time'] = ApiClient.convertToType(data['create_time'], 'String');
            }
            if (data.hasOwnProperty('custom_slug')) {
                obj['custom_slug'] = ApiClient.convertToType(data['custom_slug'], 'String');
            }
            if (data.hasOwnProperty('duplicate_check_option')) {
                obj['duplicate_check_option'] = ApiClient.convertToType(data['duplicate_check_option'], 'String');
            }
            if (data.hasOwnProperty('exit_option')) {
                obj['exit_option'] = ApiClient.convertToType(data['exit_option'], 'String');
            }
            if (data.hasOwnProperty('funnel_id')) {
                obj['funnel_id'] = ApiClient.convertToType(data['funnel_id'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('pretty_webform_url')) {
                obj['pretty_webform_url'] = ApiClient.convertToType(data['pretty_webform_url'], 'String');
            }
            if (data.hasOwnProperty('thank_you_page_url')) {
                obj['thank_you_page_url'] = ApiClient.convertToType(data['thank_you_page_url'], 'String');
            }
            if (data.hasOwnProperty('update_time')) {
                obj['update_time'] = ApiClient.convertToType(data['update_time'], 'String');
            }
            if (data.hasOwnProperty('webform_type')) {
                obj['webform_type'] = ApiClient.convertToType(data['webform_type'], 'String');
            }
            if (data.hasOwnProperty('webform_url')) {
                obj['webform_url'] = ApiClient.convertToType(data['webform_url'], 'String');
            }
            if (data.hasOwnProperty('xid')) {
                obj['xid'] = ApiClient.convertToType(data['xid'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Webform</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Webform</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['create_time'] && !(typeof data['create_time'] === 'string' || data['create_time'] instanceof String)) {
            throw new Error("Expected the field `create_time` to be a primitive type in the JSON string but got " + data['create_time']);
        }
        // ensure the json data is a string
        if (data['custom_slug'] && !(typeof data['custom_slug'] === 'string' || data['custom_slug'] instanceof String)) {
            throw new Error("Expected the field `custom_slug` to be a primitive type in the JSON string but got " + data['custom_slug']);
        }
        // ensure the json data is a string
        if (data['duplicate_check_option'] && !(typeof data['duplicate_check_option'] === 'string' || data['duplicate_check_option'] instanceof String)) {
            throw new Error("Expected the field `duplicate_check_option` to be a primitive type in the JSON string but got " + data['duplicate_check_option']);
        }
        // ensure the json data is a string
        if (data['exit_option'] && !(typeof data['exit_option'] === 'string' || data['exit_option'] instanceof String)) {
            throw new Error("Expected the field `exit_option` to be a primitive type in the JSON string but got " + data['exit_option']);
        }
        // ensure the json data is a string
        if (data['funnel_id'] && !(typeof data['funnel_id'] === 'string' || data['funnel_id'] instanceof String)) {
            throw new Error("Expected the field `funnel_id` to be a primitive type in the JSON string but got " + data['funnel_id']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['pretty_webform_url'] && !(typeof data['pretty_webform_url'] === 'string' || data['pretty_webform_url'] instanceof String)) {
            throw new Error("Expected the field `pretty_webform_url` to be a primitive type in the JSON string but got " + data['pretty_webform_url']);
        }
        // ensure the json data is a string
        if (data['thank_you_page_url'] && !(typeof data['thank_you_page_url'] === 'string' || data['thank_you_page_url'] instanceof String)) {
            throw new Error("Expected the field `thank_you_page_url` to be a primitive type in the JSON string but got " + data['thank_you_page_url']);
        }
        // ensure the json data is a string
        if (data['update_time'] && !(typeof data['update_time'] === 'string' || data['update_time'] instanceof String)) {
            throw new Error("Expected the field `update_time` to be a primitive type in the JSON string but got " + data['update_time']);
        }
        // ensure the json data is a string
        if (data['webform_type'] && !(typeof data['webform_type'] === 'string' || data['webform_type'] instanceof String)) {
            throw new Error("Expected the field `webform_type` to be a primitive type in the JSON string but got " + data['webform_type']);
        }
        // ensure the json data is a string
        if (data['webform_url'] && !(typeof data['webform_url'] === 'string' || data['webform_url'] instanceof String)) {
            throw new Error("Expected the field `webform_url` to be a primitive type in the JSON string but got " + data['webform_url']);
        }
        // ensure the json data is a string
        if (data['xid'] && !(typeof data['xid'] === 'string' || data['xid'] instanceof String)) {
            throw new Error("Expected the field `xid` to be a primitive type in the JSON string but got " + data['xid']);
        }

        return true;
    }


}



/**
 * When the webform was created
 * @member {String} create_time
 */
Webform.prototype['create_time'] = undefined;

/**
 * The custom slug of the webform. Used in pretty webform URLs
 * @member {String} custom_slug
 */
Webform.prototype['custom_slug'] = undefined;

/**
 * The option that determines if the lead submitted through the form is a duplicate or not. If it's a duplicate, then the lead will be merged with the existing contact record
 * @member {module:keap.core.v2/model/Webform.DuplicateCheckOptionEnum} duplicate_check_option
 */
Webform.prototype['duplicate_check_option'] = undefined;

/**
 * The option that determines what happens after the form is submitted
 * @member {module:keap.core.v2/model/Webform.ExitOptionEnum} exit_option
 */
Webform.prototype['exit_option'] = undefined;

/**
 * The id of the funnel this webform belongs to, if any
 * @member {String} funnel_id
 */
Webform.prototype['funnel_id'] = undefined;

/**
 * The unique identifier for this webform
 * @member {String} id
 */
Webform.prototype['id'] = undefined;

/**
 * The name of this webform
 * @member {String} name
 */
Webform.prototype['name'] = undefined;

/**
 * The URL for this webform that uses the custom slug to identify it
 * @member {String} pretty_webform_url
 */
Webform.prototype['pretty_webform_url'] = undefined;

/**
 * The URL of the thank you page for this webform
 * @member {String} thank_you_page_url
 */
Webform.prototype['thank_you_page_url'] = undefined;

/**
 * When the webform was last updated
 * @member {String} update_time
 */
Webform.prototype['update_time'] = undefined;

/**
 * The type of webform this is
 * @member {module:keap.core.v2/model/Webform.WebformTypeEnum} webform_type
 */
Webform.prototype['webform_type'] = undefined;

/**
 * The URL for this webform that uses the xid to identify it
 * @member {String} webform_url
 */
Webform.prototype['webform_url'] = undefined;

/**
 * The public unique identifier for this tag, used in webform URLs
 * @member {String} xid
 */
Webform.prototype['xid'] = undefined;





/**
 * Allowed values for the <code>duplicate_check_option</code> property.
 * @enum {String}
 * @readonly
 */
Webform['DuplicateCheckOptionEnum'] = {

    /**
     * value: "EMAIL"
     * @const
     */
    "EMAIL": "EMAIL",

    /**
     * value: "EMAIL_AND_NAME"
     * @const
     */
    "EMAIL_AND_NAME": "EMAIL_AND_NAME",

    /**
     * value: "EMAIL_AND_NAME_AND_COMPANY"
     * @const
     */
    "EMAIL_AND_NAME_AND_COMPANY": "EMAIL_AND_NAME_AND_COMPANY",

    /**
     * value: "NO_CHECK"
     * @const
     */
    "NO_CHECK": "NO_CHECK",

    /**
     * value: "unknown_default_open_api"
     * @const
     */
    "unknown_default_open_api": "unknown_default_open_api"
};

/**
 * Allowed values for the <code>exit_option</code> property.
 * @enum {String}
 * @readonly
 */
Webform['ExitOptionEnum'] = {

    /**
     * value: "REDIRECT"
     * @const
     */
    "REDIRECT": "REDIRECT",

    /**
     * value: "FUNNEL_LINK"
     * @const
     */
    "FUNNEL_LINK": "FUNNEL_LINK",

    /**
     * value: "HOSTED"
     * @const
     */
    "HOSTED": "HOSTED",

    /**
     * value: "LANDING_PAGE"
     * @const
     */
    "LANDING_PAGE": "LANDING_PAGE",

    /**
     * value: "WEB_FORM"
     * @const
     */
    "WEB_FORM": "WEB_FORM",

    /**
     * value: "SURVEY"
     * @const
     */
    "SURVEY": "SURVEY",

    /**
     * value: "UPDATE"
     * @const
     */
    "UPDATE": "UPDATE",

    /**
     * value: "UPDATE_OPT_OUT"
     * @const
     */
    "UPDATE_OPT_OUT": "UPDATE_OPT_OUT",

    /**
     * value: "OPT_OUT"
     * @const
     */
    "OPT_OUT": "OPT_OUT",

    /**
     * value: "CONFIRM"
     * @const
     */
    "CONFIRM": "CONFIRM",

    /**
     * value: "MESSAGE"
     * @const
     */
    "MESSAGE": "MESSAGE",

    /**
     * value: "AUTHORING_MESSAGE"
     * @const
     */
    "AUTHORING_MESSAGE": "AUTHORING_MESSAGE",

    /**
     * value: "MANUAL"
     * @const
     */
    "MANUAL": "MANUAL",

    /**
     * value: "CLOSE"
     * @const
     */
    "CLOSE": "CLOSE",

    /**
     * value: "DISPLAY_TEXT_AND_BUTTON"
     * @const
     */
    "DISPLAY_TEXT_AND_BUTTON": "DISPLAY_TEXT_AND_BUTTON",

    /**
     * value: "ERROR"
     * @const
     */
    "ERROR": "ERROR",

    /**
     * value: "HOSTED_PAGE"
     * @const
     */
    "HOSTED_PAGE": "HOSTED_PAGE",

    /**
     * value: "unknown_default_open_api"
     * @const
     */
    "unknown_default_open_api": "unknown_default_open_api"
};

/**
 * Allowed values for the <code>webform_type</code> property.
 * @enum {String}
 * @readonly
 */
Webform['WebformTypeEnum'] = {

    /**
     * value: "LEGACY"
     * @const
     */
    "LEGACY": "LEGACY",

    /**
     * value: "STANDALONE"
     * @const
     */
    "STANDALONE": "STANDALONE",

    /**
     * value: "FUNNEL"
     * @const
     */
    "FUNNEL": "FUNNEL",

    /**
     * value: "LANDING_PAGE"
     * @const
     */
    "LANDING_PAGE": "LANDING_PAGE",

    /**
     * value: "SURVEY"
     * @const
     */
    "SURVEY": "SURVEY",

    /**
     * value: "INTERNAL"
     * @const
     */
    "INTERNAL": "INTERNAL",

    /**
     * value: "TWITTER"
     * @const
     */
    "TWITTER": "TWITTER",

    /**
     * value: "UNKNOWN"
     * @const
     */
    "UNKNOWN": "UNKNOWN",

    /**
     * value: "unknown_default_open_api"
     * @const
     */
    "unknown_default_open_api": "unknown_default_open_api"
};


export default Webform;
