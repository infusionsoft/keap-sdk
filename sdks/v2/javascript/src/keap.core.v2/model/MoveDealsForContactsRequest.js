/**
 * Keap REST API
 * Keap REST Core Service
 *
 * The version of the OpenAPI document: 2.70.0.812056
 * Contact: api@keap.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The MoveDealsForContactsRequest model module.
 * @module keap.core.v2/model/MoveDealsForContactsRequest
 */
class MoveDealsForContactsRequest {
    /**
     * Constructs a new <code>MoveDealsForContactsRequest</code>.
     * Request model for moving specific deals.
     * @alias module:keap.core.v2/model/MoveDealsForContactsRequest
     * @param contactIds {Array.<String>} List of IDs of the contacts whose active deals need to be moved.
     * @param fromStage {String} The ID of the stage from which the deals should be moved.
     * @param toStage {String} The ID of the stage to which the deals should be moved.
     */
    constructor(contactIds, fromStage, toStage) { 
        
        MoveDealsForContactsRequest.initialize(this, contactIds, fromStage, toStage);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, contactIds, fromStage, toStage) { 
        obj['contact_ids'] = contactIds;
        obj['from_stage'] = fromStage;
        obj['to_stage'] = toStage;
    }

    /**
     * Constructs a <code>MoveDealsForContactsRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:keap.core.v2/model/MoveDealsForContactsRequest} obj Optional instance to populate.
     * @return {module:keap.core.v2/model/MoveDealsForContactsRequest} The populated <code>MoveDealsForContactsRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MoveDealsForContactsRequest();

            if (data.hasOwnProperty('contact_ids')) {
                obj['contact_ids'] = ApiClient.convertToType(data['contact_ids'], ['String']);
            }
            if (data.hasOwnProperty('from_stage')) {
                obj['from_stage'] = ApiClient.convertToType(data['from_stage'], 'String');
            }
            if (data.hasOwnProperty('to_stage')) {
                obj['to_stage'] = ApiClient.convertToType(data['to_stage'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MoveDealsForContactsRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MoveDealsForContactsRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of MoveDealsForContactsRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is an array
        if (!Array.isArray(data['contact_ids'])) {
            throw new Error("Expected the field `contact_ids` to be an array in the JSON data but got " + data['contact_ids']);
        }
        // ensure the json data is a string
        if (data['from_stage'] && !(typeof data['from_stage'] === 'string' || data['from_stage'] instanceof String)) {
            throw new Error("Expected the field `from_stage` to be a primitive type in the JSON string but got " + data['from_stage']);
        }
        // ensure the json data is a string
        if (data['to_stage'] && !(typeof data['to_stage'] === 'string' || data['to_stage'] instanceof String)) {
            throw new Error("Expected the field `to_stage` to be a primitive type in the JSON string but got " + data['to_stage']);
        }

        return true;
    }


}

MoveDealsForContactsRequest.RequiredProperties = ["contact_ids", "from_stage", "to_stage"];

/**
 * List of IDs of the contacts whose active deals need to be moved.
 * @member {Array.<String>} contact_ids
 */
MoveDealsForContactsRequest.prototype['contact_ids'] = undefined;

/**
 * The ID of the stage from which the deals should be moved.
 * @member {String} from_stage
 */
MoveDealsForContactsRequest.prototype['from_stage'] = undefined;

/**
 * The ID of the stage to which the deals should be moved.
 * @member {String} to_stage
 */
MoveDealsForContactsRequest.prototype['to_stage'] = undefined;






export default MoveDealsForContactsRequest;
