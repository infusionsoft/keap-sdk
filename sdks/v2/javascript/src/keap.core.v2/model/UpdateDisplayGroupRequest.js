/**
 * Keap REST API
 * Keap REST Core Service
 *
 * The version of the OpenAPI document: 2.70.0.809589
 * Contact: api@keap.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import UpdateDisplayPropertyRequest from './UpdateDisplayPropertyRequest';

/**
 * The UpdateDisplayGroupRequest model module.
 * @module keap.core.v2/model/UpdateDisplayGroupRequest
 */
class UpdateDisplayGroupRequest {
    /**
     * Constructs a new <code>UpdateDisplayGroupRequest</code>.
     * @alias module:keap.core.v2/model/UpdateDisplayGroupRequest
     * @param title {String} The title of the display group.
     * @param properties {Array.<module:keap.core.v2/model/UpdateDisplayPropertyRequest>} A list of properties that will be displayed in this group.
     */
    constructor(title, properties) { 
        
        UpdateDisplayGroupRequest.initialize(this, title, properties);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, title, properties) { 
        obj['title'] = title;
        obj['properties'] = properties;
    }

    /**
     * Constructs a <code>UpdateDisplayGroupRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:keap.core.v2/model/UpdateDisplayGroupRequest} obj Optional instance to populate.
     * @return {module:keap.core.v2/model/UpdateDisplayGroupRequest} The populated <code>UpdateDisplayGroupRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateDisplayGroupRequest();

            if (data.hasOwnProperty('sort_order')) {
                obj['sort_order'] = ApiClient.convertToType(data['sort_order'], 'Number');
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('properties')) {
                obj['properties'] = ApiClient.convertToType(data['properties'], [UpdateDisplayPropertyRequest]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateDisplayGroupRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateDisplayGroupRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of UpdateDisplayGroupRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['title'] && !(typeof data['title'] === 'string' || data['title'] instanceof String)) {
            throw new Error("Expected the field `title` to be a primitive type in the JSON string but got " + data['title']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        if (data['properties']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['properties'])) {
                throw new Error("Expected the field `properties` to be an array in the JSON data but got " + data['properties']);
            }
            // validate the optional field `properties` (array)
            for (const item of data['properties']) {
                UpdateDisplayPropertyRequest.validateJSON(item);
            };
        }

        return true;
    }


}

UpdateDisplayGroupRequest.RequiredProperties = ["title", "properties"];

/**
 * Determines the order for where this display group shows up on the form.
 * @member {Number} sort_order
 */
UpdateDisplayGroupRequest.prototype['sort_order'] = undefined;

/**
 * The title of the display group.
 * @member {String} title
 */
UpdateDisplayGroupRequest.prototype['title'] = undefined;

/**
 * The description of the display group.
 * @member {String} description
 */
UpdateDisplayGroupRequest.prototype['description'] = undefined;

/**
 * A list of properties that will be displayed in this group.
 * @member {Array.<module:keap.core.v2/model/UpdateDisplayPropertyRequest>} properties
 */
UpdateDisplayGroupRequest.prototype['properties'] = undefined;






export default UpdateDisplayGroupRequest;
