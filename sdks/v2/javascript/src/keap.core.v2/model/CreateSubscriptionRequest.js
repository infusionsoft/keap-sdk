/**
 * Keap REST API
 * Keap REST Core Service
 *
 * The version of the OpenAPI document: 2.70.0.861953
 * Contact: api@keap.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AddressRequest from './AddressRequest';

/**
 * The CreateSubscriptionRequest model module.
 * @module keap.core.v2/model/CreateSubscriptionRequest
 */
class CreateSubscriptionRequest {
    /**
     * Constructs a new <code>CreateSubscriptionRequest</code>.
     * @alias module:keap.core.v2/model/CreateSubscriptionRequest
     * @param contactId {String} Id of the contact to create the subscription for.
     * @param subscriptionPlanId {String} Id of the product subscription plan.
     */
    constructor(contactId, subscriptionPlanId) { 
        
        CreateSubscriptionRequest.initialize(this, contactId, subscriptionPlanId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, contactId, subscriptionPlanId) { 
        obj['contact_id'] = contactId;
        obj['subscription_plan_id'] = subscriptionPlanId;
    }

    /**
     * Constructs a <code>CreateSubscriptionRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:keap.core.v2/model/CreateSubscriptionRequest} obj Optional instance to populate.
     * @return {module:keap.core.v2/model/CreateSubscriptionRequest} The populated <code>CreateSubscriptionRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateSubscriptionRequest();

            if (data.hasOwnProperty('active')) {
                obj['active'] = ApiClient.convertToType(data['active'], 'Boolean');
            }
            if (data.hasOwnProperty('allow_duplicate')) {
                obj['allow_duplicate'] = ApiClient.convertToType(data['allow_duplicate'], 'Boolean');
            }
            if (data.hasOwnProperty('allow_tax')) {
                obj['allow_tax'] = ApiClient.convertToType(data['allow_tax'], 'Boolean');
            }
            if (data.hasOwnProperty('auto_charge')) {
                obj['auto_charge'] = ApiClient.convertToType(data['auto_charge'], 'Boolean');
            }
            if (data.hasOwnProperty('billing_amount')) {
                obj['billing_amount'] = ApiClient.convertToType(data['billing_amount'], 'Number');
            }
            if (data.hasOwnProperty('contact_id')) {
                obj['contact_id'] = ApiClient.convertToType(data['contact_id'], 'String');
            }
            if (data.hasOwnProperty('days_between_retries')) {
                obj['days_between_retries'] = ApiClient.convertToType(data['days_between_retries'], 'Number');
            }
            if (data.hasOwnProperty('lead_affiliate_id')) {
                obj['lead_affiliate_id'] = ApiClient.convertToType(data['lead_affiliate_id'], 'String');
            }
            if (data.hasOwnProperty('max_charge_attempts')) {
                obj['max_charge_attempts'] = ApiClient.convertToType(data['max_charge_attempts'], 'Number');
            }
            if (data.hasOwnProperty('payment_method_id')) {
                obj['payment_method_id'] = ApiClient.convertToType(data['payment_method_id'], 'String');
            }
            if (data.hasOwnProperty('quantity')) {
                obj['quantity'] = ApiClient.convertToType(data['quantity'], 'Number');
            }
            if (data.hasOwnProperty('sale_affiliate_id')) {
                obj['sale_affiliate_id'] = ApiClient.convertToType(data['sale_affiliate_id'], 'String');
            }
            if (data.hasOwnProperty('shipping_address')) {
                obj['shipping_address'] = AddressRequest.constructFromObject(data['shipping_address']);
            }
            if (data.hasOwnProperty('start_date')) {
                obj['start_date'] = ApiClient.convertToType(data['start_date'], 'String');
            }
            if (data.hasOwnProperty('subscription_plan_id')) {
                obj['subscription_plan_id'] = ApiClient.convertToType(data['subscription_plan_id'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateSubscriptionRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateSubscriptionRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateSubscriptionRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['contact_id'] && !(typeof data['contact_id'] === 'string' || data['contact_id'] instanceof String)) {
            throw new Error("Expected the field `contact_id` to be a primitive type in the JSON string but got " + data['contact_id']);
        }
        // ensure the json data is a string
        if (data['lead_affiliate_id'] && !(typeof data['lead_affiliate_id'] === 'string' || data['lead_affiliate_id'] instanceof String)) {
            throw new Error("Expected the field `lead_affiliate_id` to be a primitive type in the JSON string but got " + data['lead_affiliate_id']);
        }
        // ensure the json data is a string
        if (data['payment_method_id'] && !(typeof data['payment_method_id'] === 'string' || data['payment_method_id'] instanceof String)) {
            throw new Error("Expected the field `payment_method_id` to be a primitive type in the JSON string but got " + data['payment_method_id']);
        }
        // ensure the json data is a string
        if (data['sale_affiliate_id'] && !(typeof data['sale_affiliate_id'] === 'string' || data['sale_affiliate_id'] instanceof String)) {
            throw new Error("Expected the field `sale_affiliate_id` to be a primitive type in the JSON string but got " + data['sale_affiliate_id']);
        }
        // validate the optional field `shipping_address`
        if (data['shipping_address']) { // data not null
          AddressRequest.validateJSON(data['shipping_address']);
        }
        // ensure the json data is a string
        if (data['start_date'] && !(typeof data['start_date'] === 'string' || data['start_date'] instanceof String)) {
            throw new Error("Expected the field `start_date` to be a primitive type in the JSON string but got " + data['start_date']);
        }
        // ensure the json data is a string
        if (data['subscription_plan_id'] && !(typeof data['subscription_plan_id'] === 'string' || data['subscription_plan_id'] instanceof String)) {
            throw new Error("Expected the field `subscription_plan_id` to be a primitive type in the JSON string but got " + data['subscription_plan_id']);
        }

        return true;
    }


}

CreateSubscriptionRequest.RequiredProperties = ["contact_id", "subscription_plan_id"];

/**
 * If the subscription is active or not. Default is true
 * @member {Boolean} active
 */
CreateSubscriptionRequest.prototype['active'] = undefined;

/**
 * If true, it will disable the check to see if there is already an identical subscription for the contact. Default is false.
 * @member {Boolean} allow_duplicate
 */
CreateSubscriptionRequest.prototype['allow_duplicate'] = undefined;

/**
 * Only works if the product associated with the product subscription is taxable. Default is false.
 * @member {Boolean} allow_tax
 */
CreateSubscriptionRequest.prototype['allow_tax'] = undefined;

/**
 * If the subscription should auto charge on the next billing date. Default is true.
 * @member {Boolean} auto_charge
 */
CreateSubscriptionRequest.prototype['auto_charge'] = undefined;

/**
 * The billing amount. Must be 0 or greater. Default is the price in the product subscription plan.
 * @member {Number} billing_amount
 */
CreateSubscriptionRequest.prototype['billing_amount'] = undefined;

/**
 * Id of the contact to create the subscription for.
 * @member {String} contact_id
 */
CreateSubscriptionRequest.prototype['contact_id'] = undefined;

/**
 * Number of days between charge attempts. Must be 1 or greater. Default is the configured [Num Days Between Retries] value.
 * @member {Number} days_between_retries
 */
CreateSubscriptionRequest.prototype['days_between_retries'] = undefined;

/**
 * The affiliate id for the lead of the subscription. Default is 0.
 * @member {String} lead_affiliate_id
 */
CreateSubscriptionRequest.prototype['lead_affiliate_id'] = undefined;

/**
 * Maximum number of charge attempts. Must be 1 or greater. Default is the configured [Max Retries] value.
 * @member {Number} max_charge_attempts
 */
CreateSubscriptionRequest.prototype['max_charge_attempts'] = undefined;

/**
 * Id associated with the payment method. Default is the contact's most recently used card, if auto charge is true. Default is 0 otherwise.
 * @member {String} payment_method_id
 */
CreateSubscriptionRequest.prototype['payment_method_id'] = undefined;

/**
 * The subscription quantity. Must be 1 or greater. Default is 1.
 * @member {Number} quantity
 */
CreateSubscriptionRequest.prototype['quantity'] = undefined;

/**
 * The affiliate id for the sale of the subscription. Default is 0.
 * @member {String} sale_affiliate_id
 */
CreateSubscriptionRequest.prototype['sale_affiliate_id'] = undefined;

/**
 * @member {module:keap.core.v2/model/AddressRequest} shipping_address
 */
CreateSubscriptionRequest.prototype['shipping_address'] = undefined;

/**
 * The first day the subscription will bill. Must not be in the past. Default is today.
 * @member {String} start_date
 */
CreateSubscriptionRequest.prototype['start_date'] = undefined;

/**
 * Id of the product subscription plan.
 * @member {String} subscription_plan_id
 */
CreateSubscriptionRequest.prototype['subscription_plan_id'] = undefined;






export default CreateSubscriptionRequest;
