/**
 * Keap REST API
 * Keap REST Core Service
 *
 * The version of the OpenAPI document: 2.70.0.862454-hf-202509261459
 * Contact: api@keap.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The EmailSendTemplateRequest model module.
 * @module keap.core.v2/model/EmailSendTemplateRequest
 */
class EmailSendTemplateRequest {
    /**
     * Constructs a new <code>EmailSendTemplateRequest</code>.
     * @alias module:keap.core.v2/model/EmailSendTemplateRequest
     */
    constructor() { 
        
        EmailSendTemplateRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>EmailSendTemplateRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:keap.core.v2/model/EmailSendTemplateRequest} obj Optional instance to populate.
     * @return {module:keap.core.v2/model/EmailSendTemplateRequest} The populated <code>EmailSendTemplateRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EmailSendTemplateRequest();

            if (data.hasOwnProperty('address_field')) {
                obj['address_field'] = ApiClient.convertToType(data['address_field'], 'String');
            }
            if (data.hasOwnProperty('contact_ids')) {
                obj['contact_ids'] = ApiClient.convertToType(data['contact_ids'], ['String']);
            }
            if (data.hasOwnProperty('template_id')) {
                obj['template_id'] = ApiClient.convertToType(data['template_id'], 'String');
            }
            if (data.hasOwnProperty('user_id')) {
                obj['user_id'] = ApiClient.convertToType(data['user_id'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EmailSendTemplateRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EmailSendTemplateRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['address_field'] && !(typeof data['address_field'] === 'string' || data['address_field'] instanceof String)) {
            throw new Error("Expected the field `address_field` to be a primitive type in the JSON string but got " + data['address_field']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['contact_ids'])) {
            throw new Error("Expected the field `contact_ids` to be an array in the JSON data but got " + data['contact_ids']);
        }
        // ensure the json data is a string
        if (data['template_id'] && !(typeof data['template_id'] === 'string' || data['template_id'] instanceof String)) {
            throw new Error("Expected the field `template_id` to be a primitive type in the JSON string but got " + data['template_id']);
        }
        // ensure the json data is a string
        if (data['user_id'] && !(typeof data['user_id'] === 'string' || data['user_id'] instanceof String)) {
            throw new Error("Expected the field `user_id` to be a primitive type in the JSON string but got " + data['user_id']);
        }

        return true;
    }


}



/**
 * Email field of each Contact record to address the email to, such as 'Email', 'EmailAddress2', 'EmailAddress3' or '_CustomFieldName', defaulting to the contact's primary email
 * @member {String} address_field
 */
EmailSendTemplateRequest.prototype['address_field'] = undefined;

/**
 * List of contacts to send
 * @member {Array.<String>} contact_ids
 */
EmailSendTemplateRequest.prototype['contact_ids'] = undefined;

/**
 * Template ID
 * @member {String} template_id
 */
EmailSendTemplateRequest.prototype['template_id'] = undefined;

/**
 * user id sending the email
 * @member {String} user_id
 */
EmailSendTemplateRequest.prototype['user_id'] = undefined;






export default EmailSendTemplateRequest;
