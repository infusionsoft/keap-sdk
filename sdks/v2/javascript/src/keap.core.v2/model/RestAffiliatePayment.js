/**
 * Keap REST API
 * Keap REST Core Service
 *
 * The version of the OpenAPI document: 2.70.0.852640
 * Contact: api@keap.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The RestAffiliatePayment model module.
 * @module keap.core.v2/model/RestAffiliatePayment
 */
class RestAffiliatePayment {
    /**
     * Constructs a new <code>RestAffiliatePayment</code>.
     * @alias module:keap.core.v2/model/RestAffiliatePayment
     */
    constructor() { 
        
        RestAffiliatePayment.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>RestAffiliatePayment</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:keap.core.v2/model/RestAffiliatePayment} obj Optional instance to populate.
     * @return {module:keap.core.v2/model/RestAffiliatePayment} The populated <code>RestAffiliatePayment</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RestAffiliatePayment();

            if (data.hasOwnProperty('create_time')) {
                obj['create_time'] = ApiClient.convertToType(data['create_time'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('pay_amount')) {
                obj['pay_amount'] = ApiClient.convertToType(data['pay_amount'], 'Number');
            }
            if (data.hasOwnProperty('pay_date')) {
                obj['pay_date'] = ApiClient.convertToType(data['pay_date'], 'String');
            }
            if (data.hasOwnProperty('pay_notes')) {
                obj['pay_notes'] = ApiClient.convertToType(data['pay_notes'], 'String');
            }
            if (data.hasOwnProperty('pay_type')) {
                obj['pay_type'] = ApiClient.convertToType(data['pay_type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RestAffiliatePayment</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RestAffiliatePayment</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['create_time'] && !(typeof data['create_time'] === 'string' || data['create_time'] instanceof String)) {
            throw new Error("Expected the field `create_time` to be a primitive type in the JSON string but got " + data['create_time']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['pay_date'] && !(typeof data['pay_date'] === 'string' || data['pay_date'] instanceof String)) {
            throw new Error("Expected the field `pay_date` to be a primitive type in the JSON string but got " + data['pay_date']);
        }
        // ensure the json data is a string
        if (data['pay_notes'] && !(typeof data['pay_notes'] === 'string' || data['pay_notes'] instanceof String)) {
            throw new Error("Expected the field `pay_notes` to be a primitive type in the JSON string but got " + data['pay_notes']);
        }
        // ensure the json data is a string
        if (data['pay_type'] && !(typeof data['pay_type'] === 'string' || data['pay_type'] instanceof String)) {
            throw new Error("Expected the field `pay_type` to be a primitive type in the JSON string but got " + data['pay_type']);
        }

        return true;
    }


}



/**
 * @member {String} create_time
 */
RestAffiliatePayment.prototype['create_time'] = undefined;

/**
 * @member {String} id
 */
RestAffiliatePayment.prototype['id'] = undefined;

/**
 * @member {Number} pay_amount
 */
RestAffiliatePayment.prototype['pay_amount'] = undefined;

/**
 * @member {String} pay_date
 */
RestAffiliatePayment.prototype['pay_date'] = undefined;

/**
 * @member {String} pay_notes
 */
RestAffiliatePayment.prototype['pay_notes'] = undefined;

/**
 * @member {module:keap.core.v2/model/RestAffiliatePayment.PayTypeEnum} pay_type
 */
RestAffiliatePayment.prototype['pay_type'] = undefined;





/**
 * Allowed values for the <code>pay_type</code> property.
 * @enum {String}
 * @readonly
 */
RestAffiliatePayment['PayTypeEnum'] = {

    /**
     * value: "CASH"
     * @const
     */
    "CASH": "CASH",

    /**
     * value: "CHECK"
     * @const
     */
    "CHECK": "CHECK",

    /**
     * value: "CREDIT_CARD"
     * @const
     */
    "CREDIT_CARD": "CREDIT_CARD",

    /**
     * value: "CREDIT_CARD_MANUAL"
     * @const
     */
    "CREDIT_CARD_MANUAL": "CREDIT_CARD_MANUAL",

    /**
     * value: "MONEY_ORDER"
     * @const
     */
    "MONEY_ORDER": "MONEY_ORDER",

    /**
     * value: "ADJUSTMENT"
     * @const
     */
    "ADJUSTMENT": "ADJUSTMENT",

    /**
     * value: "CREDIT"
     * @const
     */
    "CREDIT": "CREDIT",

    /**
     * value: "REFUND"
     * @const
     */
    "REFUND": "REFUND",

    /**
     * value: "unknown_default_open_api"
     * @const
     */
    "unknown_default_open_api": "unknown_default_open_api"
};


export default RestAffiliatePayment;
