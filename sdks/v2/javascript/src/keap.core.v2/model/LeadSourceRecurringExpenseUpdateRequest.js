/**
 * Keap REST API
 * Keap REST Core Service
 *
 * The version of the OpenAPI document: 2.70.0.843039-hf-202508121547
 * Contact: api@keap.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The LeadSourceRecurringExpenseUpdateRequest model module.
 * @module keap.core.v2/model/LeadSourceRecurringExpenseUpdateRequest
 */
class LeadSourceRecurringExpenseUpdateRequest {
    /**
     * Constructs a new <code>LeadSourceRecurringExpenseUpdateRequest</code>.
     * @alias module:keap.core.v2/model/LeadSourceRecurringExpenseUpdateRequest
     */
    constructor() { 
        
        LeadSourceRecurringExpenseUpdateRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>LeadSourceRecurringExpenseUpdateRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:keap.core.v2/model/LeadSourceRecurringExpenseUpdateRequest} obj Optional instance to populate.
     * @return {module:keap.core.v2/model/LeadSourceRecurringExpenseUpdateRequest} The populated <code>LeadSourceRecurringExpenseUpdateRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LeadSourceRecurringExpenseUpdateRequest();

            if (data.hasOwnProperty('amount')) {
                obj['amount'] = ApiClient.convertToType(data['amount'], 'Number');
            }
            if (data.hasOwnProperty('end_time')) {
                obj['end_time'] = ApiClient.convertToType(data['end_time'], 'String');
            }
            if (data.hasOwnProperty('notes')) {
                obj['notes'] = ApiClient.convertToType(data['notes'], 'String');
            }
            if (data.hasOwnProperty('start_time')) {
                obj['start_time'] = ApiClient.convertToType(data['start_time'], 'String');
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LeadSourceRecurringExpenseUpdateRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LeadSourceRecurringExpenseUpdateRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['end_time'] && !(typeof data['end_time'] === 'string' || data['end_time'] instanceof String)) {
            throw new Error("Expected the field `end_time` to be a primitive type in the JSON string but got " + data['end_time']);
        }
        // ensure the json data is a string
        if (data['notes'] && !(typeof data['notes'] === 'string' || data['notes'] instanceof String)) {
            throw new Error("Expected the field `notes` to be a primitive type in the JSON string but got " + data['notes']);
        }
        // ensure the json data is a string
        if (data['start_time'] && !(typeof data['start_time'] === 'string' || data['start_time'] instanceof String)) {
            throw new Error("Expected the field `start_time` to be a primitive type in the JSON string but got " + data['start_time']);
        }
        // ensure the json data is a string
        if (data['title'] && !(typeof data['title'] === 'string' || data['title'] instanceof String)) {
            throw new Error("Expected the field `title` to be a primitive type in the JSON string but got " + data['title']);
        }

        return true;
    }


}



/**
 * The monthly cost of the lead source recurring expense.  The value should be in the smallest unit of currency for your currency locale.  For example, if your currency locale is USD, then the smallest unit of currency is  in cents, $225.50 would be provided in the request as 22550.
 * @member {Number} amount
 */
LeadSourceRecurringExpenseUpdateRequest.prototype['amount'] = undefined;

/**
 * The time the lead source recurring expense ends
 * @member {String} end_time
 */
LeadSourceRecurringExpenseUpdateRequest.prototype['end_time'] = undefined;

/**
 * The notes for the lead source recurring expense
 * @member {String} notes
 */
LeadSourceRecurringExpenseUpdateRequest.prototype['notes'] = undefined;

/**
 * The time the lead source recurring expense starts
 * @member {String} start_time
 */
LeadSourceRecurringExpenseUpdateRequest.prototype['start_time'] = undefined;

/**
 * The title of the lead source recurring expense
 * @member {String} title
 */
LeadSourceRecurringExpenseUpdateRequest.prototype['title'] = undefined;






export default LeadSourceRecurringExpenseUpdateRequest;
