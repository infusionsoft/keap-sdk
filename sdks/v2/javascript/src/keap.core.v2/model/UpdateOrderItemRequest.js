/**
 * Keap REST API
 * Keap REST Core Service
 *
 * The version of the OpenAPI document: 2.70.0.852640
 * Contact: api@keap.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The UpdateOrderItemRequest model module.
 * @module keap.core.v2/model/UpdateOrderItemRequest
 */
class UpdateOrderItemRequest {
    /**
     * Constructs a new <code>UpdateOrderItemRequest</code>.
     * @alias module:keap.core.v2/model/UpdateOrderItemRequest
     */
    constructor() { 
        
        UpdateOrderItemRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UpdateOrderItemRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:keap.core.v2/model/UpdateOrderItemRequest} obj Optional instance to populate.
     * @return {module:keap.core.v2/model/UpdateOrderItemRequest} The populated <code>UpdateOrderItemRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateOrderItemRequest();

            if (data.hasOwnProperty('cost_per_unit')) {
                obj['cost_per_unit'] = ApiClient.convertToType(data['cost_per_unit'], 'Number');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('item_type')) {
                obj['item_type'] = ApiClient.convertToType(data['item_type'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('notes')) {
                obj['notes'] = ApiClient.convertToType(data['notes'], 'String');
            }
            if (data.hasOwnProperty('price_per_unit')) {
                obj['price_per_unit'] = ApiClient.convertToType(data['price_per_unit'], 'Number');
            }
            if (data.hasOwnProperty('quantity')) {
                obj['quantity'] = ApiClient.convertToType(data['quantity'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateOrderItemRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateOrderItemRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['item_type'] && !(typeof data['item_type'] === 'string' || data['item_type'] instanceof String)) {
            throw new Error("Expected the field `item_type` to be a primitive type in the JSON string but got " + data['item_type']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['notes'] && !(typeof data['notes'] === 'string' || data['notes'] instanceof String)) {
            throw new Error("Expected the field `notes` to be a primitive type in the JSON string but got " + data['notes']);
        }

        return true;
    }


}



/**
 * The cost per unit. Must be greater than or equal to 0.
 * @member {Number} cost_per_unit
 */
UpdateOrderItemRequest.prototype['cost_per_unit'] = undefined;

/**
 * The description of the order item. Must not be whitespace.
 * @member {String} description
 */
UpdateOrderItemRequest.prototype['description'] = undefined;

/**
 * The type of this order item. For now only [PRODUCT] is supported. Will default to [PRODUCT] if omitted.
 * @member {module:keap.core.v2/model/UpdateOrderItemRequest.ItemTypeEnum} item_type
 */
UpdateOrderItemRequest.prototype['item_type'] = undefined;

/**
 * The name of the order item. Must not be whitespace.
 * @member {String} name
 */
UpdateOrderItemRequest.prototype['name'] = undefined;

/**
 * The notes for the order item. Must not be whitespace.
 * @member {String} notes
 */
UpdateOrderItemRequest.prototype['notes'] = undefined;

/**
 * The price per unit. Must be greater than or equal to 0.
 * @member {Number} price_per_unit
 */
UpdateOrderItemRequest.prototype['price_per_unit'] = undefined;

/**
 * The quantity. Must be greater than or equal to 1.
 * @member {Number} quantity
 */
UpdateOrderItemRequest.prototype['quantity'] = undefined;





/**
 * Allowed values for the <code>item_type</code> property.
 * @enum {String}
 * @readonly
 */
UpdateOrderItemRequest['ItemTypeEnum'] = {

    /**
     * value: "UNKNOWN"
     * @const
     */
    "UNKNOWN": "UNKNOWN",

    /**
     * value: "SHIPPING"
     * @const
     */
    "SHIPPING": "SHIPPING",

    /**
     * value: "TAX"
     * @const
     */
    "TAX": "TAX",

    /**
     * value: "SERVICE"
     * @const
     */
    "SERVICE": "SERVICE",

    /**
     * value: "PRODUCT"
     * @const
     */
    "PRODUCT": "PRODUCT",

    /**
     * value: "UPSELL"
     * @const
     */
    "UPSELL": "UPSELL",

    /**
     * value: "FINANCE_CHARGE"
     * @const
     */
    "FINANCE_CHARGE": "FINANCE_CHARGE",

    /**
     * value: "DISCOUNT"
     * @const
     */
    "DISCOUNT": "DISCOUNT",

    /**
     * value: "PROGRAM"
     * @const
     */
    "PROGRAM": "PROGRAM",

    /**
     * value: "SUBSCRIPTION"
     * @const
     */
    "SUBSCRIPTION": "SUBSCRIPTION",

    /**
     * value: "DISCOUNT_FREE_TRIAL"
     * @const
     */
    "DISCOUNT_FREE_TRIAL": "DISCOUNT_FREE_TRIAL",

    /**
     * value: "DISCOUNT_ORDER_TOTAL"
     * @const
     */
    "DISCOUNT_ORDER_TOTAL": "DISCOUNT_ORDER_TOTAL",

    /**
     * value: "DISCOUNT_PRODUCT"
     * @const
     */
    "DISCOUNT_PRODUCT": "DISCOUNT_PRODUCT",

    /**
     * value: "DISCOUNT_PRODUCT_CATEGORY"
     * @const
     */
    "DISCOUNT_PRODUCT_CATEGORY": "DISCOUNT_PRODUCT_CATEGORY",

    /**
     * value: "DISCOUNT_SHIPPING"
     * @const
     */
    "DISCOUNT_SHIPPING": "DISCOUNT_SHIPPING",

    /**
     * value: "TIP"
     * @const
     */
    "TIP": "TIP",

    /**
     * value: "OTHER"
     * @const
     */
    "OTHER": "OTHER",

    /**
     * value: "unknown_default_open_api"
     * @const
     */
    "unknown_default_open_api": "unknown_default_open_api"
};


export default UpdateOrderItemRequest;
