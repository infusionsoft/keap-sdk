/**
 * Keap REST API
 * Keap REST Core Service
 *
 * The version of the OpenAPI document: 2.70.0.852640
 * Contact: api@keap.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The RestApplyCommissionRequest model module.
 * @module keap.core.v2/model/RestApplyCommissionRequest
 */
class RestApplyCommissionRequest {
    /**
     * Constructs a new <code>RestApplyCommissionRequest</code>.
     * @alias module:keap.core.v2/model/RestApplyCommissionRequest
     * @param affiliateId {String} The affiliate id
     * @param payoutType {module:keap.core.v2/model/RestApplyCommissionRequest.PayoutTypeEnum} The payout type
     */
    constructor(affiliateId, payoutType) { 
        
        RestApplyCommissionRequest.initialize(this, affiliateId, payoutType);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, affiliateId, payoutType) { 
        obj['affiliate_id'] = affiliateId;
        obj['payout_type'] = payoutType;
    }

    /**
     * Constructs a <code>RestApplyCommissionRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:keap.core.v2/model/RestApplyCommissionRequest} obj Optional instance to populate.
     * @return {module:keap.core.v2/model/RestApplyCommissionRequest} The populated <code>RestApplyCommissionRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RestApplyCommissionRequest();

            if (data.hasOwnProperty('affiliate_id')) {
                obj['affiliate_id'] = ApiClient.convertToType(data['affiliate_id'], 'String');
            }
            if (data.hasOwnProperty('commission_amount')) {
                obj['commission_amount'] = ApiClient.convertToType(data['commission_amount'], 'Number');
            }
            if (data.hasOwnProperty('commission_date')) {
                obj['commission_date'] = ApiClient.convertToType(data['commission_date'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('pay_percent')) {
                obj['pay_percent'] = ApiClient.convertToType(data['pay_percent'], 'Number');
            }
            if (data.hasOwnProperty('payout_type')) {
                obj['payout_type'] = ApiClient.convertToType(data['payout_type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RestApplyCommissionRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RestApplyCommissionRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of RestApplyCommissionRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['affiliate_id'] && !(typeof data['affiliate_id'] === 'string' || data['affiliate_id'] instanceof String)) {
            throw new Error("Expected the field `affiliate_id` to be a primitive type in the JSON string but got " + data['affiliate_id']);
        }
        // ensure the json data is a string
        if (data['commission_date'] && !(typeof data['commission_date'] === 'string' || data['commission_date'] instanceof String)) {
            throw new Error("Expected the field `commission_date` to be a primitive type in the JSON string but got " + data['commission_date']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['payout_type'] && !(typeof data['payout_type'] === 'string' || data['payout_type'] instanceof String)) {
            throw new Error("Expected the field `payout_type` to be a primitive type in the JSON string but got " + data['payout_type']);
        }

        return true;
    }


}

RestApplyCommissionRequest.RequiredProperties = ["affiliate_id", "payout_type"];

/**
 * The affiliate id
 * @member {String} affiliate_id
 */
RestApplyCommissionRequest.prototype['affiliate_id'] = undefined;

/**
 * @member {Number} commission_amount
 */
RestApplyCommissionRequest.prototype['commission_amount'] = undefined;

/**
 * @member {String} commission_date
 */
RestApplyCommissionRequest.prototype['commission_date'] = undefined;

/**
 * @member {String} description
 */
RestApplyCommissionRequest.prototype['description'] = undefined;

/**
 * @member {Number} pay_percent
 */
RestApplyCommissionRequest.prototype['pay_percent'] = undefined;

/**
 * The payout type
 * @member {module:keap.core.v2/model/RestApplyCommissionRequest.PayoutTypeEnum} payout_type
 */
RestApplyCommissionRequest.prototype['payout_type'] = undefined;





/**
 * Allowed values for the <code>payout_type</code> property.
 * @enum {String}
 * @readonly
 */
RestApplyCommissionRequest['PayoutTypeEnum'] = {

    /**
     * value: "UPFRONT"
     * @const
     */
    "UPFRONT": "UPFRONT",

    /**
     * value: "PAYMENT_RECEIVED"
     * @const
     */
    "PAYMENT_RECEIVED": "PAYMENT_RECEIVED",

    /**
     * value: "unknown_default_open_api"
     * @const
     */
    "unknown_default_open_api": "unknown_default_open_api"
};


export default RestApplyCommissionRequest;
