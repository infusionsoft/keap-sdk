/**
 * Keap REST API
 * Keap REST Core Service
 *
 * The version of the OpenAPI document: 2.70.0.866784-hf-202510132126
 * Contact: api@keap.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CardInfo model module.
 * @module keap.core.v2/model/CardInfo
 */
class CardInfo {
    /**
     * Constructs a new <code>CardInfo</code>.
     * @alias module:keap.core.v2/model/CardInfo
     */
    constructor() { 
        
        CardInfo.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CardInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:keap.core.v2/model/CardInfo} obj Optional instance to populate.
     * @return {module:keap.core.v2/model/CardInfo} The populated <code>CardInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CardInfo();

            if (data.hasOwnProperty('brand')) {
                obj['brand'] = ApiClient.convertToType(data['brand'], 'String');
            }
            if (data.hasOwnProperty('card_type')) {
                obj['card_type'] = ApiClient.convertToType(data['card_type'], 'String');
            }
            if (data.hasOwnProperty('expiration_month')) {
                obj['expiration_month'] = ApiClient.convertToType(data['expiration_month'], 'String');
            }
            if (data.hasOwnProperty('expiration_year')) {
                obj['expiration_year'] = ApiClient.convertToType(data['expiration_year'], 'String');
            }
            if (data.hasOwnProperty('last_four')) {
                obj['last_four'] = ApiClient.convertToType(data['last_four'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CardInfo</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CardInfo</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['brand'] && !(typeof data['brand'] === 'string' || data['brand'] instanceof String)) {
            throw new Error("Expected the field `brand` to be a primitive type in the JSON string but got " + data['brand']);
        }
        // ensure the json data is a string
        if (data['card_type'] && !(typeof data['card_type'] === 'string' || data['card_type'] instanceof String)) {
            throw new Error("Expected the field `card_type` to be a primitive type in the JSON string but got " + data['card_type']);
        }
        // ensure the json data is a string
        if (data['expiration_month'] && !(typeof data['expiration_month'] === 'string' || data['expiration_month'] instanceof String)) {
            throw new Error("Expected the field `expiration_month` to be a primitive type in the JSON string but got " + data['expiration_month']);
        }
        // ensure the json data is a string
        if (data['expiration_year'] && !(typeof data['expiration_year'] === 'string' || data['expiration_year'] instanceof String)) {
            throw new Error("Expected the field `expiration_year` to be a primitive type in the JSON string but got " + data['expiration_year']);
        }
        // ensure the json data is a string
        if (data['last_four'] && !(typeof data['last_four'] === 'string' || data['last_four'] instanceof String)) {
            throw new Error("Expected the field `last_four` to be a primitive type in the JSON string but got " + data['last_four']);
        }

        return true;
    }


}



/**
 * @member {String} brand
 */
CardInfo.prototype['brand'] = undefined;

/**
 * The card type. Valid values are: CREDIT, DEBIT, PREPAID.
 * @member {module:keap.core.v2/model/CardInfo.CardTypeEnum} card_type
 */
CardInfo.prototype['card_type'] = undefined;

/**
 * @member {String} expiration_month
 */
CardInfo.prototype['expiration_month'] = undefined;

/**
 * @member {String} expiration_year
 */
CardInfo.prototype['expiration_year'] = undefined;

/**
 * @member {String} last_four
 */
CardInfo.prototype['last_four'] = undefined;





/**
 * Allowed values for the <code>card_type</code> property.
 * @enum {String}
 * @readonly
 */
CardInfo['CardTypeEnum'] = {

    /**
     * value: "CREDIT"
     * @const
     */
    "CREDIT": "CREDIT",

    /**
     * value: "DEBIT"
     * @const
     */
    "DEBIT": "DEBIT",

    /**
     * value: "PREPAID"
     * @const
     */
    "PREPAID": "PREPAID",

    /**
     * value: "ACH"
     * @const
     */
    "ACH": "ACH",

    /**
     * value: "unknown_default_open_api"
     * @const
     */
    "unknown_default_open_api": "unknown_default_open_api"
};


export default CardInfo;
