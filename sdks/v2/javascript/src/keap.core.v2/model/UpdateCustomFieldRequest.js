/**
 * Keap REST API
 * Keap REST Core Service
 *
 * The version of the OpenAPI document: 2.70.0.812056
 * Contact: api@keap.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PipelineCustomFieldDisplayOptions from './PipelineCustomFieldDisplayOptions';
import PipelineCustomFieldOptions from './PipelineCustomFieldOptions';
import PipelineCustomFieldPropertyValidator from './PipelineCustomFieldPropertyValidator';

/**
 * The UpdateCustomFieldRequest model module.
 * @module keap.core.v2/model/UpdateCustomFieldRequest
 */
class UpdateCustomFieldRequest {
    /**
     * Constructs a new <code>UpdateCustomFieldRequest</code>.
     * Represents a request to update a custom field.
     * @alias module:keap.core.v2/model/UpdateCustomFieldRequest
     * @param label {String} The label of the custom field.
     * @param description {String} The description of the custom field.
     * @param hint {String} The hint for the custom field.
     * @param helperText {String} The helper text for the custom field.
     * @param defaultValue {Object} The default value of the custom field.
     * @param displayOptions {module:keap.core.v2/model/PipelineCustomFieldDisplayOptions} The display options for the custom field.
     * @param options {module:keap.core.v2/model/PipelineCustomFieldOptions} The options for the custom field.
     * @param validators {Array.<module:keap.core.v2/model/PipelineCustomFieldPropertyValidator>} The validators for the custom field.
     * @param deleted {Boolean} Indicates whether the custom field is deleted.
     */
    constructor(label, description, hint, helperText, defaultValue, displayOptions, options, validators, deleted) { 
        
        UpdateCustomFieldRequest.initialize(this, label, description, hint, helperText, defaultValue, displayOptions, options, validators, deleted);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, label, description, hint, helperText, defaultValue, displayOptions, options, validators, deleted) { 
        obj['label'] = label;
        obj['description'] = description;
        obj['hint'] = hint;
        obj['helper_text'] = helperText;
        obj['default_value'] = defaultValue;
        obj['display_options'] = displayOptions;
        obj['options'] = options;
        obj['validators'] = validators;
        obj['deleted'] = deleted;
    }

    /**
     * Constructs a <code>UpdateCustomFieldRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:keap.core.v2/model/UpdateCustomFieldRequest} obj Optional instance to populate.
     * @return {module:keap.core.v2/model/UpdateCustomFieldRequest} The populated <code>UpdateCustomFieldRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateCustomFieldRequest();

            if (data.hasOwnProperty('label')) {
                obj['label'] = ApiClient.convertToType(data['label'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('hint')) {
                obj['hint'] = ApiClient.convertToType(data['hint'], 'String');
            }
            if (data.hasOwnProperty('helper_text')) {
                obj['helper_text'] = ApiClient.convertToType(data['helper_text'], 'String');
            }
            if (data.hasOwnProperty('default_value')) {
                obj['default_value'] = ApiClient.convertToType(data['default_value'], Object);
            }
            if (data.hasOwnProperty('display_options')) {
                obj['display_options'] = ApiClient.convertToType(data['display_options'], PipelineCustomFieldDisplayOptions);
            }
            if (data.hasOwnProperty('options')) {
                obj['options'] = ApiClient.convertToType(data['options'], PipelineCustomFieldOptions);
            }
            if (data.hasOwnProperty('validators')) {
                obj['validators'] = ApiClient.convertToType(data['validators'], [PipelineCustomFieldPropertyValidator]);
            }
            if (data.hasOwnProperty('deleted')) {
                obj['deleted'] = ApiClient.convertToType(data['deleted'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateCustomFieldRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateCustomFieldRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of UpdateCustomFieldRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['label'] && !(typeof data['label'] === 'string' || data['label'] instanceof String)) {
            throw new Error("Expected the field `label` to be a primitive type in the JSON string but got " + data['label']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['hint'] && !(typeof data['hint'] === 'string' || data['hint'] instanceof String)) {
            throw new Error("Expected the field `hint` to be a primitive type in the JSON string but got " + data['hint']);
        }
        // ensure the json data is a string
        if (data['helper_text'] && !(typeof data['helper_text'] === 'string' || data['helper_text'] instanceof String)) {
            throw new Error("Expected the field `helper_text` to be a primitive type in the JSON string but got " + data['helper_text']);
        }
        // validate the optional field `display_options`
        if (data['display_options']) { // data not null
          PipelineCustomFieldDisplayOptions.validateJSON(data['display_options']);
        }
        // validate the optional field `options`
        if (data['options']) { // data not null
          PipelineCustomFieldOptions.validateJSON(data['options']);
        }
        if (data['validators']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['validators'])) {
                throw new Error("Expected the field `validators` to be an array in the JSON data but got " + data['validators']);
            }
            // validate the optional field `validators` (array)
            for (const item of data['validators']) {
                PipelineCustomFieldPropertyValidator.validateJSON(item);
            };
        }

        return true;
    }


}

UpdateCustomFieldRequest.RequiredProperties = ["label", "description", "hint", "helper_text", "default_value", "display_options", "options", "validators", "deleted"];

/**
 * The label of the custom field.
 * @member {String} label
 */
UpdateCustomFieldRequest.prototype['label'] = undefined;

/**
 * The description of the custom field.
 * @member {String} description
 */
UpdateCustomFieldRequest.prototype['description'] = undefined;

/**
 * The hint for the custom field.
 * @member {String} hint
 */
UpdateCustomFieldRequest.prototype['hint'] = undefined;

/**
 * The helper text for the custom field.
 * @member {String} helper_text
 */
UpdateCustomFieldRequest.prototype['helper_text'] = undefined;

/**
 * The default value of the custom field.
 * @member {Object} default_value
 */
UpdateCustomFieldRequest.prototype['default_value'] = undefined;

/**
 * The display options for the custom field.
 * @member {module:keap.core.v2/model/PipelineCustomFieldDisplayOptions} display_options
 */
UpdateCustomFieldRequest.prototype['display_options'] = undefined;

/**
 * The options for the custom field.
 * @member {module:keap.core.v2/model/PipelineCustomFieldOptions} options
 */
UpdateCustomFieldRequest.prototype['options'] = undefined;

/**
 * The validators for the custom field.
 * @member {Array.<module:keap.core.v2/model/PipelineCustomFieldPropertyValidator>} validators
 */
UpdateCustomFieldRequest.prototype['validators'] = undefined;

/**
 * Indicates whether the custom field is deleted.
 * @member {Boolean} deleted
 */
UpdateCustomFieldRequest.prototype['deleted'] = undefined;






export default UpdateCustomFieldRequest;
