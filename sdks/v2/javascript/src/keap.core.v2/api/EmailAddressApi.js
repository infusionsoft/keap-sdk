/**
 * Keap REST API
 * Keap REST Core Service
 *
 * The version of the OpenAPI document: 2.70.0.861953
 * Contact: api@keap.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import EmailAddressStatus from '../model/EmailAddressStatus';
import Error from '../model/Error';
import UpdateEmailAddress from '../model/UpdateEmailAddress';

/**
* EmailAddress service.
* @module keap.core.v2/api/EmailAddressApi
*/
export default class EmailAddressApi {

    /**
    * Constructs a new EmailAddressApi. 
    * @alias module:keap.core.v2/api/EmailAddressApi
    * @class
    * @param {module:keap.core.v2/ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:keap.core.v2/ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }



    /**
     * Retrieve an Email Address status
     * Retrieves the opt-in status for a given Email Address
     * @param {String} email email
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:keap.core.v2/model/EmailAddressStatus} and HTTP response
     */
    getEmailAddressStatusWithHttpInfo(email) {
      let postBody = null;
      // verify the required parameter 'email' is set
      if (email === undefined || email === null) {
        throw new Error("Missing the required parameter 'email' when calling getEmailAddressStatus");
      }

      let pathParams = {
        'email': email
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = EmailAddressStatus;
      return this.apiClient.callApi(
        '/v2/emailAddresses/{email}/status', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Retrieve an Email Address status
     * Retrieves the opt-in status for a given Email Address
     * @param {String} email email
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:keap.core.v2/model/EmailAddressStatus}
     */
    getEmailAddressStatus(email) {
      return this.getEmailAddressStatusWithHttpInfo(email)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Update an Email Address opt-in status
     * Updates an Email Address opt-in status  You may opt-in or mark an email address as _Marketable_ by including the following field in the request JSON with an opt-in reason. (This field is also shown in the complete request body sample.) The reason you provide here will help with compliance. Example reasons: \"Customer opted-in through webform\", \"Company gave explicit permission.\"  ```json \"opt_in_reason\": \"your reason for opt-in\" ``` Note that the email address status will only be updated to `Unconfirmed` (marketable) for email addresses that are currently in the following states: - `Unengaged Marketable` - `Unengaged Non-Marketable` - `Non-Marketable` - `Opt-Out: Manual`  All other existing statuses e.g. `List Unsubscribe`, `Opt-Out`, `System` etc will remain non-marketable and in their existing state.
     * @param {String} email email
     * @param {module:keap.core.v2/model/UpdateEmailAddress} updateEmailAddress updateEmailAddress
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:keap.core.v2/model/EmailAddressStatus} and HTTP response
     */
    updateEmailAddressOptStatusWithHttpInfo(email, updateEmailAddress) {
      let postBody = updateEmailAddress;
      // verify the required parameter 'email' is set
      if (email === undefined || email === null) {
        throw new Error("Missing the required parameter 'email' when calling updateEmailAddressOptStatus");
      }
      // verify the required parameter 'updateEmailAddress' is set
      if (updateEmailAddress === undefined || updateEmailAddress === null) {
        throw new Error("Missing the required parameter 'updateEmailAddress' when calling updateEmailAddressOptStatus");
      }

      let pathParams = {
        'email': email
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = EmailAddressStatus;
      return this.apiClient.callApi(
        '/v2/emailAddresses/{email}/status', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Update an Email Address opt-in status
     * Updates an Email Address opt-in status  You may opt-in or mark an email address as _Marketable_ by including the following field in the request JSON with an opt-in reason. (This field is also shown in the complete request body sample.) The reason you provide here will help with compliance. Example reasons: \"Customer opted-in through webform\", \"Company gave explicit permission.\"  ```json \"opt_in_reason\": \"your reason for opt-in\" ``` Note that the email address status will only be updated to `Unconfirmed` (marketable) for email addresses that are currently in the following states: - `Unengaged Marketable` - `Unengaged Non-Marketable` - `Non-Marketable` - `Opt-Out: Manual`  All other existing statuses e.g. `List Unsubscribe`, `Opt-Out`, `System` etc will remain non-marketable and in their existing state.
     * @param {String} email email
     * @param {module:keap.core.v2/model/UpdateEmailAddress} updateEmailAddress updateEmailAddress
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:keap.core.v2/model/EmailAddressStatus}
     */
    updateEmailAddressOptStatus(email, updateEmailAddress) {
      return this.updateEmailAddressOptStatusWithHttpInfo(email, updateEmailAddress)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


}
