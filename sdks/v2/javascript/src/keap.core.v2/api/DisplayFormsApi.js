/**
 * Keap REST API
 * Keap REST Core Service
 *
 * The version of the OpenAPI document: 2.70.0.809589
 * Contact: api@keap.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import DisplayForm from '../model/DisplayForm';
import UpdateDisplayFormRequest from '../model/UpdateDisplayFormRequest';

/**
* DisplayForms service.
* @module keap.core.v2/api/DisplayFormsApi
*/
export default class DisplayFormsApi {

    /**
    * Constructs a new DisplayFormsApi. 
    * @alias module:keap.core.v2/api/DisplayFormsApi
    * @class
    * @param {module:keap.core.v2/ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:keap.core.v2/ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }



    /**
     * Retrieves a specific display form by a pipeline ID.
     * Retrieves a specific display form by a pipeline ID.
     * @param {String} pipelineId the ID of the pipeline containing the form
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:keap.core.v2/model/DisplayForm} and HTTP response
     */
    getDisplayFormWithHttpInfo(pipelineId) {
      let postBody = null;
      // verify the required parameter 'pipelineId' is set
      if (pipelineId === undefined || pipelineId === null) {
        throw new Error("Missing the required parameter 'pipelineId' when calling getDisplayForm");
      }

      let pathParams = {
        'pipeline_id': pipelineId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = DisplayForm;
      return this.apiClient.callApi(
        '/v2/pipelines/{pipeline_id}/form', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Retrieves a specific display form by a pipeline ID.
     * Retrieves a specific display form by a pipeline ID.
     * @param {String} pipelineId the ID of the pipeline containing the form
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:keap.core.v2/model/DisplayForm}
     */
    getDisplayForm(pipelineId) {
      return this.getDisplayFormWithHttpInfo(pipelineId)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Updates a display form
     * Updates a display form
     * @param {String} pipelineId the ID of the pipeline containing the form
     * @param {module:keap.core.v2/model/UpdateDisplayFormRequest} updateDisplayFormRequest the request body containing updated display form details
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:keap.core.v2/model/DisplayForm} and HTTP response
     */
    updateDisplayFormWithHttpInfo(pipelineId, updateDisplayFormRequest) {
      let postBody = updateDisplayFormRequest;
      // verify the required parameter 'pipelineId' is set
      if (pipelineId === undefined || pipelineId === null) {
        throw new Error("Missing the required parameter 'pipelineId' when calling updateDisplayForm");
      }
      // verify the required parameter 'updateDisplayFormRequest' is set
      if (updateDisplayFormRequest === undefined || updateDisplayFormRequest === null) {
        throw new Error("Missing the required parameter 'updateDisplayFormRequest' when calling updateDisplayForm");
      }

      let pathParams = {
        'pipeline_id': pipelineId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = DisplayForm;
      return this.apiClient.callApi(
        '/v2/pipelines/{pipeline_id}/form', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Updates a display form
     * Updates a display form
     * @param {String} pipelineId the ID of the pipeline containing the form
     * @param {module:keap.core.v2/model/UpdateDisplayFormRequest} updateDisplayFormRequest the request body containing updated display form details
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:keap.core.v2/model/DisplayForm}
     */
    updateDisplayForm(pipelineId, updateDisplayFormRequest) {
      return this.updateDisplayFormWithHttpInfo(pipelineId, updateDisplayFormRequest)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


}
