/**
 * Keap REST API
 * Keap REST Core Service
 *
 * The version of the OpenAPI document: 2.70.0.866784-hf-202510132126
 * Contact: api@keap.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CreateUpdateLeadSourceCategoryRequest from '../model/CreateUpdateLeadSourceCategoryRequest';
import Error from '../model/Error';
import LeadSourceCategory from '../model/LeadSourceCategory';
import ListLeadSourceCategoriesResponse from '../model/ListLeadSourceCategoriesResponse';

/**
* LeadSourceCategories service.
* @module keap.core.v2/api/LeadSourceCategoriesApi
*/
export default class LeadSourceCategoriesApi {

    /**
    * Constructs a new LeadSourceCategoriesApi. 
    * @alias module:keap.core.v2/api/LeadSourceCategoriesApi
    * @class
    * @param {module:keap.core.v2/ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:keap.core.v2/ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }



    /**
     * Create a Lead Source Category
     * Creates a new Lead Source Category
     * @param {module:keap.core.v2/model/CreateUpdateLeadSourceCategoryRequest} createUpdateLeadSourceCategoryRequest The request object to create a new lead source category
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:keap.core.v2/model/LeadSourceCategory} and HTTP response
     */
    createLeadSourceCategoryWithHttpInfo(createUpdateLeadSourceCategoryRequest) {
      let postBody = createUpdateLeadSourceCategoryRequest;
      // verify the required parameter 'createUpdateLeadSourceCategoryRequest' is set
      if (createUpdateLeadSourceCategoryRequest === undefined || createUpdateLeadSourceCategoryRequest === null) {
        throw new Error("Missing the required parameter 'createUpdateLeadSourceCategoryRequest' when calling createLeadSourceCategory");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = LeadSourceCategory;
      return this.apiClient.callApi(
        '/v2/leadSourceCategories', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Create a Lead Source Category
     * Creates a new Lead Source Category
     * @param {module:keap.core.v2/model/CreateUpdateLeadSourceCategoryRequest} createUpdateLeadSourceCategoryRequest The request object to create a new lead source category
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:keap.core.v2/model/LeadSourceCategory}
     */
    createLeadSourceCategory(createUpdateLeadSourceCategoryRequest) {
      return this.createLeadSourceCategoryWithHttpInfo(createUpdateLeadSourceCategoryRequest)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Delete a Lead Source Category
     * Deletes the specified Lead Source Category
     * @param {String} leadSourceCategoryId The ID of a lead source category
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing HTTP response
     */
    deleteLeadSourceCategoryWithHttpInfo(leadSourceCategoryId) {
      let postBody = null;
      // verify the required parameter 'leadSourceCategoryId' is set
      if (leadSourceCategoryId === undefined || leadSourceCategoryId === null) {
        throw new Error("Missing the required parameter 'leadSourceCategoryId' when calling deleteLeadSourceCategory");
      }

      let pathParams = {
        'lead_source_category_id': leadSourceCategoryId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/v2/leadSourceCategories/{lead_source_category_id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Delete a Lead Source Category
     * Deletes the specified Lead Source Category
     * @param {String} leadSourceCategoryId The ID of a lead source category
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}
     */
    deleteLeadSourceCategory(leadSourceCategoryId) {
      return this.deleteLeadSourceCategoryWithHttpInfo(leadSourceCategoryId)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Retrieve a Lead Source Category
     * Retrieves a single Lead Source Category for a given ID
     * @param {String} leadSourceCategoryId The ID of a lead source category
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:keap.core.v2/model/LeadSourceCategory} and HTTP response
     */
    getLeadSourceCategoryWithHttpInfo(leadSourceCategoryId) {
      let postBody = null;
      // verify the required parameter 'leadSourceCategoryId' is set
      if (leadSourceCategoryId === undefined || leadSourceCategoryId === null) {
        throw new Error("Missing the required parameter 'leadSourceCategoryId' when calling getLeadSourceCategory");
      }

      let pathParams = {
        'lead_source_category_id': leadSourceCategoryId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = LeadSourceCategory;
      return this.apiClient.callApi(
        '/v2/leadSourceCategories/{lead_source_category_id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Retrieve a Lead Source Category
     * Retrieves a single Lead Source Category for a given ID
     * @param {String} leadSourceCategoryId The ID of a lead source category
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:keap.core.v2/model/LeadSourceCategory}
     */
    getLeadSourceCategory(leadSourceCategoryId) {
      return this.getLeadSourceCategoryWithHttpInfo(leadSourceCategoryId)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * List Lead Source Categories
     * Retrieves a list of Lead Source Categories
     * @param {Object} opts Optional parameters
     * @param {String} [filter] Filter to apply, allowed fields are:  - (String) `name`  You will need to apply the `==` operator to check the equality of one of the filters with your searched word, in the encoded form `%3D%3D`. For the filters listed above, here is an example:  - `filter=name%3D%3Dexample`
     * @param {String} [orderBy] Attribute and direction to order items. One of the following fields: - `name`  One of the following directions: - `asc` - `desc`
     * @param {Number} [pageSize] Total number of items to return per page
     * @param {String} [pageToken] Page token
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:keap.core.v2/model/ListLeadSourceCategoriesResponse} and HTTP response
     */
    listLeadSourceCategoriesWithHttpInfo(opts) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'filter': opts['filter'],
        'order_by': opts['orderBy'],
        'page_size': opts['pageSize'],
        'page_token': opts['pageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ListLeadSourceCategoriesResponse;
      return this.apiClient.callApi(
        '/v2/leadSourceCategories', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * List Lead Source Categories
     * Retrieves a list of Lead Source Categories
     * @param {Object} opts Optional parameters
     * @param {String} opts.filter Filter to apply, allowed fields are:  - (String) `name`  You will need to apply the `==` operator to check the equality of one of the filters with your searched word, in the encoded form `%3D%3D`. For the filters listed above, here is an example:  - `filter=name%3D%3Dexample`
     * @param {String} opts.orderBy Attribute and direction to order items. One of the following fields: - `name`  One of the following directions: - `asc` - `desc`
     * @param {Number} opts.pageSize Total number of items to return per page
     * @param {String} opts.pageToken Page token
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:keap.core.v2/model/ListLeadSourceCategoriesResponse}
     */
    listLeadSourceCategories(opts) {
      return this.listLeadSourceCategoriesWithHttpInfo(opts)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Update a Lead Source Category
     * Updates a Lead Source Category
     * @param {String} leadSourceCategoryId The ID of a lead source category
     * @param {module:keap.core.v2/model/CreateUpdateLeadSourceCategoryRequest} createUpdateLeadSourceCategoryRequest The request object to update a lead source category
     * @param {Object} opts Optional parameters
     * @param {Array.<module:keap.core.v2/model/String>} [updateMask] An optional list of properties to be updated. If set, only the provided properties will be updated and others will be skipped.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:keap.core.v2/model/LeadSourceCategory} and HTTP response
     */
    updateLeadSourceCategoryWithHttpInfo(leadSourceCategoryId, createUpdateLeadSourceCategoryRequest, opts) {
      opts = opts || {};
      let postBody = createUpdateLeadSourceCategoryRequest;
      // verify the required parameter 'leadSourceCategoryId' is set
      if (leadSourceCategoryId === undefined || leadSourceCategoryId === null) {
        throw new Error("Missing the required parameter 'leadSourceCategoryId' when calling updateLeadSourceCategory");
      }
      // verify the required parameter 'createUpdateLeadSourceCategoryRequest' is set
      if (createUpdateLeadSourceCategoryRequest === undefined || createUpdateLeadSourceCategoryRequest === null) {
        throw new Error("Missing the required parameter 'createUpdateLeadSourceCategoryRequest' when calling updateLeadSourceCategory");
      }

      let pathParams = {
        'lead_source_category_id': leadSourceCategoryId
      };
      let queryParams = {
        'update_mask': this.apiClient.buildCollectionParam(opts['updateMask'], 'multi')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = LeadSourceCategory;
      return this.apiClient.callApi(
        '/v2/leadSourceCategories/{lead_source_category_id}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Update a Lead Source Category
     * Updates a Lead Source Category
     * @param {String} leadSourceCategoryId The ID of a lead source category
     * @param {module:keap.core.v2/model/CreateUpdateLeadSourceCategoryRequest} createUpdateLeadSourceCategoryRequest The request object to update a lead source category
     * @param {Object} opts Optional parameters
     * @param {Array.<module:keap.core.v2/model/String>} opts.updateMask An optional list of properties to be updated. If set, only the provided properties will be updated and others will be skipped.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:keap.core.v2/model/LeadSourceCategory}
     */
    updateLeadSourceCategory(leadSourceCategoryId, createUpdateLeadSourceCategoryRequest, opts) {
      return this.updateLeadSourceCategoryWithHttpInfo(leadSourceCategoryId, createUpdateLeadSourceCategoryRequest, opts)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


}
